{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"themes/geek/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/geek/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/geek/source/js/js.js","path":"js/js.js","modified":1,"renderable":1},{"_id":"themes/geek/source/logo.png","path":"logo.png","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/echo.js","path":"libs/echo.js","modified":1,"renderable":1},{"_id":"themes/geek/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/jquery.min.js","path":"libs/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/HELP-US-OUT.txt","path":"libs/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/highlight.pack.js","path":"libs/highlight/highlight.pack.js","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/a11y-dark.css","path":"libs/highlight/styles/a11y-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/a11y-light.css","path":"libs/highlight/styles/a11y-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/an-old-hope.css","path":"libs/highlight/styles/an-old-hope.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/agate.css","path":"libs/highlight/styles/agate.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/arduino-light.css","path":"libs/highlight/styles/arduino-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/androidstudio.css","path":"libs/highlight/styles/androidstudio.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/arta.css","path":"libs/highlight/styles/arta.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/ascetic.css","path":"libs/highlight/styles/ascetic.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-cave-light.css","path":"libs/highlight/styles/atelier-cave-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-cave-dark.css","path":"libs/highlight/styles/atelier-cave-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-dune-dark.css","path":"libs/highlight/styles/atelier-dune-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-dune-light.css","path":"libs/highlight/styles/atelier-dune-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-estuary-dark.css","path":"libs/highlight/styles/atelier-estuary-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-estuary-light.css","path":"libs/highlight/styles/atelier-estuary-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-forest-dark.css","path":"libs/highlight/styles/atelier-forest-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-heath-dark.css","path":"libs/highlight/styles/atelier-heath-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-forest-light.css","path":"libs/highlight/styles/atelier-forest-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-heath-light.css","path":"libs/highlight/styles/atelier-heath-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-lakeside-dark.css","path":"libs/highlight/styles/atelier-lakeside-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-lakeside-light.css","path":"libs/highlight/styles/atelier-lakeside-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-plateau-dark.css","path":"libs/highlight/styles/atelier-plateau-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-plateau-light.css","path":"libs/highlight/styles/atelier-plateau-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-savanna-dark.css","path":"libs/highlight/styles/atelier-savanna-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-savanna-light.css","path":"libs/highlight/styles/atelier-savanna-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-seaside-dark.css","path":"libs/highlight/styles/atelier-seaside-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-seaside-light.css","path":"libs/highlight/styles/atelier-seaside-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-sulphurpool-dark.css","path":"libs/highlight/styles/atelier-sulphurpool-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atelier-sulphurpool-light.css","path":"libs/highlight/styles/atelier-sulphurpool-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-dark-reasonable.css","path":"libs/highlight/styles/atom-one-dark-reasonable.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-dark.css","path":"libs/highlight/styles/atom-one-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-light.css","path":"libs/highlight/styles/atom-one-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/brown-paper.css","path":"libs/highlight/styles/brown-paper.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/codepen-embed.css","path":"libs/highlight/styles/codepen-embed.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/color-brewer.css","path":"libs/highlight/styles/color-brewer.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/darcula.css","path":"libs/highlight/styles/darcula.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/brown-papersq.png","path":"libs/highlight/styles/brown-papersq.png","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/dark.css","path":"libs/highlight/styles/dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/default.css","path":"libs/highlight/styles/default.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/docco.css","path":"libs/highlight/styles/docco.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/darkula.css","path":"libs/highlight/styles/darkula.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/dracula.css","path":"libs/highlight/styles/dracula.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/foundation.css","path":"libs/highlight/styles/foundation.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/far.css","path":"libs/highlight/styles/far.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/github-gist.css","path":"libs/highlight/styles/github-gist.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/github.css","path":"libs/highlight/styles/github.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/gml.css","path":"libs/highlight/styles/gml.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/googlecode.css","path":"libs/highlight/styles/googlecode.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/gradient-dark.css","path":"libs/highlight/styles/gradient-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/hopscotch.css","path":"libs/highlight/styles/hopscotch.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/gruvbox-light.css","path":"libs/highlight/styles/gruvbox-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/grayscale.css","path":"libs/highlight/styles/grayscale.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/hybrid.css","path":"libs/highlight/styles/hybrid.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/idea.css","path":"libs/highlight/styles/idea.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/gruvbox-dark.css","path":"libs/highlight/styles/gruvbox-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/ir-black.css","path":"libs/highlight/styles/ir-black.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/isbl-editor-light.css","path":"libs/highlight/styles/isbl-editor-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/isbl-editor-dark.css","path":"libs/highlight/styles/isbl-editor-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/kimbie.dark.css","path":"libs/highlight/styles/kimbie.dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/kimbie.light.css","path":"libs/highlight/styles/kimbie.light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/magula.css","path":"libs/highlight/styles/magula.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/lightfair.css","path":"libs/highlight/styles/lightfair.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/mono-blue.css","path":"libs/highlight/styles/mono-blue.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/monokai-sublime.css","path":"libs/highlight/styles/monokai-sublime.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/monokai.css","path":"libs/highlight/styles/monokai.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/night-owl.css","path":"libs/highlight/styles/night-owl.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/nord.css","path":"libs/highlight/styles/nord.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/obsidian.css","path":"libs/highlight/styles/obsidian.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/pojoaque.css","path":"libs/highlight/styles/pojoaque.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/paraiso-dark.css","path":"libs/highlight/styles/paraiso-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/ocean.css","path":"libs/highlight/styles/ocean.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/pojoaque.jpg","path":"libs/highlight/styles/pojoaque.jpg","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/purebasic.css","path":"libs/highlight/styles/purebasic.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/qtcreator_dark.css","path":"libs/highlight/styles/qtcreator_dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/qtcreator_light.css","path":"libs/highlight/styles/qtcreator_light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/rainbow.css","path":"libs/highlight/styles/rainbow.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/school-book.png","path":"libs/highlight/styles/school-book.png","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/shades-of-purple.css","path":"libs/highlight/styles/shades-of-purple.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/routeros.css","path":"libs/highlight/styles/routeros.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/school-book.css","path":"libs/highlight/styles/school-book.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/solarized-dark.css","path":"libs/highlight/styles/solarized-dark.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-blue.css","path":"libs/highlight/styles/tomorrow-night-blue.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/solarized-light.css","path":"libs/highlight/styles/solarized-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/sunburst.css","path":"libs/highlight/styles/sunburst.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-eighties.css","path":"libs/highlight/styles/tomorrow-night-eighties.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-bright.css","path":"libs/highlight/styles/tomorrow-night-bright.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night.css","path":"libs/highlight/styles/tomorrow-night.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow.css","path":"libs/highlight/styles/tomorrow.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/xcode.css","path":"libs/highlight/styles/xcode.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/vs2015.css","path":"libs/highlight/styles/vs2015.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/vs.css","path":"libs/highlight/styles/vs.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/xt256.css","path":"libs/highlight/styles/xt256.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/zenburn.css","path":"libs/highlight/styles/zenburn.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/animated.less","path":"libs/font-awesome/less/animated.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/bordered-pulled.less","path":"libs/font-awesome/less/bordered-pulled.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/core.less","path":"libs/font-awesome/less/core.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/fixed-width.less","path":"libs/font-awesome/less/fixed-width.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/font-awesome.less","path":"libs/font-awesome/less/font-awesome.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/mixins.less","path":"libs/font-awesome/less/mixins.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/icons.less","path":"libs/font-awesome/less/icons.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/larger.less","path":"libs/font-awesome/less/larger.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/list.less","path":"libs/font-awesome/less/list.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/path.less","path":"libs/font-awesome/less/path.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/screen-reader.less","path":"libs/font-awesome/less/screen-reader.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/rotated-flipped.less","path":"libs/font-awesome/less/rotated-flipped.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/stacked.less","path":"libs/font-awesome/less/stacked.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/less/variables.less","path":"libs/font-awesome/less/variables.less","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/paraiso-light.css","path":"libs/highlight/styles/paraiso-light.css","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/highlight/styles/railscasts.css","path":"libs/highlight/styles/railscasts.css","modified":1,"renderable":1},{"_id":"themes/geek/source/me.png","path":"me.png","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/scss/font-awesome.scss","path":"libs/font-awesome/scss/font-awesome.scss","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"5069102bf460d18df726486c0855df71bcf72179","modified":1585295561095},{"_id":"themes/geek/.DS_Store","hash":"bf7b20f91ed6ad7fad2c45c79e5c8c5489db6750","modified":1585814318412},{"_id":"source/robots.txt","hash":"81aa9bddceea5e48482f76bc5ffd519f95adf7b8","modified":1585560686524},{"_id":"themes/geek/.gitignore","hash":"824c6bad36ef799350c37bcd0fe5a1a88295d2f8","modified":1585211603474},{"_id":"themes/geek/LICENSE","hash":"e8b834a986c4367c3b8dbee511b93f94f3145947","modified":1585211603475},{"_id":"themes/geek/_config.yml","hash":"3e8c86a6f12e73e6b652262d396bfd9316cdfc5d","modified":1585559475844},{"_id":"themes/geek/README.md","hash":"51e06e390d3314d8fd8607a3694c22805fa10573","modified":1585211603475},{"_id":"source/_posts/.DS_Store","hash":"b20bc44b5eea279c56a9cf1789f57fa6a1aa7053","modified":1585740215103},{"_id":"source/_posts/Centos7系统VPS配置记录.md","hash":"be546e7b304cd3016e8280549f1a0be955383276","modified":1585550428567},{"_id":"source/_posts/Mac设置终端走代理.md","hash":"263ef2d7d9041e0b39ba707e1ed78544e6914bba","modified":1585554102942},{"_id":"source/_posts/Markdown写作示例.md","hash":"bd66d77b58cf30526171f6c31eef4ac117519429","modified":1585735757609},{"_id":"source/_posts/PT站点备忘.md","hash":"0071f99af2f77ffbf4862e2a8a66043156c68c56","modified":1585654246206},{"_id":"source/_posts/iOS开发中的知识点.md","hash":"41fb00e5b492224ae23f874674f37a2ec5aa2da6","modified":1585824516595},{"_id":"source/_posts/使用Mac自带脚本一键部署Hexo.md","hash":"fdb1fc7f6cfab1ada19f10202adf0e70eeace372","modified":1585550425127},{"_id":"source/_posts/天涯神贴之意淫中国未来.md","hash":"4ff4ad3dddfed6a89751a0bb8150494d49d07554","modified":1585554011178},{"_id":"source/about/index.md","hash":"19aad7a9f25084fee8ef58a193f37a5ea51af844","modified":1585297835053},{"_id":"source/soft/index.md","hash":"a8000460db86b34353a3f96bd2de519866a3c34f","modified":1585637870912},{"_id":"source/links/index.md","hash":"629a36715d5d93b3e729d0a878c81b8ef2987e37","modified":1585297450812},{"_id":"themes/geek/layout/index.ejs","hash":"1bf40e757764d950af89a0baaf793b27946bbc92","modified":1585211603483},{"_id":"themes/geek/layout/post.ejs","hash":"4f37050cecadaf0826a90dc02e5746b1162b02cf","modified":1585211603483},{"_id":"themes/geek/layout/layout.ejs","hash":"710b13e895e7a9cc2341874fafbfeef1ae9b7279","modified":1585211603483},{"_id":"themes/geek/source/.DS_Store","hash":"e1d9a48887570ba56fa463fb4e5972b598bb79d1","modified":1585814515533},{"_id":"themes/geek/source/favicon.ico","hash":"25bf3e78d9e80be41c60519c6762468988bfc167","modified":1585275965973},{"_id":"themes/geek/layout/_partial/footer.ejs","hash":"3a78ed1d1f3bfd962ebf2ff253cd9f54f5de55e8","modified":1585563931292},{"_id":"themes/geek/layout/_partial/head.ejs","hash":"1616937709409095f732b088d5b6cb406befdda5","modified":1585536873155},{"_id":"themes/geek/layout/_partial/nav.ejs","hash":"42e47f3014a43c8589adfa1f7f34355a586b1ec5","modified":1585211603483},{"_id":"themes/geek/source/css/style.styl","hash":"7f2970c1b1f8ff89de90739725526ebe2686e49f","modified":1585211603485},{"_id":"themes/geek/source/js/js.js","hash":"0fb795dc0d1c2da9bee007a73fe246a03c88626b","modified":1585211603489},{"_id":"themes/geek/source/libs/.DS_Store","hash":"fd3b0f3fb5b52e1105f1aad2cc6a2f4356925deb","modified":1585814515535},{"_id":"themes/geek/source/logo.png","hash":"f8e2caa981a79889fa58be8b8277ad6854caf447","modified":1585211603487},{"_id":"themes/geek/source/libs/echo.js","hash":"72fe51ad4750c38d8502f66d5278a4b16a065773","modified":1585563793217},{"_id":"themes/geek/source/img/.DS_Store","hash":"c451d1072f18cbcc8255b9659cdf8642a208d05c","modified":1585306936619},{"_id":"themes/geek/imgs/2.png","hash":"f63b6574c5f522b24e2cee18ba6b40b0676365e3","modified":1585211603482},{"_id":"themes/geek/source/img/logo.png","hash":"a39ab42c54f70e00ef7e7729d8162efbbe635275","modified":1585548226043},{"_id":"themes/geek/source/libs/jquery.min.js","hash":"37b1db88b57438f1072a8ebc7559c909c9d3a682","modified":1585211603525},{"_id":"themes/geek/source/css/_partial/index.styl","hash":"7750090da83d1a477d1735bed152434b2e9053ab","modified":1585211603484},{"_id":"themes/geek/source/css/_partial/post.styl","hash":"23aba61940dd2f9719c778318bbaa92e859f6b60","modified":1585813823476},{"_id":"themes/geek/source/css/_partial/markdown.styl","hash":"ec536affb40d91a181b6fa1df22672a07188671a","modified":1585814828352},{"_id":"themes/geek/source/libs/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1585211603489},{"_id":"themes/geek/source/libs/highlight/.DS_Store","hash":"f593253a7fbc36def8c0e2c5fe9943b1b784c2c3","modified":1585814498562},{"_id":"themes/geek/logo.png","hash":"3cfa718af710ec5a6037e2f186096db6afad3d29","modified":1585276127673},{"_id":"themes/geek/source/libs/highlight/highlight.pack.js","hash":"e5a87508b4ce2f7e00c8f792251a0837879a6311","modified":1585211603000},{"_id":"themes/geek/source/libs/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1585211603490},{"_id":"themes/geek/source/libs/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1585211603491},{"_id":"themes/geek/source/libs/highlight/styles/a11y-dark.css","hash":"122f8c71ac1c35398e96bf209f20668195a9e144","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/a11y-light.css","hash":"3f5cde8e2278a6d52e6e4f30509588c80a3ad5a6","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/an-old-hope.css","hash":"124d4856bbd6e2cfc164914080724f1a59b9899c","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/agate.css","hash":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/arduino-light.css","hash":"141b53b2e2de6a321a695d816a836666c5e2c5e6","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/androidstudio.css","hash":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/arta.css","hash":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/ascetic.css","hash":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-cave-light.css","hash":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-cave-dark.css","hash":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-dune-dark.css","hash":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-dune-light.css","hash":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-estuary-dark.css","hash":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-estuary-light.css","hash":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-forest-dark.css","hash":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-heath-dark.css","hash":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-forest-light.css","hash":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-heath-light.css","hash":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-lakeside-dark.css","hash":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-lakeside-light.css","hash":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-plateau-dark.css","hash":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-plateau-light.css","hash":"9731db1052f23351c983210701edd3f5ceed343f","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-savanna-dark.css","hash":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-savanna-light.css","hash":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-seaside-dark.css","hash":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-seaside-light.css","hash":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-sulphurpool-dark.css","hash":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atelier-sulphurpool-light.css","hash":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-dark-reasonable.css","hash":"90e194ba1c1fe2ca1b5f40b5eb7c29f40ab66ff4","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/atom-one-light.css","hash":"eda63d8cce440dbf3bb823e10577a134e9941deb","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/brown-paper.css","hash":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/codepen-embed.css","hash":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/color-brewer.css","hash":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/darcula.css","hash":"617241bc95a5dbbd741820bf296155b90e22d61b","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/dark.css","hash":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/default.css","hash":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/docco.css","hash":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/darkula.css","hash":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/dracula.css","hash":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/foundation.css","hash":"29d960268ca944b5537ff2d2e70d620339dcd5d5","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/far.css","hash":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/github-gist.css","hash":"8cfbcbf4c0491e44e6b073c95a04cc401cb11ab2","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/gml.css","hash":"0f3f5502247b00ce37dc2b362a6984305001dd50","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/googlecode.css","hash":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/gradient-dark.css","hash":"e49b73bab4446ec2dbc0befb860a1fdc27bf1b42","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/hopscotch.css","hash":"3d258ff6f84900ad9abbe43f4ec8b8152c72e887","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/gruvbox-light.css","hash":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/grayscale.css","hash":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/hybrid.css","hash":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/idea.css","hash":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/gruvbox-dark.css","hash":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/ir-black.css","hash":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/isbl-editor-light.css","hash":"41baadd11cf10bab67128dd104f704fdd149318e","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/isbl-editor-dark.css","hash":"73d2282192e403868998cff2e77093ace8a6e5fb","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/kimbie.dark.css","hash":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/kimbie.light.css","hash":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/magula.css","hash":"8f5cfb7c23c705de7c95577563eb79beb49b68f6","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/lightfair.css","hash":"3bdc4517354b7acc495562d8b4937c7a40a89f06","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/mono-blue.css","hash":"3163f08756efa9e68e87addf20750e5650cdb8e4","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/monokai-sublime.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/monokai.css","hash":"99ab7678d541bc02a8d38de83a289c5e549a20ce","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/night-owl.css","hash":"d067142aeb74bfdcdec4acebb3241b3e79461bda","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/nord.css","hash":"98dfcd6eee4968fb4c634784cb048a98169b1bc8","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/obsidian.css","hash":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/pojoaque.css","hash":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/paraiso-dark.css","hash":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/ocean.css","hash":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/purebasic.css","hash":"e6bb7a57221bed7a601dc9d8d41d9b1425e2dea6","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/qtcreator_dark.css","hash":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/qtcreator_light.css","hash":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/rainbow.css","hash":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/shades-of-purple.css","hash":"4d5b44a1615173d02b223ba2cce220ab70e09650","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/routeros.css","hash":"fc5db7c8f18d6b31ad92df21a51e7867d459af19","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/school-book.css","hash":"6c4198b6ffde866f5e2fe9172aee094065f9774a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-blue.css","hash":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/sunburst.css","hash":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-eighties.css","hash":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night-bright.css","hash":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow-night.css","hash":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/tomorrow.css","hash":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/xcode.css","hash":"d8a1f18e5344c2edf97921ec21a54b02745997e9","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/vs2015.css","hash":"3c7fa677de2a785d90fc6c3f7520ac1b11bfd37a","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/vs.css","hash":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/xt256.css","hash":"d9e0f7d8ab5cfd627ce085c16e7a90e1ad495516","modified":1585211603000},{"_id":"themes/geek/source/libs/highlight/styles/zenburn.css","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1585211603000},{"_id":"themes/geek/source/libs/font-awesome/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1585211603501},{"_id":"themes/geek/source/libs/font-awesome/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1585211603501},{"_id":"themes/geek/source/libs/font-awesome/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1585211603501},{"_id":"themes/geek/source/libs/font-awesome/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1585211603502},{"_id":"themes/geek/source/libs/font-awesome/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1585211603502},{"_id":"themes/geek/source/libs/font-awesome/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1585211603503},{"_id":"themes/geek/source/libs/font-awesome/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1585211603502},{"_id":"themes/geek/source/libs/font-awesome/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1585211603502},{"_id":"themes/geek/source/libs/font-awesome/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1585211603502},{"_id":"themes/geek/source/libs/font-awesome/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1585211603503},{"_id":"themes/geek/source/libs/font-awesome/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1585211603503},{"_id":"themes/geek/source/libs/font-awesome/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1585211603503},{"_id":"themes/geek/source/libs/font-awesome/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1585211603503},{"_id":"themes/geek/source/libs/font-awesome/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1585211603504},{"_id":"themes/geek/source/libs/font-awesome/scss/_bordered-pulled.scss","hash":"164b6a0a2b307cd293f4a914ab0fcdf643950374","modified":1585211603504},{"_id":"themes/geek/source/libs/font-awesome/scss/_core.scss","hash":"55a14a34267edc401b82e5ee41d8bd84fbb5da3f","modified":1585211603504},{"_id":"themes/geek/source/libs/font-awesome/scss/_animated.scss","hash":"8daf189b2f8a404495b8424b6fd1ba630dd1c2dc","modified":1585211603504},{"_id":"themes/geek/source/libs/highlight/styles/paraiso-light.css","hash":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1585211603000},{"_id":"themes/geek/source/libs/font-awesome/scss/_fixed-width.scss","hash":"224417ca266c657849afb2bbcb6dc455894ff387","modified":1585211603504},{"_id":"themes/geek/source/libs/highlight/styles/railscasts.css","hash":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1585211603000},{"_id":"themes/geek/source/libs/font-awesome/scss/_mixins.scss","hash":"4f3881034a4c11cae8cc915f288477b498a357a2","modified":1585211603505},{"_id":"themes/geek/source/libs/font-awesome/scss/_icons.scss","hash":"830e0183337d16c07b1c63838f7593a33ee87b15","modified":1585211603505},{"_id":"themes/geek/source/libs/font-awesome/scss/_larger.scss","hash":"940e1c5ebc690283bfaee92560cf15fabedbf6a9","modified":1585211603505},{"_id":"themes/geek/source/libs/font-awesome/scss/_list.scss","hash":"4b53ee01513df8b9ce76442b2d8f1851613a435c","modified":1585211603505},{"_id":"themes/geek/source/libs/font-awesome/scss/_stacked.scss","hash":"cf6752ee609af36eb293a7197c88d31ecacbbc74","modified":1585211603506},{"_id":"themes/geek/source/libs/font-awesome/scss/_screen-reader.scss","hash":"2d8563c488f68e75a28d540dd89301ee4ee08c97","modified":1585211603506},{"_id":"themes/geek/source/libs/font-awesome/scss/_path.scss","hash":"080158aeb1bf6df59ec98b2bbed44da61d9c9ca3","modified":1585211603505},{"_id":"themes/geek/source/me.png","hash":"53f3f97f22d1b3c9a2d62c8921f9383c64628704","modified":1585221373662},{"_id":"themes/geek/source/libs/font-awesome/scss/_rotated-flipped.scss","hash":"ca08a0af3da63c2f2a7d3c27a8747637744cc785","modified":1585211603506},{"_id":"themes/geek/source/libs/font-awesome/scss/_variables.scss","hash":"0d6d70535104b42e60d7f44ae6ccf9de023a7b8b","modified":1585211603506},{"_id":"themes/geek/source/libs/font-awesome/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1585211603506},{"_id":"themes/geek/imgs/1.png","hash":"75038f82935c2ee04d753b76849c4ccbf3cdd222","modified":1585211603479},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1585211603500},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1585211603500},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1585211603495},{"_id":"themes/geek/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1585211603493},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1585211603499},{"_id":"themes/geek/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1585211603497},{"_id":"public/baidusitemap.xml","hash":"82851e6e05f33e83c543bb0af63260b6d5d7a521","modified":1585824526559},{"_id":"public/atom.xml","hash":"d54a3e6b77e5dc11ae266a3eb9ccc2abf58d23a3","modified":1585824526559},{"_id":"public/sitemap.xml","hash":"eeffe64cceae687e7bfaa3181c2b186c93dd57c8","modified":1585824526559},{"_id":"public/baidu_urls.txt","hash":"844286f0279091830f8f3178b622c9470665228e","modified":1585824526559},{"_id":"public/about/index.html","hash":"520e4ec4eefd99b3cbdfc7a2b2b2887dadb7ad59","modified":1585824526559},{"_id":"public/soft/index.html","hash":"2ad7eb2e72af261faa2c15f06f1ac0c0d1a93afa","modified":1585824526559},{"_id":"public/links/index.html","hash":"310cb52c047aa6658539b57623ecd675e21de82b","modified":1585824526559},{"_id":"public/使用Mac自带脚本一键部署Hexo/index.html","hash":"cb7f7542a445d923015b4058329d67a93eda3f3f","modified":1585824526559},{"_id":"public/天涯神贴之意淫中国未来/index.html","hash":"6b125695b863bc55c7e84510517db6e6edee473c","modified":1585824526559},{"_id":"public/Mac设置终端走代理/index.html","hash":"b4d03cb861b0e8beab948a3980ed45e190e310ce","modified":1585824526559},{"_id":"public/PT站点备忘/index.html","hash":"592ef55f900044a02dcca3b8ac3a8520874bfc3d","modified":1585824526559},{"_id":"public/Markdown写作示例/index.html","hash":"4dc8022c8727241cd3545c1c75a83e331e54dce0","modified":1585824526559},{"_id":"public/archives/index.html","hash":"c0a02298660e5b671628236e1ea948deba5db6cc","modified":1585824526559},{"_id":"public/archives/2019/index.html","hash":"7d1b617b3dc511dc8bbbdd695cf0207a9f42923b","modified":1585824526559},{"_id":"public/archives/2019/08/index.html","hash":"94bdf3dd65a5d47be92cf14ab773ff246899eeba","modified":1585824526559},{"_id":"public/archives/2019/11/index.html","hash":"e1dcf1d5442f8f25a88dfa2a8939bc31b6731f52","modified":1585824526559},{"_id":"public/archives/2019/12/index.html","hash":"a5c87e3219cb1441bb70074d1fc251dd09002648","modified":1585824526559},{"_id":"public/archives/2020/index.html","hash":"c4e6fe028fe97923dc7fad03f22bf1ffce1f0695","modified":1585824526559},{"_id":"public/archives/2020/03/index.html","hash":"c4e6fe028fe97923dc7fad03f22bf1ffce1f0695","modified":1585824526559},{"_id":"public/index.html","hash":"c0a02298660e5b671628236e1ea948deba5db6cc","modified":1585824526559},{"_id":"public/iOS开发中的知识点/index.html","hash":"6e3ec568582838024ac6ed15cfdf71b8f7004ef9","modified":1585824526559},{"_id":"public/Centos7系统VPS配置记录/index.html","hash":"4c65503e4c4e57fa72e302a53dcd262e4eb7513a","modified":1585824526559},{"_id":"public/robots.txt","hash":"81aa9bddceea5e48482f76bc5ffd519f95adf7b8","modified":1585824526559},{"_id":"public/libs/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1585824526559},{"_id":"public/libs/highlight/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1585824526559},{"_id":"public/libs/highlight/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1585824526559},{"_id":"public/libs/highlight/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1585824526559},{"_id":"public/libs/font-awesome/less/bordered-pulled.less","hash":"a2c292137b17406183ad0fdbf4880fd648b9a5ca","modified":1585824526559},{"_id":"public/libs/font-awesome/less/animated.less","hash":"421f2c4e10191f148c13b8a34e5ff3f484d4c393","modified":1585824526559},{"_id":"public/libs/font-awesome/less/font-awesome.less","hash":"9ffe7422dc235450a21f019f410ed359ed151f4b","modified":1585824526559},{"_id":"public/libs/font-awesome/less/core.less","hash":"1a37352286619b789d151a06eb4b7551e4c1aaa2","modified":1585824526559},{"_id":"public/libs/font-awesome/less/fixed-width.less","hash":"ec0c24b97184dab86177660f486b8d08cd636c42","modified":1585824526559},{"_id":"public/libs/font-awesome/less/mixins.less","hash":"3c5b36b0069372b525ed8bbbcf6b3d4d2bed4e78","modified":1585824526559},{"_id":"public/libs/font-awesome/less/larger.less","hash":"e7119e82dc50540dbc3472bba7d74282815a7ecc","modified":1585824526559},{"_id":"public/libs/font-awesome/less/icons.less","hash":"0285a999eb1adad868366678c2d9365b77186a45","modified":1585824526559},{"_id":"public/libs/font-awesome/less/list.less","hash":"f53bc20884a1410d950b4a36a330c5181a8b55ab","modified":1585824526559},{"_id":"public/libs/font-awesome/less/screen-reader.less","hash":"71139132f170ebe7712836210f4d2c4905151899","modified":1585824526559},{"_id":"public/libs/font-awesome/less/rotated-flipped.less","hash":"95de5de9009714692430b04f9cd4388be8fba8f3","modified":1585824526559},{"_id":"public/libs/font-awesome/less/path.less","hash":"1afb4a849059631f76ed2a519d7fb1bd0af14802","modified":1585824526559},{"_id":"public/libs/font-awesome/less/stacked.less","hash":"f044077bc8be1a989c245254e81eb084d52d29a7","modified":1585824526559},{"_id":"public/libs/font-awesome/less/variables.less","hash":"8a5c800747705df16117cc598c1b9f512e873bfe","modified":1585824526559},{"_id":"public/libs/font-awesome/scss/font-awesome.scss","hash":"dd83648ea5bc832f87c3c1bf956c54dec065a9bd","modified":1585824526559},{"_id":"public/favicon.ico","hash":"25bf3e78d9e80be41c60519c6762468988bfc167","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1585824526559},{"_id":"public/js/js.js","hash":"0fb795dc0d1c2da9bee007a73fe246a03c88626b","modified":1585824526559},{"_id":"public/libs/echo.js","hash":"72fe51ad4750c38d8502f66d5278a4b16a065773","modified":1585824526559},{"_id":"public/libs/highlight/styles/a11y-dark.css","hash":"122f8c71ac1c35398e96bf209f20668195a9e144","modified":1585824526559},{"_id":"public/libs/highlight/styles/a11y-light.css","hash":"3f5cde8e2278a6d52e6e4f30509588c80a3ad5a6","modified":1585824526559},{"_id":"public/libs/highlight/styles/an-old-hope.css","hash":"124d4856bbd6e2cfc164914080724f1a59b9899c","modified":1585824526559},{"_id":"public/libs/highlight/styles/agate.css","hash":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1585824526559},{"_id":"public/libs/highlight/styles/arduino-light.css","hash":"141b53b2e2de6a321a695d816a836666c5e2c5e6","modified":1585824526559},{"_id":"public/libs/highlight/styles/androidstudio.css","hash":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1585824526559},{"_id":"public/libs/highlight/styles/arta.css","hash":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1585824526559},{"_id":"public/libs/highlight/styles/ascetic.css","hash":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-cave-light.css","hash":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-cave-dark.css","hash":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-dune-dark.css","hash":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-dune-light.css","hash":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-estuary-dark.css","hash":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-estuary-light.css","hash":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-forest-dark.css","hash":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-forest-light.css","hash":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-heath-dark.css","hash":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-heath-light.css","hash":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-lakeside-light.css","hash":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-lakeside-dark.css","hash":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-plateau-dark.css","hash":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-plateau-light.css","hash":"9731db1052f23351c983210701edd3f5ceed343f","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-savanna-dark.css","hash":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-seaside-dark.css","hash":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-savanna-light.css","hash":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-sulphurpool-dark.css","hash":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-sulphurpool-light.css","hash":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1585824526559},{"_id":"public/libs/highlight/styles/atelier-seaside-light.css","hash":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1585824526559},{"_id":"public/libs/highlight/styles/atom-one-dark-reasonable.css","hash":"90e194ba1c1fe2ca1b5f40b5eb7c29f40ab66ff4","modified":1585824526559},{"_id":"public/libs/highlight/styles/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1585824526559},{"_id":"public/libs/highlight/styles/atom-one-light.css","hash":"eda63d8cce440dbf3bb823e10577a134e9941deb","modified":1585824526559},{"_id":"public/libs/highlight/styles/brown-paper.css","hash":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1585824526559},{"_id":"public/libs/highlight/styles/codepen-embed.css","hash":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1585824526559},{"_id":"public/libs/highlight/styles/color-brewer.css","hash":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1585824526559},{"_id":"public/libs/highlight/styles/darcula.css","hash":"617241bc95a5dbbd741820bf296155b90e22d61b","modified":1585824526559},{"_id":"public/libs/highlight/styles/dark.css","hash":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1585824526559},{"_id":"public/libs/highlight/styles/docco.css","hash":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1585824526559},{"_id":"public/libs/highlight/styles/default.css","hash":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1585824526559},{"_id":"public/libs/highlight/styles/darkula.css","hash":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1585824526559},{"_id":"public/libs/highlight/styles/dracula.css","hash":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1585824526559},{"_id":"public/libs/highlight/styles/foundation.css","hash":"29d960268ca944b5537ff2d2e70d620339dcd5d5","modified":1585824526559},{"_id":"public/libs/highlight/styles/github-gist.css","hash":"8cfbcbf4c0491e44e6b073c95a04cc401cb11ab2","modified":1585824526559},{"_id":"public/libs/highlight/styles/far.css","hash":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1585824526559},{"_id":"public/libs/highlight/styles/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1585824526559},{"_id":"public/libs/highlight/styles/gml.css","hash":"0f3f5502247b00ce37dc2b362a6984305001dd50","modified":1585824526559},{"_id":"public/libs/highlight/styles/googlecode.css","hash":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1585824526559},{"_id":"public/libs/highlight/styles/gradient-dark.css","hash":"e49b73bab4446ec2dbc0befb860a1fdc27bf1b42","modified":1585824526559},{"_id":"public/libs/highlight/styles/hopscotch.css","hash":"3d258ff6f84900ad9abbe43f4ec8b8152c72e887","modified":1585824526559},{"_id":"public/libs/highlight/styles/gruvbox-light.css","hash":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1585824526559},{"_id":"public/libs/highlight/styles/hybrid.css","hash":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1585824526559},{"_id":"public/libs/highlight/styles/grayscale.css","hash":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1585824526559},{"_id":"public/libs/highlight/styles/idea.css","hash":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1585824526559},{"_id":"public/libs/highlight/styles/gruvbox-dark.css","hash":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1585824526559},{"_id":"public/libs/highlight/styles/isbl-editor-light.css","hash":"41baadd11cf10bab67128dd104f704fdd149318e","modified":1585824526559},{"_id":"public/libs/highlight/styles/ir-black.css","hash":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1585824526559},{"_id":"public/libs/highlight/styles/kimbie.dark.css","hash":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1585824526559},{"_id":"public/libs/highlight/styles/kimbie.light.css","hash":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1585824526559},{"_id":"public/libs/highlight/styles/isbl-editor-dark.css","hash":"73d2282192e403868998cff2e77093ace8a6e5fb","modified":1585824526559},{"_id":"public/libs/highlight/styles/magula.css","hash":"8f5cfb7c23c705de7c95577563eb79beb49b68f6","modified":1585824526559},{"_id":"public/libs/highlight/styles/mono-blue.css","hash":"3163f08756efa9e68e87addf20750e5650cdb8e4","modified":1585824526559},{"_id":"public/libs/highlight/styles/lightfair.css","hash":"3bdc4517354b7acc495562d8b4937c7a40a89f06","modified":1585824526559},{"_id":"public/libs/highlight/styles/monokai.css","hash":"99ab7678d541bc02a8d38de83a289c5e549a20ce","modified":1585824526559},{"_id":"public/libs/highlight/styles/monokai-sublime.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1585824526559},{"_id":"public/libs/highlight/styles/night-owl.css","hash":"d067142aeb74bfdcdec4acebb3241b3e79461bda","modified":1585824526559},{"_id":"public/libs/highlight/styles/nord.css","hash":"98dfcd6eee4968fb4c634784cb048a98169b1bc8","modified":1585824526559},{"_id":"public/libs/highlight/styles/pojoaque.css","hash":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1585824526559},{"_id":"public/libs/highlight/styles/obsidian.css","hash":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1585824526559},{"_id":"public/libs/highlight/styles/paraiso-dark.css","hash":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1585824526559},{"_id":"public/libs/highlight/styles/ocean.css","hash":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1585824526559},{"_id":"public/libs/highlight/styles/purebasic.css","hash":"e6bb7a57221bed7a601dc9d8d41d9b1425e2dea6","modified":1585824526559},{"_id":"public/libs/highlight/styles/qtcreator_dark.css","hash":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1585824526559},{"_id":"public/libs/highlight/styles/qtcreator_light.css","hash":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1585824526559},{"_id":"public/libs/highlight/styles/rainbow.css","hash":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1585824526559},{"_id":"public/libs/highlight/styles/shades-of-purple.css","hash":"4d5b44a1615173d02b223ba2cce220ab70e09650","modified":1585824526559},{"_id":"public/libs/highlight/styles/routeros.css","hash":"fc5db7c8f18d6b31ad92df21a51e7867d459af19","modified":1585824526559},{"_id":"public/libs/highlight/styles/school-book.css","hash":"6c4198b6ffde866f5e2fe9172aee094065f9774a","modified":1585824526559},{"_id":"public/libs/highlight/styles/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1585824526559},{"_id":"public/libs/highlight/styles/tomorrow-night-blue.css","hash":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1585824526559},{"_id":"public/libs/highlight/styles/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1585824526559},{"_id":"public/libs/highlight/styles/sunburst.css","hash":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1585824526559},{"_id":"public/libs/highlight/styles/tomorrow-night-eighties.css","hash":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1585824526559},{"_id":"public/libs/highlight/styles/tomorrow.css","hash":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1585824526559},{"_id":"public/libs/highlight/styles/tomorrow-night-bright.css","hash":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1585824526559},{"_id":"public/libs/highlight/styles/tomorrow-night.css","hash":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1585824526559},{"_id":"public/libs/highlight/styles/xcode.css","hash":"d8a1f18e5344c2edf97921ec21a54b02745997e9","modified":1585824526559},{"_id":"public/libs/highlight/styles/vs2015.css","hash":"3c7fa677de2a785d90fc6c3f7520ac1b11bfd37a","modified":1585824526559},{"_id":"public/libs/highlight/styles/vs.css","hash":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1585824526559},{"_id":"public/libs/highlight/styles/zenburn.css","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1585824526559},{"_id":"public/libs/highlight/styles/xt256.css","hash":"d9e0f7d8ab5cfd627ce085c16e7a90e1ad495516","modified":1585824526559},{"_id":"public/libs/highlight/styles/paraiso-light.css","hash":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1585824526559},{"_id":"public/libs/highlight/styles/railscasts.css","hash":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1585824526559},{"_id":"public/css/style.css","hash":"5aa83728a6eb1c08e990c43e99582a88d4ba3b17","modified":1585824526559},{"_id":"public/libs/jquery.min.js","hash":"37b1db88b57438f1072a8ebc7559c909c9d3a682","modified":1585824526559},{"_id":"public/libs/highlight/highlight.pack.js","hash":"e5a87508b4ce2f7e00c8f792251a0837879a6311","modified":1585824526559},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1585824526559},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1585824526559},{"_id":"public/logo.png","hash":"f8e2caa981a79889fa58be8b8277ad6854caf447","modified":1585824526559},{"_id":"public/img/logo.png","hash":"a39ab42c54f70e00ef7e7729d8162efbbe635275","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1585824526559},{"_id":"public/me.png","hash":"53f3f97f22d1b3c9a2d62c8921f9383c64628704","modified":1585824526559},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1585824526559}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2020-03-26T09:43:29.000Z","_content":"\n> 专长\n\n- 擅长 Ai、Fw、Br、Ae、Pr、Ps 等软件的安装与卸载\n- 熟悉 Windows、Linux、OS X、Android、iOS 等系统的开关机\n- 精通 CSS、JavaScript、PHP、C、C++、Perl、Python、Objective-C 等单词的拼写\n\n> 联系我\n\n- 邮箱：wannayoung@163.com\n- Github：https://github.com/WannaYoung\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2020-03-26 17:43:29\n---\n\n> 专长\n\n- 擅长 Ai、Fw、Br、Ae、Pr、Ps 等软件的安装与卸载\n- 熟悉 Windows、Linux、OS X、Android、iOS 等系统的开关机\n- 精通 CSS、JavaScript、PHP、C、C++、Perl、Python、Objective-C 等单词的拼写\n\n> 联系我\n\n- 邮箱：wannayoung@163.com\n- Github：https://github.com/WannaYoung\n\n","updated":"2020-03-27T08:30:35.053Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck8imz8mj0005s09k0xdg7zlq","content":"<blockquote>\n<p>专长</p>\n</blockquote>\n<ul>\n<li>擅长 Ai、Fw、Br、Ae、Pr、Ps 等软件的安装与卸载</li>\n<li>熟悉 Windows、Linux、OS X、Android、iOS 等系统的开关机</li>\n<li>精通 CSS、JavaScript、PHP、C、C++、Perl、Python、Objective-C 等单词的拼写</li>\n</ul>\n<blockquote>\n<p>联系我</p>\n</blockquote>\n<ul>\n<li>邮箱：<a href=\"mailto:wannayoung@163.com\">wannayoung@163.com</a></li>\n<li>Github：<a href=\"https://github.com/WannaYoung\" target=\"_blank\" rel=\"noopener\">https://github.com/WannaYoung</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>专长</p>\n</blockquote>\n<ul>\n<li>擅长 Ai、Fw、Br、Ae、Pr、Ps 等软件的安装与卸载</li>\n<li>熟悉 Windows、Linux、OS X、Android、iOS 等系统的开关机</li>\n<li>精通 CSS、JavaScript、PHP、C、C++、Perl、Python、Objective-C 等单词的拼写</li>\n</ul>\n<blockquote>\n<p>联系我</p>\n</blockquote>\n<ul>\n<li>邮箱：<a href=\"mailto:wannayoung@163.com\">wannayoung@163.com</a></li>\n<li>Github：<a href=\"https://github.com/WannaYoung\" target=\"_blank\" rel=\"noopener\">https://github.com/WannaYoung</a></li>\n</ul>\n"},{"title":"软件分享","date":"2020-03-26T09:42:09.000Z","_content":"\n## \u0014Mac软件\n\n| 软件图标                                                     | 软件名称         | 软件介绍                                                     |\n| :----------------------------------------------------------- | :--------------- | :----------------------------------------------------------- |\n| ![sip](https://i.loli.net/2020/03/31/rvyuEDRLh7FMWjo.png)    | **Sip**          | Sip 是一款非常不错的Mac屏幕取色软件，你只需要鼠标点一下即可取得屏幕当前位置的颜色值，支持 CSS、UIColor 等多种格式。 |\n| ![Paw](https://i.loli.net/2020/03/31/EInMcvkQDgxoaBi.png)    | **Paw**          | Paw 是一款实用的HTTP/REST服务测试工具，可以设置请求Header和参数，模拟发送请求，测试响应数据，支持OAuth, Cookies，JSONP等。 |\n| ![charles](https://i.loli.net/2020/03/31/fUFlTsabtxoOvS8.png) | **Charles**      | Charles 是一款用于HTTP信息抓包工具，可以快速有效的获得HTTP信息，非常利于开发者的网页开发和调试修改等. |\n| ![RF3](https://i.loli.net/2020/03/31/dG1vhMUrQOzJ6lj.png)    | **Reflector**    | Reflector 是一款优秀的iOS设备AirPlay屏幕镜像工具，可以让我们将iPhone、iPad的屏幕无线镜像输出到Mac上，软件还支持录制iPhone或iPad的屏幕。 |\n| ![Kaleidoscope](https://i.loli.net/2020/03/31/W8xth6Gk31mjQoN.png) | **Kaleidoscope** | Kaleidoscope 是一款强大的文件和图像比较工具，支持任意文本文件和 jpeg、tiff、png 等格式的图像文件，同时和 git、svn 等版本控制工具能够完美的结合。 |\n| ![iconkit](https://i.loli.net/2020/03/31/aoChuW9LXlvnbgE.png) | **IconKit**      | IconKit是Mac OS X 平台上一款适用于ios和mac的应用图标制作工具，你只需要将你的图片拖进　IconKit ，他就能够自动制作成你需要的图标格式。支持图标的圆角效果，光泽，大小的调整，和视网膜适配。 |\n| ![shortmenu](https://i.loli.net/2020/03/31/NjcDAK23oeb1ugm.png) | **ShortMenu**    | Short Menu 是一款 MAC 上的短网址生成工具，支持的短网址服务蛮多的，扩展功能超级丰富，点击SM菜单右下角的缩短按钮即可生成短网址 |\n| ![Slidepad](https://i.loli.net/2020/03/31/GYdVPrQen7vgca9.png) | **Slidepad**     | 通过Slidepad可以能够帮助我们在系统侧边上设置一个窗口提供我们使用，通过该窗口能够快速放置你最喜欢的网络应用程序和网站。它甚至支持通知，并允许您为每个应用程序或网站定义声音设置。 |\n| ![Retrobatch](https://i.loli.net/2020/03/31/UVMJBX4wPLaHOIA.png) | **Retrobatch**   | Retrobatch 能够帮助用户批量添加图片水印以及剪辑，调色和滤镜等等图片批量操作处理，可以说是提高生产力的利器。 |\n\n> 所有软件可在 [可道网盘](http://t.cn/A6ZyFYFc)「提取码: **1113**」找到，可能打开某些Mac软件需要密码，请使用密码 **xclient.info**。\n\n## Windows软件","source":"soft/index.md","raw":"---\ntitle: 软件分享\ndate: 2020-03-26 17:42:09\n---\n\n## \u0014Mac软件\n\n| 软件图标                                                     | 软件名称         | 软件介绍                                                     |\n| :----------------------------------------------------------- | :--------------- | :----------------------------------------------------------- |\n| ![sip](https://i.loli.net/2020/03/31/rvyuEDRLh7FMWjo.png)    | **Sip**          | Sip 是一款非常不错的Mac屏幕取色软件，你只需要鼠标点一下即可取得屏幕当前位置的颜色值，支持 CSS、UIColor 等多种格式。 |\n| ![Paw](https://i.loli.net/2020/03/31/EInMcvkQDgxoaBi.png)    | **Paw**          | Paw 是一款实用的HTTP/REST服务测试工具，可以设置请求Header和参数，模拟发送请求，测试响应数据，支持OAuth, Cookies，JSONP等。 |\n| ![charles](https://i.loli.net/2020/03/31/fUFlTsabtxoOvS8.png) | **Charles**      | Charles 是一款用于HTTP信息抓包工具，可以快速有效的获得HTTP信息，非常利于开发者的网页开发和调试修改等. |\n| ![RF3](https://i.loli.net/2020/03/31/dG1vhMUrQOzJ6lj.png)    | **Reflector**    | Reflector 是一款优秀的iOS设备AirPlay屏幕镜像工具，可以让我们将iPhone、iPad的屏幕无线镜像输出到Mac上，软件还支持录制iPhone或iPad的屏幕。 |\n| ![Kaleidoscope](https://i.loli.net/2020/03/31/W8xth6Gk31mjQoN.png) | **Kaleidoscope** | Kaleidoscope 是一款强大的文件和图像比较工具，支持任意文本文件和 jpeg、tiff、png 等格式的图像文件，同时和 git、svn 等版本控制工具能够完美的结合。 |\n| ![iconkit](https://i.loli.net/2020/03/31/aoChuW9LXlvnbgE.png) | **IconKit**      | IconKit是Mac OS X 平台上一款适用于ios和mac的应用图标制作工具，你只需要将你的图片拖进　IconKit ，他就能够自动制作成你需要的图标格式。支持图标的圆角效果，光泽，大小的调整，和视网膜适配。 |\n| ![shortmenu](https://i.loli.net/2020/03/31/NjcDAK23oeb1ugm.png) | **ShortMenu**    | Short Menu 是一款 MAC 上的短网址生成工具，支持的短网址服务蛮多的，扩展功能超级丰富，点击SM菜单右下角的缩短按钮即可生成短网址 |\n| ![Slidepad](https://i.loli.net/2020/03/31/GYdVPrQen7vgca9.png) | **Slidepad**     | 通过Slidepad可以能够帮助我们在系统侧边上设置一个窗口提供我们使用，通过该窗口能够快速放置你最喜欢的网络应用程序和网站。它甚至支持通知，并允许您为每个应用程序或网站定义声音设置。 |\n| ![Retrobatch](https://i.loli.net/2020/03/31/UVMJBX4wPLaHOIA.png) | **Retrobatch**   | Retrobatch 能够帮助用户批量添加图片水印以及剪辑，调色和滤镜等等图片批量操作处理，可以说是提高生产力的利器。 |\n\n> 所有软件可在 [可道网盘](http://t.cn/A6ZyFYFc)「提取码: **1113**」找到，可能打开某些Mac软件需要密码，请使用密码 **xclient.info**。\n\n## Windows软件","updated":"2020-03-31T06:57:50.912Z","path":"soft/index.html","comments":1,"layout":"page","_id":"ck8imz8mm0007s09k3vij21j2","content":"<h2><span id=\"mac软件\">\u0014Mac软件</span></h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">软件图标</th>\n<th style=\"text-align:left\">软件名称</th>\n<th style=\"text-align:left\">软件介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/rvyuEDRLh7FMWjo.png\" alt=\"sip\"></td>\n<td style=\"text-align:left\"><strong>Sip</strong></td>\n<td style=\"text-align:left\">Sip 是一款非常不错的Mac屏幕取色软件，你只需要鼠标点一下即可取得屏幕当前位置的颜色值，支持 CSS、UIColor 等多种格式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/EInMcvkQDgxoaBi.png\" alt=\"Paw\"></td>\n<td style=\"text-align:left\"><strong>Paw</strong></td>\n<td style=\"text-align:left\">Paw 是一款实用的HTTP/REST服务测试工具，可以设置请求Header和参数，模拟发送请求，测试响应数据，支持OAuth, Cookies，JSONP等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/fUFlTsabtxoOvS8.png\" alt=\"charles\"></td>\n<td style=\"text-align:left\"><strong>Charles</strong></td>\n<td style=\"text-align:left\">Charles 是一款用于HTTP信息抓包工具，可以快速有效的获得HTTP信息，非常利于开发者的网页开发和调试修改等.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/dG1vhMUrQOzJ6lj.png\" alt=\"RF3\"></td>\n<td style=\"text-align:left\"><strong>Reflector</strong></td>\n<td style=\"text-align:left\">Reflector 是一款优秀的iOS设备AirPlay屏幕镜像工具，可以让我们将iPhone、iPad的屏幕无线镜像输出到Mac上，软件还支持录制iPhone或iPad的屏幕。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/W8xth6Gk31mjQoN.png\" alt=\"Kaleidoscope\"></td>\n<td style=\"text-align:left\"><strong>Kaleidoscope</strong></td>\n<td style=\"text-align:left\">Kaleidoscope 是一款强大的文件和图像比较工具，支持任意文本文件和 jpeg、tiff、png 等格式的图像文件，同时和 git、svn 等版本控制工具能够完美的结合。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/aoChuW9LXlvnbgE.png\" alt=\"iconkit\"></td>\n<td style=\"text-align:left\"><strong>IconKit</strong></td>\n<td style=\"text-align:left\">IconKit是Mac OS X 平台上一款适用于ios和mac的应用图标制作工具，你只需要将你的图片拖进　IconKit ，他就能够自动制作成你需要的图标格式。支持图标的圆角效果，光泽，大小的调整，和视网膜适配。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/NjcDAK23oeb1ugm.png\" alt=\"shortmenu\"></td>\n<td style=\"text-align:left\"><strong>ShortMenu</strong></td>\n<td style=\"text-align:left\">Short Menu 是一款 MAC 上的短网址生成工具，支持的短网址服务蛮多的，扩展功能超级丰富，点击SM菜单右下角的缩短按钮即可生成短网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/GYdVPrQen7vgca9.png\" alt=\"Slidepad\"></td>\n<td style=\"text-align:left\"><strong>Slidepad</strong></td>\n<td style=\"text-align:left\">通过Slidepad可以能够帮助我们在系统侧边上设置一个窗口提供我们使用，通过该窗口能够快速放置你最喜欢的网络应用程序和网站。它甚至支持通知，并允许您为每个应用程序或网站定义声音设置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/UVMJBX4wPLaHOIA.png\" alt=\"Retrobatch\"></td>\n<td style=\"text-align:left\"><strong>Retrobatch</strong></td>\n<td style=\"text-align:left\">Retrobatch 能够帮助用户批量添加图片水印以及剪辑，调色和滤镜等等图片批量操作处理，可以说是提高生产力的利器。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>所有软件可在 <a href=\"http://t.cn/A6ZyFYFc\" target=\"_blank\" rel=\"noopener\">可道网盘</a>「提取码: <strong>1113</strong>」找到，可能打开某些Mac软件需要密码，请使用密码 <strong>xclient.info</strong>。</p>\n</blockquote>\n<h2><span id=\"windows软件\">Windows软件</span></h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Mac软件\"><a href=\"#Mac软件\" class=\"headerlink\" title=\"\u0014Mac软件\"></a>\u0014Mac软件</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">软件图标</th>\n<th style=\"text-align:left\">软件名称</th>\n<th style=\"text-align:left\">软件介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/rvyuEDRLh7FMWjo.png\" alt=\"sip\"></td>\n<td style=\"text-align:left\"><strong>Sip</strong></td>\n<td style=\"text-align:left\">Sip 是一款非常不错的Mac屏幕取色软件，你只需要鼠标点一下即可取得屏幕当前位置的颜色值，支持 CSS、UIColor 等多种格式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/EInMcvkQDgxoaBi.png\" alt=\"Paw\"></td>\n<td style=\"text-align:left\"><strong>Paw</strong></td>\n<td style=\"text-align:left\">Paw 是一款实用的HTTP/REST服务测试工具，可以设置请求Header和参数，模拟发送请求，测试响应数据，支持OAuth, Cookies，JSONP等。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/fUFlTsabtxoOvS8.png\" alt=\"charles\"></td>\n<td style=\"text-align:left\"><strong>Charles</strong></td>\n<td style=\"text-align:left\">Charles 是一款用于HTTP信息抓包工具，可以快速有效的获得HTTP信息，非常利于开发者的网页开发和调试修改等.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/dG1vhMUrQOzJ6lj.png\" alt=\"RF3\"></td>\n<td style=\"text-align:left\"><strong>Reflector</strong></td>\n<td style=\"text-align:left\">Reflector 是一款优秀的iOS设备AirPlay屏幕镜像工具，可以让我们将iPhone、iPad的屏幕无线镜像输出到Mac上，软件还支持录制iPhone或iPad的屏幕。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/W8xth6Gk31mjQoN.png\" alt=\"Kaleidoscope\"></td>\n<td style=\"text-align:left\"><strong>Kaleidoscope</strong></td>\n<td style=\"text-align:left\">Kaleidoscope 是一款强大的文件和图像比较工具，支持任意文本文件和 jpeg、tiff、png 等格式的图像文件，同时和 git、svn 等版本控制工具能够完美的结合。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/aoChuW9LXlvnbgE.png\" alt=\"iconkit\"></td>\n<td style=\"text-align:left\"><strong>IconKit</strong></td>\n<td style=\"text-align:left\">IconKit是Mac OS X 平台上一款适用于ios和mac的应用图标制作工具，你只需要将你的图片拖进　IconKit ，他就能够自动制作成你需要的图标格式。支持图标的圆角效果，光泽，大小的调整，和视网膜适配。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/NjcDAK23oeb1ugm.png\" alt=\"shortmenu\"></td>\n<td style=\"text-align:left\"><strong>ShortMenu</strong></td>\n<td style=\"text-align:left\">Short Menu 是一款 MAC 上的短网址生成工具，支持的短网址服务蛮多的，扩展功能超级丰富，点击SM菜单右下角的缩短按钮即可生成短网址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/GYdVPrQen7vgca9.png\" alt=\"Slidepad\"></td>\n<td style=\"text-align:left\"><strong>Slidepad</strong></td>\n<td style=\"text-align:left\">通过Slidepad可以能够帮助我们在系统侧边上设置一个窗口提供我们使用，通过该窗口能够快速放置你最喜欢的网络应用程序和网站。它甚至支持通知，并允许您为每个应用程序或网站定义声音设置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/31/UVMJBX4wPLaHOIA.png\" alt=\"Retrobatch\"></td>\n<td style=\"text-align:left\"><strong>Retrobatch</strong></td>\n<td style=\"text-align:left\">Retrobatch 能够帮助用户批量添加图片水印以及剪辑，调色和滤镜等等图片批量操作处理，可以说是提高生产力的利器。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>所有软件可在 <a href=\"http://t.cn/A6ZyFYFc\" target=\"_blank\" rel=\"noopener\">可道网盘</a>「提取码: <strong>1113</strong>」找到，可能打开某些Mac软件需要密码，请使用密码 <strong>xclient.info</strong>。</p>\n</blockquote>\n<h2 id=\"Windows软件\"><a href=\"#Windows软件\" class=\"headerlink\" title=\"Windows软件\"></a>Windows软件</h2>"},{"title":"友情链接","date":"2020-03-26T09:43:20.000Z","_content":"\n## 博客\n\n> 技术大牛\n\n- [OneV's Den](https://onevcat.com/) 国内iOS开发先驱\n- [唐巧](http://blog.devtang.com/) 努力学习做业务的中年程序员\n\n\n\n## 网站\n\n> 技术\n\n- [掘金](e.xitu.io) 程序员的技术看板\n\n- [RayWenderlich](https://www.raywenderlich.com/) 汇聚大量开发课程","source":"links/index.md","raw":"---\ntitle: 友情链接\ndate: 2020-03-26 17:43:20\n---\n\n## 博客\n\n> 技术大牛\n\n- [OneV's Den](https://onevcat.com/) 国内iOS开发先驱\n- [唐巧](http://blog.devtang.com/) 努力学习做业务的中年程序员\n\n\n\n## 网站\n\n> 技术\n\n- [掘金](e.xitu.io) 程序员的技术看板\n\n- [RayWenderlich](https://www.raywenderlich.com/) 汇聚大量开发课程","updated":"2020-03-27T08:24:10.812Z","path":"links/index.html","comments":1,"layout":"page","_id":"ck8imz8mo0009s09k9ggkcrnb","content":"<h2><span id=\"博客\">博客</span></h2><blockquote>\n<p>技术大牛</p>\n</blockquote>\n<ul>\n<li><a href=\"https://onevcat.com/\" target=\"_blank\" rel=\"noopener\">OneV’s Den</a> 国内iOS开发先驱</li>\n<li><a href=\"http://blog.devtang.com/\" target=\"_blank\" rel=\"noopener\">唐巧</a> 努力学习做业务的中年程序员</li>\n</ul>\n<h2><span id=\"网站\">网站</span></h2><blockquote>\n<p>技术</p>\n</blockquote>\n<ul>\n<li><p><a href=\"e.xitu.io\">掘金</a> 程序员的技术看板</p>\n</li>\n<li><p><a href=\"https://www.raywenderlich.com/\" target=\"_blank\" rel=\"noopener\">RayWenderlich</a> 汇聚大量开发课程</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h2><blockquote>\n<p>技术大牛</p>\n</blockquote>\n<ul>\n<li><a href=\"https://onevcat.com/\" target=\"_blank\" rel=\"noopener\">OneV’s Den</a> 国内iOS开发先驱</li>\n<li><a href=\"http://blog.devtang.com/\" target=\"_blank\" rel=\"noopener\">唐巧</a> 努力学习做业务的中年程序员</li>\n</ul>\n<h2 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h2><blockquote>\n<p>技术</p>\n</blockquote>\n<ul>\n<li><p><a href=\"e.xitu.io\">掘金</a> 程序员的技术看板</p>\n</li>\n<li><p><a href=\"https://www.raywenderlich.com/\" target=\"_blank\" rel=\"noopener\">RayWenderlich</a> 汇聚大量开发课程</p>\n</li>\n</ul>\n"}],"Post":[{"title":"Centos7系统VPS配置记录","date":"2020-03-29T12:25:12.000Z","_content":"\n> 搬瓦工的VPS确实不错，我是17年买的18.99刀一年的，现在已经没有这个套餐了。系统选用的是Centos 7，已完成的软件和设置是 「私钥ssh + V2Ray + 锐速 + Nginx + Https」。做此篇备忘，防止以后再设置VPS的时候到处翻找教程。\n\n### VPS配置如图\n\n本来还担心512M RAM安装Centos 7不够用，目前来看还是不用太担心的。\n\n![vps](https://i.loli.net/2020/03/29/cjf8SFQw5WXaLEk.png)\n\n### 1、ssh私钥登录\n\n- 生成公私钥\n\n  ```shell\n  ssh-keygen -t rsa\n  ```\n\n  会提示公私钥保存路径和设置私钥密码，路径保持默认即可，生成的公私钥保存在 **/root/.ssh**，id_rsa.pub 为公钥，id_rsa 为私钥。\n\n- 安装公钥\n\n  复制公钥内容到/root/.ssh/authorized_keys，修改 .ssh文件夹权限，修改 authorized_keys文件权限。\n\n  ```shell\n  cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys\n  chmod 600  /root/.ssh/authorized_keys\n  chmod 700  /root/.ssh\n  ```\n\n- 修改SSH配置\n\n  编辑修改 **/etc/ssh/sshd_config** 文件\n\n  ```nginx\n  RSAAuthentication yes # 开启密钥登入的认证方式\n  PubkeyAuthentication yes # 开启密钥登入的认证方式\n  PermitRootLogin yes #root用户能否通过ssh登录\n  ```\n\n  重启ssh服务\n\n  ```shell\n  service sshd restart\n  ```\n\n  保存私钥到本地，在ssh客户端使用私钥登录。\n\n### 2、安装V2Ray代理\n\n- 使用V2Ray一键安装脚本\n\n  ```shell\n  bash <(curl -s -L https://git.io/v2ray.sh)\n  ```\n\n- 具体介绍和配置请参考 [V2Ray官网](https://www.v2ray.com/) 和 [V2Ray一键安装脚本](https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC)\n\n### 3、启用锐速\n\n- 内核降级\n\n  ```shell\n  wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh && bash rskernel.sh\n  ```\n\n- 安装锐速\n\n  ```shell\n  yum install net-tools -y && wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh && bash appex.sh install\n  ```\n\n- 常用命令\n\n  ```shell\n  #查看运行状态\n  /appex/bin/serverSpeeder.sh status\n  #启动锐速\n  /appex/bin/serverSpeeder.sh start\n  #停止锐速\n  /appex/bin/serverSpeeder.sh stop\n  #重启锐速\n  /appex/bin/serverSpeeder.sh restart\n  #卸载锐速\n  /appex/bin/serverSpeeder.sh uninstall\n  ```\n\n### 4、安装配置 Nginx\n\n- 安装 Nginx\n\n  添加yum源\n\n  ```shell\n  sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n  ```\n\n  安装 Nginx\n\n  ```shell\n  sudo yum install nginx\n  ```\n\n  设置开机启动\n\n  ```shell\n  sudo systemctl enable nginx\n  ```\n\n  常用命令\n\n  ```shell\n  sudo systemctl start nginx  #启动服务\n  sudo systemctl restart nginx  #重启服务\nsudo systemctl reload nginx  ##重载服务\n  ```\n\n- 配置 Nginx\n\n  ```nginx\n  server {\n      listen 80;\n      server_name example.com www.example.com;\n      rewrite ^(.*) https://$server_name$1 permanent;\n  }\n  server {\n      listen 443 ssl;\n      server_name  example.com www.example.com;\n      ssl_certificate  /etc/nginx/ssl/fullchain.cer;\n      ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      location / {\n          root /usr/share/nginx/home;\n          index index.html index.htm;\n      }\n  }\n  \n  server {\n      listen 80;\n      server_name blog.example.com;\n      rewrite ^(.*) https://$server_name$1 permanent;\n  }\n  server {\n      listen 443 ssl;\n      server_name  blog.example.com;\n      ssl_certificate  /etc/nginx/ssl/fullchain.cer;\n      ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      location / {\n          root /usr/share/nginx/blog;\n          index index.html index.htm;\n      }\n  }\n  ```\n\n### 5、申请证书打开Https\n\n- 安装acme.sh，安装后请 **重启终端** 使用\n\n  ```shell\n  curl  https://get.acme.sh | sh\n  ```\n\n- 生成证书\n\n  我使用的是阿里云的域名，生成主域名+泛域名证书，其他生成方式见 [acem.sh文档](https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E)\n\n  ```shell\n  export Ali_Key=\"Ali_Key\"\n  export Ali_Secret=\"Ali_Secret\"\n  acme.sh --issue --dns dns_ali -d example.com -d *.example.com\n  ```\n\n- 安装证书\n\n  我使用的nginx安装证书，其他安装方式见 [acem.sh文档](https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E)\n\n  ```shell\n  acme.sh --installcert -d example.com -d *.example.com \\\n  --key-file       /etc/nginx/ssl/example.com.key  \\\n  --fullchain-file /etc/nginx/ssl/fullchain.cer \\\n  --reloadcmd     \"service nginx force-reload\"\n  ```\n\n- 更新证书\n\n  目前证书在 60 天以后会自动更新, 无需任何操作。\n\n- 配置https访问\n\n  > 参考第4步: Nginx配置","source":"_posts/Centos7系统VPS配置记录.md","raw":"---\ntitle: Centos7系统VPS配置记录\ndate: 2020-03-29 20:25:12\n---\n\n> 搬瓦工的VPS确实不错，我是17年买的18.99刀一年的，现在已经没有这个套餐了。系统选用的是Centos 7，已完成的软件和设置是 「私钥ssh + V2Ray + 锐速 + Nginx + Https」。做此篇备忘，防止以后再设置VPS的时候到处翻找教程。\n\n### VPS配置如图\n\n本来还担心512M RAM安装Centos 7不够用，目前来看还是不用太担心的。\n\n![vps](https://i.loli.net/2020/03/29/cjf8SFQw5WXaLEk.png)\n\n### 1、ssh私钥登录\n\n- 生成公私钥\n\n  ```shell\n  ssh-keygen -t rsa\n  ```\n\n  会提示公私钥保存路径和设置私钥密码，路径保持默认即可，生成的公私钥保存在 **/root/.ssh**，id_rsa.pub 为公钥，id_rsa 为私钥。\n\n- 安装公钥\n\n  复制公钥内容到/root/.ssh/authorized_keys，修改 .ssh文件夹权限，修改 authorized_keys文件权限。\n\n  ```shell\n  cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys\n  chmod 600  /root/.ssh/authorized_keys\n  chmod 700  /root/.ssh\n  ```\n\n- 修改SSH配置\n\n  编辑修改 **/etc/ssh/sshd_config** 文件\n\n  ```nginx\n  RSAAuthentication yes # 开启密钥登入的认证方式\n  PubkeyAuthentication yes # 开启密钥登入的认证方式\n  PermitRootLogin yes #root用户能否通过ssh登录\n  ```\n\n  重启ssh服务\n\n  ```shell\n  service sshd restart\n  ```\n\n  保存私钥到本地，在ssh客户端使用私钥登录。\n\n### 2、安装V2Ray代理\n\n- 使用V2Ray一键安装脚本\n\n  ```shell\n  bash <(curl -s -L https://git.io/v2ray.sh)\n  ```\n\n- 具体介绍和配置请参考 [V2Ray官网](https://www.v2ray.com/) 和 [V2Ray一键安装脚本](https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC)\n\n### 3、启用锐速\n\n- 内核降级\n\n  ```shell\n  wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh && bash rskernel.sh\n  ```\n\n- 安装锐速\n\n  ```shell\n  yum install net-tools -y && wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh && bash appex.sh install\n  ```\n\n- 常用命令\n\n  ```shell\n  #查看运行状态\n  /appex/bin/serverSpeeder.sh status\n  #启动锐速\n  /appex/bin/serverSpeeder.sh start\n  #停止锐速\n  /appex/bin/serverSpeeder.sh stop\n  #重启锐速\n  /appex/bin/serverSpeeder.sh restart\n  #卸载锐速\n  /appex/bin/serverSpeeder.sh uninstall\n  ```\n\n### 4、安装配置 Nginx\n\n- 安装 Nginx\n\n  添加yum源\n\n  ```shell\n  sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n  ```\n\n  安装 Nginx\n\n  ```shell\n  sudo yum install nginx\n  ```\n\n  设置开机启动\n\n  ```shell\n  sudo systemctl enable nginx\n  ```\n\n  常用命令\n\n  ```shell\n  sudo systemctl start nginx  #启动服务\n  sudo systemctl restart nginx  #重启服务\nsudo systemctl reload nginx  ##重载服务\n  ```\n\n- 配置 Nginx\n\n  ```nginx\n  server {\n      listen 80;\n      server_name example.com www.example.com;\n      rewrite ^(.*) https://$server_name$1 permanent;\n  }\n  server {\n      listen 443 ssl;\n      server_name  example.com www.example.com;\n      ssl_certificate  /etc/nginx/ssl/fullchain.cer;\n      ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      location / {\n          root /usr/share/nginx/home;\n          index index.html index.htm;\n      }\n  }\n  \n  server {\n      listen 80;\n      server_name blog.example.com;\n      rewrite ^(.*) https://$server_name$1 permanent;\n  }\n  server {\n      listen 443 ssl;\n      server_name  blog.example.com;\n      ssl_certificate  /etc/nginx/ssl/fullchain.cer;\n      ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n      ssl_prefer_server_ciphers on;\n      location / {\n          root /usr/share/nginx/blog;\n          index index.html index.htm;\n      }\n  }\n  ```\n\n### 5、申请证书打开Https\n\n- 安装acme.sh，安装后请 **重启终端** 使用\n\n  ```shell\n  curl  https://get.acme.sh | sh\n  ```\n\n- 生成证书\n\n  我使用的是阿里云的域名，生成主域名+泛域名证书，其他生成方式见 [acem.sh文档](https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E)\n\n  ```shell\n  export Ali_Key=\"Ali_Key\"\n  export Ali_Secret=\"Ali_Secret\"\n  acme.sh --issue --dns dns_ali -d example.com -d *.example.com\n  ```\n\n- 安装证书\n\n  我使用的nginx安装证书，其他安装方式见 [acem.sh文档](https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E)\n\n  ```shell\n  acme.sh --installcert -d example.com -d *.example.com \\\n  --key-file       /etc/nginx/ssl/example.com.key  \\\n  --fullchain-file /etc/nginx/ssl/fullchain.cer \\\n  --reloadcmd     \"service nginx force-reload\"\n  ```\n\n- 更新证书\n\n  目前证书在 60 天以后会自动更新, 无需任何操作。\n\n- 配置https访问\n\n  > 参考第4步: Nginx配置","slug":"Centos7系统VPS配置记录","published":1,"updated":"2020-03-30T06:40:28.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8lo0000s09k4cgte2fj","content":"<blockquote>\n<p>搬瓦工的VPS确实不错，我是17年买的18.99刀一年的，现在已经没有这个套餐了。系统选用的是Centos 7，已完成的软件和设置是 「私钥ssh + V2Ray + 锐速 + Nginx + Https」。做此篇备忘，防止以后再设置VPS的时候到处翻找教程。</p>\n</blockquote>\n<h3><span id=\"vps配置如图\">VPS配置如图</span></h3><p>本来还担心512M RAM安装Centos 7不够用，目前来看还是不用太担心的。</p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/29/cjf8SFQw5WXaLEk.png\" alt=\"vps\"></p>\n<h3><span id=\"1-ssh私钥登录\">1、ssh私钥登录</span></h3><ul>\n<li><p>生成公私钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p>会提示公私钥保存路径和设置私钥密码，路径保持默认即可，生成的公私钥保存在 <strong>/root/.ssh</strong>，id_rsa.pub 为公钥，id_rsa 为私钥。</p>\n</li>\n<li><p>安装公钥</p>\n<p>复制公钥内容到/root/.ssh/authorized_keys，修改 .ssh文件夹权限，修改 authorized_keys文件权限。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class=\"line\">chmod 600  /root/.ssh/authorized_keys</span><br><span class=\"line\">chmod 700  /root/.ssh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改SSH配置</p>\n<p>编辑修改 <strong>/etc/ssh/sshd_config</strong> 文件</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">RSAAuthentication</span> <span class=\"literal\">yes</span> <span class=\"comment\"># 开启密钥登入的认证方式</span></span><br><span class=\"line\">PubkeyAuthentication <span class=\"literal\">yes</span> <span class=\"comment\"># 开启密钥登入的认证方式</span></span><br><span class=\"line\">PermitRootLogin <span class=\"literal\">yes</span> <span class=\"comment\">#root用户能否通过ssh登录</span></span><br></pre></td></tr></table></figure>\n<p>重启ssh服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd restart</span><br></pre></td></tr></table></figure>\n<p>保存私钥到本地，在ssh客户端使用私钥登录。</p>\n</li>\n</ul>\n<h3><span id=\"2-安装v2ray代理\">2、安装V2Ray代理</span></h3><ul>\n<li><p>使用V2Ray一键安装脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>具体介绍和配置请参考 <a href=\"https://www.v2ray.com/\" target=\"_blank\" rel=\"noopener\">V2Ray官网</a> 和 <a href=\"https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\" target=\"_blank\" rel=\"noopener\">V2Ray一键安装脚本</a></p>\n</li>\n</ul>\n<h3><span id=\"3-启用锐速\">3、启用锐速</span></h3><ul>\n<li><p>内核降级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh &amp;&amp; bash rskernel.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装锐速</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install net-tools -y &amp;&amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; bash appex.sh install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>常用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看运行状态</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh status</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh start</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">停止锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh stop</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh restart</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">卸载锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh uninstall</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3><span id=\"4-安装配置-nginx\">4、安装配置 Nginx</span></h3><ul>\n<li><p>安装 Nginx</p>\n<p>添加yum源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>\n<p>安装 Nginx</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install nginx</span><br></pre></td></tr></table></figure>\n<p>设置开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<p>常用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  sudo systemctl start nginx  #启动服务</span><br><span class=\"line\">  sudo systemctl restart nginx  #重启服务</span><br><span class=\"line\">sudo systemctl reload nginx  ##重载服务</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置 Nginx</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> example.com www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^(.*)</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$1</span> <span class=\"literal\">permanent</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  example.com www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>  /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /etc/nginx/ssl/example.com.key;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/home;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> blog.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^(.*)</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$1</span> <span class=\"literal\">permanent</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  blog.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>  /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /etc/nginx/ssl/example.com.key;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/blog;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3><span id=\"5-申请证书打开https\">5、申请证书打开Https</span></h3><ul>\n<li><p>安装acme.sh，安装后请 <strong>重启终端</strong> 使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成证书</p>\n<p>我使用的是阿里云的域名，生成主域名+泛域名证书，其他生成方式见 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">acem.sh文档</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export Ali_Key=\"Ali_Key\"</span><br><span class=\"line\">export Ali_Secret=\"Ali_Secret\"</span><br><span class=\"line\">acme.sh --issue --dns dns_ali -d example.com -d *.example.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装证书</p>\n<p>我使用的nginx安装证书，其他安装方式见 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">acem.sh文档</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --installcert -d example.com -d *.example.com \\</span><br><span class=\"line\">--key-file       /etc/nginx/ssl/example.com.key  \\</span><br><span class=\"line\">--fullchain-file /etc/nginx/ssl/fullchain.cer \\</span><br><span class=\"line\">--reloadcmd     \"service nginx force-reload\"</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新证书</p>\n<p>目前证书在 60 天以后会自动更新, 无需任何操作。</p>\n</li>\n<li><p>配置https访问</p>\n<blockquote>\n<p>参考第4步: Nginx配置</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>搬瓦工的VPS确实不错，我是17年买的18.99刀一年的，现在已经没有这个套餐了。系统选用的是Centos 7，已完成的软件和设置是 「私钥ssh + V2Ray + 锐速 + Nginx + Https」。做此篇备忘，防止以后再设置VPS的时候到处翻找教程。</p>\n</blockquote>\n<h3 id=\"VPS配置如图\"><a href=\"#VPS配置如图\" class=\"headerlink\" title=\"VPS配置如图\"></a>VPS配置如图</h3><p>本来还担心512M RAM安装Centos 7不够用，目前来看还是不用太担心的。</p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://i.loli.net/2020/03/29/cjf8SFQw5WXaLEk.png\" alt=\"vps\"></p>\n<h3 id=\"1、ssh私钥登录\"><a href=\"#1、ssh私钥登录\" class=\"headerlink\" title=\"1、ssh私钥登录\"></a>1、ssh私钥登录</h3><ul>\n<li><p>生成公私钥</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n<p>会提示公私钥保存路径和设置私钥密码，路径保持默认即可，生成的公私钥保存在 <strong>/root/.ssh</strong>，id_rsa.pub 为公钥，id_rsa 为私钥。</p>\n</li>\n<li><p>安装公钥</p>\n<p>复制公钥内容到/root/.ssh/authorized_keys，修改 .ssh文件夹权限，修改 authorized_keys文件权限。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class=\"line\">chmod 600  /root/.ssh/authorized_keys</span><br><span class=\"line\">chmod 700  /root/.ssh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改SSH配置</p>\n<p>编辑修改 <strong>/etc/ssh/sshd_config</strong> 文件</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">RSAAuthentication</span> <span class=\"literal\">yes</span> <span class=\"comment\"># 开启密钥登入的认证方式</span></span><br><span class=\"line\">PubkeyAuthentication <span class=\"literal\">yes</span> <span class=\"comment\"># 开启密钥登入的认证方式</span></span><br><span class=\"line\">PermitRootLogin <span class=\"literal\">yes</span> <span class=\"comment\">#root用户能否通过ssh登录</span></span><br></pre></td></tr></table></figure>\n<p>重启ssh服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd restart</span><br></pre></td></tr></table></figure>\n<p>保存私钥到本地，在ssh客户端使用私钥登录。</p>\n</li>\n</ul>\n<h3 id=\"2、安装V2Ray代理\"><a href=\"#2、安装V2Ray代理\" class=\"headerlink\" title=\"2、安装V2Ray代理\"></a>2、安装V2Ray代理</h3><ul>\n<li><p>使用V2Ray一键安装脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>具体介绍和配置请参考 <a href=\"https://www.v2ray.com/\" target=\"_blank\" rel=\"noopener\">V2Ray官网</a> 和 <a href=\"https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\" target=\"_blank\" rel=\"noopener\">V2Ray一键安装脚本</a></p>\n</li>\n</ul>\n<h3 id=\"3、启用锐速\"><a href=\"#3、启用锐速\" class=\"headerlink\" title=\"3、启用锐速\"></a>3、启用锐速</h3><ul>\n<li><p>内核降级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/uxh/shadowsocks_bash/master/rskernel.sh &amp;&amp; bash rskernel.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装锐速</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install net-tools -y &amp;&amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; bash appex.sh install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>常用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看运行状态</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh status</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh start</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">停止锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh stop</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh restart</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">卸载锐速</span></span><br><span class=\"line\">/appex/bin/serverSpeeder.sh uninstall</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4、安装配置-Nginx\"><a href=\"#4、安装配置-Nginx\" class=\"headerlink\" title=\"4、安装配置 Nginx\"></a>4、安装配置 Nginx</h3><ul>\n<li><p>安装 Nginx</p>\n<p>添加yum源</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>\n<p>安装 Nginx</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install nginx</span><br></pre></td></tr></table></figure>\n<p>设置开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<p>常用命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  sudo systemctl start nginx  #启动服务</span><br><span class=\"line\">  sudo systemctl restart nginx  #重启服务</span><br><span class=\"line\">sudo systemctl reload nginx  ##重载服务</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置 Nginx</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> example.com www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^(.*)</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$1</span> <span class=\"literal\">permanent</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  example.com www.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>  /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /etc/nginx/ssl/example.com.key;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/home;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> blog.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">rewrite</span><span class=\"regexp\"> ^(.*)</span> https://<span class=\"variable\">$server_name</span><span class=\"variable\">$1</span> <span class=\"literal\">permanent</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">443</span> ssl;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  blog.example.com;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate</span>  /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_certificate_key</span>  /etc/nginx/ssl/example.com.key;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_protocols</span> TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"attribute\">ssl_prefer_server_ciphers</span> <span class=\"literal\">on</span>;</span><br><span class=\"line\">    <span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">        <span class=\"attribute\">root</span> /usr/share/nginx/blog;</span><br><span class=\"line\">        <span class=\"attribute\">index</span> index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"5、申请证书打开Https\"><a href=\"#5、申请证书打开Https\" class=\"headerlink\" title=\"5、申请证书打开Https\"></a>5、申请证书打开Https</h3><ul>\n<li><p>安装acme.sh，安装后请 <strong>重启终端</strong> 使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成证书</p>\n<p>我使用的是阿里云的域名，生成主域名+泛域名证书，其他生成方式见 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">acem.sh文档</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export Ali_Key=\"Ali_Key\"</span><br><span class=\"line\">export Ali_Secret=\"Ali_Secret\"</span><br><span class=\"line\">acme.sh --issue --dns dns_ali -d example.com -d *.example.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装证书</p>\n<p>我使用的nginx安装证书，其他安装方式见 <a href=\"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">acem.sh文档</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --installcert -d example.com -d *.example.com \\</span><br><span class=\"line\">--key-file       /etc/nginx/ssl/example.com.key  \\</span><br><span class=\"line\">--fullchain-file /etc/nginx/ssl/fullchain.cer \\</span><br><span class=\"line\">--reloadcmd     \"service nginx force-reload\"</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新证书</p>\n<p>目前证书在 60 天以后会自动更新, 无需任何操作。</p>\n</li>\n<li><p>配置https访问</p>\n<blockquote>\n<p>参考第4步: Nginx配置</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"Mac设置终端走代理","date":"2019-12-25T09:55:24.000Z","_content":"\n> Mac终端默认是不走代理的，使用brew、git、cocoapods速度极慢。设置终端走代理后速度明显好转，我用的是V2rayU，最近SS识别率太高了，建议有条件的都换用v2ray。\n\n### V2rayU\n\n多数人使用的是SS的方法实现科学上网，不过最近SS识别率大增，ip很容易被墙，于是我重新搭建了v2ray，客户端使用的是V2rayU。\n\n[v2ray 搭建教程](https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B)\n\n[V2rayU 下载地址](https://github.com/yanue/V2rayU/releases)\n\n### **终端代理设置**\n\n- #### 查看代理端口\n\n  打开代理软件的偏好设置，找到监控本地的默认HTTP端口，V2rayU默认是1087，如果改过默认端口，就使用你修改以后的端口，使用SS同理。\n\n  \n\n  ![v2rayu](https://tva1.sinaimg.cn/large/00831rSTgy1gd8m21ee6ej30pk0c8ack.jpg)\n\n  \n\n- #### 代理设置写入.bash_profile\n\n  编辑 .bash_profile 文件\n\n  ```shell\n  vi ~/.bash_profile\n  ```\n\n  在文件末尾添加以下代码\n\n  ```javascript\n  function proxy_on() {\n      export http_proxy=http://127.0.0.1:1087\n      export https_proxy=http://127.0.0.1:1087\n      echo -e \"已开启代理\"\n  }\n  \n  function proxy_off() {\n      unset http_proxy\n      unset https_proxy\n      echo -e \"已关闭代理\"\n  }\n  ```\n\n- #### 使代理文件生效\n\n  ```shell\n  source ~/.bash_profile\n  ```\n\n- #### 打开代理\n\n  先查看下当前的 ip 地址\n\n  ```shell\n  $ curl -L tool.lu/ip\n  当前IP: 183.193.7*.2**\n  归属地: 中国 上海 上海\n  ```\n\n  开启 proxy,再查看\n\n  ```shell\n  $ proxy_on\n  已开启代理\n  \n  $ curl -L tool.lu/ip\n  当前IP: 67.216.228.120\n  归属地: 美国 美国\n  ```\n\n- #### 关闭代理\n\n  ```shell\n  $ proxy_off\n  已关闭代理\n  ```\n\n  ","source":"_posts/Mac设置终端走代理.md","raw":"---\ntitle: Mac设置终端走代理\ndate: 2019-12-25 17:55:24\n---\n\n> Mac终端默认是不走代理的，使用brew、git、cocoapods速度极慢。设置终端走代理后速度明显好转，我用的是V2rayU，最近SS识别率太高了，建议有条件的都换用v2ray。\n\n### V2rayU\n\n多数人使用的是SS的方法实现科学上网，不过最近SS识别率大增，ip很容易被墙，于是我重新搭建了v2ray，客户端使用的是V2rayU。\n\n[v2ray 搭建教程](https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B)\n\n[V2rayU 下载地址](https://github.com/yanue/V2rayU/releases)\n\n### **终端代理设置**\n\n- #### 查看代理端口\n\n  打开代理软件的偏好设置，找到监控本地的默认HTTP端口，V2rayU默认是1087，如果改过默认端口，就使用你修改以后的端口，使用SS同理。\n\n  \n\n  ![v2rayu](https://tva1.sinaimg.cn/large/00831rSTgy1gd8m21ee6ej30pk0c8ack.jpg)\n\n  \n\n- #### 代理设置写入.bash_profile\n\n  编辑 .bash_profile 文件\n\n  ```shell\n  vi ~/.bash_profile\n  ```\n\n  在文件末尾添加以下代码\n\n  ```javascript\n  function proxy_on() {\n      export http_proxy=http://127.0.0.1:1087\n      export https_proxy=http://127.0.0.1:1087\n      echo -e \"已开启代理\"\n  }\n  \n  function proxy_off() {\n      unset http_proxy\n      unset https_proxy\n      echo -e \"已关闭代理\"\n  }\n  ```\n\n- #### 使代理文件生效\n\n  ```shell\n  source ~/.bash_profile\n  ```\n\n- #### 打开代理\n\n  先查看下当前的 ip 地址\n\n  ```shell\n  $ curl -L tool.lu/ip\n  当前IP: 183.193.7*.2**\n  归属地: 中国 上海 上海\n  ```\n\n  开启 proxy,再查看\n\n  ```shell\n  $ proxy_on\n  已开启代理\n  \n  $ curl -L tool.lu/ip\n  当前IP: 67.216.228.120\n  归属地: 美国 美国\n  ```\n\n- #### 关闭代理\n\n  ```shell\n  $ proxy_off\n  已关闭代理\n  ```\n\n  ","slug":"Mac设置终端走代理","published":1,"updated":"2020-03-30T07:41:42.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8lz0001s09k36g13z3j","content":"<blockquote>\n<p>Mac终端默认是不走代理的，使用brew、git、cocoapods速度极慢。设置终端走代理后速度明显好转，我用的是V2rayU，最近SS识别率太高了，建议有条件的都换用v2ray。</p>\n</blockquote>\n<h3><span id=\"v2rayu\">V2rayU</span></h3><p>多数人使用的是SS的方法实现科学上网，不过最近SS识别率大增，ip很容易被墙，于是我重新搭建了v2ray，客户端使用的是V2rayU。</p>\n<p><a href=\"https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">v2ray 搭建教程</a></p>\n<p><a href=\"https://github.com/yanue/V2rayU/releases\" target=\"_blank\" rel=\"noopener\">V2rayU 下载地址</a></p>\n<h3><span id=\"终端代理设置\"><strong>终端代理设置</strong></span></h3><ul>\n<li><h4><span id=\"查看代理端口\">查看代理端口</span></h4><p>打开代理软件的偏好设置，找到监控本地的默认HTTP端口，V2rayU默认是1087，如果改过默认端口，就使用你修改以后的端口，使用SS同理。</p>\n</li>\n</ul>\n<p>  <img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gd8m21ee6ej30pk0c8ack.jpg\" alt=\"v2rayu\"></p>\n<ul>\n<li><h4><span id=\"代理设置写入bash_profile\">代理设置写入.bash_profile</span></h4><p>编辑 .bash_profile 文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>在文件末尾添加以下代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proxy_on</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">export</span> http_proxy=http:<span class=\"comment\">//127.0.0.1:1087</span></span><br><span class=\"line\">    <span class=\"keyword\">export</span> https_proxy=http:<span class=\"comment\">//127.0.0.1:1087</span></span><br><span class=\"line\">    echo -e <span class=\"string\">\"已开启代理\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proxy_off</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    unset http_proxy</span><br><span class=\"line\">    unset https_proxy</span><br><span class=\"line\">    echo -e <span class=\"string\">\"已关闭代理\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4><span id=\"使代理文件生效\">使代理文件生效</span></h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4><span id=\"打开代理\">打开代理</span></h4><p>先查看下当前的 ip 地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> curl -L tool.lu/ip</span></span><br><span class=\"line\">当前IP: 183.193.7*.2**</span><br><span class=\"line\">归属地: 中国 上海 上海</span><br></pre></td></tr></table></figure>\n<p>开启 proxy,再查看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> proxy_on</span></span><br><span class=\"line\">已开启代理</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> curl -L tool.lu/ip</span></span><br><span class=\"line\">当前IP: 67.216.228.120</span><br><span class=\"line\">归属地: 美国 美国</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4><span id=\"关闭代理\">关闭代理</span></h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> proxy_off</span></span><br><span class=\"line\">已关闭代理</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Mac终端默认是不走代理的，使用brew、git、cocoapods速度极慢。设置终端走代理后速度明显好转，我用的是V2rayU，最近SS识别率太高了，建议有条件的都换用v2ray。</p>\n</blockquote>\n<h3 id=\"V2rayU\"><a href=\"#V2rayU\" class=\"headerlink\" title=\"V2rayU\"></a>V2rayU</h3><p>多数人使用的是SS的方法实现科学上网，不过最近SS识别率大增，ip很容易被墙，于是我重新搭建了v2ray，客户端使用的是V2rayU。</p>\n<p><a href=\"https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">v2ray 搭建教程</a></p>\n<p><a href=\"https://github.com/yanue/V2rayU/releases\" target=\"_blank\" rel=\"noopener\">V2rayU 下载地址</a></p>\n<h3 id=\"终端代理设置\"><a href=\"#终端代理设置\" class=\"headerlink\" title=\"终端代理设置\"></a><strong>终端代理设置</strong></h3><ul>\n<li><h4 id=\"查看代理端口\"><a href=\"#查看代理端口\" class=\"headerlink\" title=\"查看代理端口\"></a>查看代理端口</h4><p>打开代理软件的偏好设置，找到监控本地的默认HTTP端口，V2rayU默认是1087，如果改过默认端口，就使用你修改以后的端口，使用SS同理。</p>\n</li>\n</ul>\n<p>  <img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gd8m21ee6ej30pk0c8ack.jpg\" alt=\"v2rayu\"></p>\n<ul>\n<li><h4 id=\"代理设置写入-bash-profile\"><a href=\"#代理设置写入-bash-profile\" class=\"headerlink\" title=\"代理设置写入.bash_profile\"></a>代理设置写入.bash_profile</h4><p>编辑 .bash_profile 文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>在文件末尾添加以下代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proxy_on</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">export</span> http_proxy=http:<span class=\"comment\">//127.0.0.1:1087</span></span><br><span class=\"line\">    <span class=\"keyword\">export</span> https_proxy=http:<span class=\"comment\">//127.0.0.1:1087</span></span><br><span class=\"line\">    echo -e <span class=\"string\">\"已开启代理\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">proxy_off</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    unset http_proxy</span><br><span class=\"line\">    unset https_proxy</span><br><span class=\"line\">    echo -e <span class=\"string\">\"已关闭代理\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"使代理文件生效\"><a href=\"#使代理文件生效\" class=\"headerlink\" title=\"使代理文件生效\"></a>使代理文件生效</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"打开代理\"><a href=\"#打开代理\" class=\"headerlink\" title=\"打开代理\"></a>打开代理</h4><p>先查看下当前的 ip 地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> curl -L tool.lu/ip</span></span><br><span class=\"line\">当前IP: 183.193.7*.2**</span><br><span class=\"line\">归属地: 中国 上海 上海</span><br></pre></td></tr></table></figure>\n<p>开启 proxy,再查看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> proxy_on</span></span><br><span class=\"line\">已开启代理</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> curl -L tool.lu/ip</span></span><br><span class=\"line\">当前IP: 67.216.228.120</span><br><span class=\"line\">归属地: 美国 美国</span><br></pre></td></tr></table></figure>\n</li>\n<li><h4 id=\"关闭代理\"><a href=\"#关闭代理\" class=\"headerlink\" title=\"关闭代理\"></a>关闭代理</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> proxy_off</span></span><br><span class=\"line\">已关闭代理</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"Markdown写作示例","date":"2019-08-16T07:24:16.000Z","_content":"\n## 什么是Markdown\n\nMarkdown是一个将文本转化为HTML的工具。简单来说，Markdown是一个兼顾可读性与易用性的轻量级标记体系。Markdown并不追求大而全，它只关心HTML里最常用的几个标记，对于一些不常用的标记它允许直接将HTML标记插入文本。\n\n------\n\n## 标题\n\nMarkdown提供了两种方式（Setext和Atx）来显示标题。\n\n#### 语法：\n\n```text\nSetext方式\n标题1\n=================\n\n标题2\n-----------------\n\nAtx方式\n# 标题1\n## 标题2\n###### 标题6\n```\n\n#### 效果：\n\nSetext方式\n\n# 标题1\n\n## 标题2\n\nAtx方式\n\n# 标题1\n\n## 标题2\n\n###### 标题6\n\n------\n\n## 换行\n\n在文字的末尾使用两个或两个以上的空格来表示换行。\n\n------\n\n## 引用\n\n行首使用`>`加上一个空格表示引用段落，内部可以嵌套多个引用。\n\n#### 语法：\n\n```text\n> 这是一个引用，\n> 这里木有换行，   \n> 在这里换行了。\n> > 内部嵌套\n```\n\n#### 效果：\n\n> 这是一个引用， 这里木有换行，\n> 在这里换行了。\n>\n> > 内部嵌套\n\n------\n\n## 列表\n\n**无序列表**使用`*`、`+`或`-`后面加上空格来表示。\n\n#### 语法：\n\n```text\n* Item 1\n* Item 2\n* Item 3\n\n+ Item 1\n+ Item 2\n+ Item 3\n\n- Item 1\n- Item 2\n- Item 3\n```\n\n#### 效果：\n\n- Item 1\n- Item 2\n- Item 3\n- Item 1\n- Item 2\n- Item 3\n- Item 1\n- Item 2\n- Item 3\n\n**有序列表**使用数字加英文句号加空格表示。\n\n#### 语法：\n\n```text\n1. Item 1\n2. Item 2\n3. Item 3\n```\n\n#### 效果：\n\n1. Item 1\n2. Item 2\n3. Item 3\n\n------\n\n## 代码区域\n\n**行内代码**使用**反斜杠**```表示。\n**代码段落**则是在每行文字前加4个空格或者1个缩进符表示。\n\n#### 语法：\n\n```text\nBash中可以使用echo来进行输出。\n    $ echo 'Something'\n    $ echo -e '\\tSomething\\n'\n```\n\n#### 效果：\n\nBash中可以使用echo来进行输出。\n\n```text\n$ echo 'Something'\n$ echo -e '\\tSomething\\n'\n```\n\n------\n\n## 强调\n\nMarkdown使用`\\*`或`\\_`表示强调。\n\n#### 语法：\n\n```text\n单星号 = *斜体*\n单下划线 = _斜体_\n双星号 = **加粗**\n双下划线 = __加粗__\n```\n\n#### 效果：\n\n单星号 = *斜体*\n单下划线 = *斜体*\n双星号 = **加粗**\n双下划线 = **加粗**\n\n------\n\n## 链接\n\nMarkdown支持两种风格的链接：*Inline*和*Reference*。\n\n#### 语法：\n\n*Inline*：以中括号标记显示的链接文本，后面紧跟用小括号包围的链接。如果链接有title属性，则在链接中使用**空格**加**\"title属性\"**。\n*Reference*：一般应用于多个不同位置使用相同链接。通常分为两个部分，调用部分为`[链接文本][ref]`；定义部分可以出现在文本中的其他位置，格式为`[ref]: http://some/link/address (可选的标题)`。\n*注：ref中不区分大小写。*\n\n```text\n这是一个Inline[示例](http://equation85.github.com \"可选的title\")。\n这是一个Reference[示例][ref]。\n[ref]: http://equation85.github.com\n```\n\n#### 效果：\n\n这是一个*Inline*[示例](http://equation85.github.com/)。\n这是一个*Reference*[示例](http://equation85.github.com/)。\n\n------\n\n## 图片\n\n图片的使用方法基本上和链接类似，只是在中括号前加**叹号**。\n*注：Markdown不能设置图片大小，如果必须设置则应使用HTML标记。*\n\n#### 语法：\n\n```text\nInline示例：![替代文本](/assets/images/jian.jpg \"可选的title\")\nReference示例：![替代文本][pic]\n[pic]: /assets/images/ship.jpg \"可选的title\"\nHTML示例：<img src=\"/assets/images/jian.jpg\" alt=\"替代文本\" title=\"标题文本\" width=\"200\" />\n```\n\n#### 效果：\n\n![替代文本](http://equation85.github.io/assets/images/jian.jpg)\n\n------\n\n## 其他\n\n#### 自动链接\n\n使用**尖括号**，可以为输入的URL或者邮箱自动创建链接。如[test@domain.com](mailto:test@domain.com)。\n\n#### 分隔线\n\n在一行中使用三个或三个以上的`*`、`-`或`_`可以添加分隔线，其中可以有空白，但是不能有其他字符。\n\n#### 转义字符\n\nMarkdown中的转义字符为`\\`，可以转义的有：\n\n- \\\\ 反斜杠\n- \\` 反引号\n- \\* 星号\n- \\_ 下划线\n- \\{\\} 大括号\n- \\[\\] 中括号\n- \\(\\) 小括号\n- \\# 井号\n- \\+ 加号\n- \\- 减号\n- \\. 英文句号\n- \\! 感叹号\n\n------\n\n## 结语\n\nMarkdown语法很大程度上减少了编辑的成本，但是在写作这篇文章的时候也发现某些标记对中文的支持似乎并不完美，虽然这些缺陷可以通过直接插入HTML代码解决（但这么做一点都不漂亮）。总的来说，能够在离线状态下使用命令行模式进行写作还是很爽的，相比在线写作模式精力可以更专注。","source":"_posts/Markdown写作示例.md","raw":"---\ntitle: Markdown写作示例\ndate: 2019-08-16 15:24:16\n---\n\n## 什么是Markdown\n\nMarkdown是一个将文本转化为HTML的工具。简单来说，Markdown是一个兼顾可读性与易用性的轻量级标记体系。Markdown并不追求大而全，它只关心HTML里最常用的几个标记，对于一些不常用的标记它允许直接将HTML标记插入文本。\n\n------\n\n## 标题\n\nMarkdown提供了两种方式（Setext和Atx）来显示标题。\n\n#### 语法：\n\n```text\nSetext方式\n标题1\n=================\n\n标题2\n-----------------\n\nAtx方式\n# 标题1\n## 标题2\n###### 标题6\n```\n\n#### 效果：\n\nSetext方式\n\n# 标题1\n\n## 标题2\n\nAtx方式\n\n# 标题1\n\n## 标题2\n\n###### 标题6\n\n------\n\n## 换行\n\n在文字的末尾使用两个或两个以上的空格来表示换行。\n\n------\n\n## 引用\n\n行首使用`>`加上一个空格表示引用段落，内部可以嵌套多个引用。\n\n#### 语法：\n\n```text\n> 这是一个引用，\n> 这里木有换行，   \n> 在这里换行了。\n> > 内部嵌套\n```\n\n#### 效果：\n\n> 这是一个引用， 这里木有换行，\n> 在这里换行了。\n>\n> > 内部嵌套\n\n------\n\n## 列表\n\n**无序列表**使用`*`、`+`或`-`后面加上空格来表示。\n\n#### 语法：\n\n```text\n* Item 1\n* Item 2\n* Item 3\n\n+ Item 1\n+ Item 2\n+ Item 3\n\n- Item 1\n- Item 2\n- Item 3\n```\n\n#### 效果：\n\n- Item 1\n- Item 2\n- Item 3\n- Item 1\n- Item 2\n- Item 3\n- Item 1\n- Item 2\n- Item 3\n\n**有序列表**使用数字加英文句号加空格表示。\n\n#### 语法：\n\n```text\n1. Item 1\n2. Item 2\n3. Item 3\n```\n\n#### 效果：\n\n1. Item 1\n2. Item 2\n3. Item 3\n\n------\n\n## 代码区域\n\n**行内代码**使用**反斜杠**```表示。\n**代码段落**则是在每行文字前加4个空格或者1个缩进符表示。\n\n#### 语法：\n\n```text\nBash中可以使用echo来进行输出。\n    $ echo 'Something'\n    $ echo -e '\\tSomething\\n'\n```\n\n#### 效果：\n\nBash中可以使用echo来进行输出。\n\n```text\n$ echo 'Something'\n$ echo -e '\\tSomething\\n'\n```\n\n------\n\n## 强调\n\nMarkdown使用`\\*`或`\\_`表示强调。\n\n#### 语法：\n\n```text\n单星号 = *斜体*\n单下划线 = _斜体_\n双星号 = **加粗**\n双下划线 = __加粗__\n```\n\n#### 效果：\n\n单星号 = *斜体*\n单下划线 = *斜体*\n双星号 = **加粗**\n双下划线 = **加粗**\n\n------\n\n## 链接\n\nMarkdown支持两种风格的链接：*Inline*和*Reference*。\n\n#### 语法：\n\n*Inline*：以中括号标记显示的链接文本，后面紧跟用小括号包围的链接。如果链接有title属性，则在链接中使用**空格**加**\"title属性\"**。\n*Reference*：一般应用于多个不同位置使用相同链接。通常分为两个部分，调用部分为`[链接文本][ref]`；定义部分可以出现在文本中的其他位置，格式为`[ref]: http://some/link/address (可选的标题)`。\n*注：ref中不区分大小写。*\n\n```text\n这是一个Inline[示例](http://equation85.github.com \"可选的title\")。\n这是一个Reference[示例][ref]。\n[ref]: http://equation85.github.com\n```\n\n#### 效果：\n\n这是一个*Inline*[示例](http://equation85.github.com/)。\n这是一个*Reference*[示例](http://equation85.github.com/)。\n\n------\n\n## 图片\n\n图片的使用方法基本上和链接类似，只是在中括号前加**叹号**。\n*注：Markdown不能设置图片大小，如果必须设置则应使用HTML标记。*\n\n#### 语法：\n\n```text\nInline示例：![替代文本](/assets/images/jian.jpg \"可选的title\")\nReference示例：![替代文本][pic]\n[pic]: /assets/images/ship.jpg \"可选的title\"\nHTML示例：<img src=\"/assets/images/jian.jpg\" alt=\"替代文本\" title=\"标题文本\" width=\"200\" />\n```\n\n#### 效果：\n\n![替代文本](http://equation85.github.io/assets/images/jian.jpg)\n\n------\n\n## 其他\n\n#### 自动链接\n\n使用**尖括号**，可以为输入的URL或者邮箱自动创建链接。如[test@domain.com](mailto:test@domain.com)。\n\n#### 分隔线\n\n在一行中使用三个或三个以上的`*`、`-`或`_`可以添加分隔线，其中可以有空白，但是不能有其他字符。\n\n#### 转义字符\n\nMarkdown中的转义字符为`\\`，可以转义的有：\n\n- \\\\ 反斜杠\n- \\` 反引号\n- \\* 星号\n- \\_ 下划线\n- \\{\\} 大括号\n- \\[\\] 中括号\n- \\(\\) 小括号\n- \\# 井号\n- \\+ 加号\n- \\- 减号\n- \\. 英文句号\n- \\! 感叹号\n\n------\n\n## 结语\n\nMarkdown语法很大程度上减少了编辑的成本，但是在写作这篇文章的时候也发现某些标记对中文的支持似乎并不完美，虽然这些缺陷可以通过直接插入HTML代码解决（但这么做一点都不漂亮）。总的来说，能够在离线状态下使用命令行模式进行写作还是很爽的，相比在线写作模式精力可以更专注。","slug":"Markdown写作示例","published":1,"updated":"2020-04-01T10:09:17.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8m10002s09k28yb26ao","content":"<h2><span id=\"什么是markdown\">什么是Markdown</span></h2><p>Markdown是一个将文本转化为HTML的工具。简单来说，Markdown是一个兼顾可读性与易用性的轻量级标记体系。Markdown并不追求大而全，它只关心HTML里最常用的几个标记，对于一些不常用的标记它允许直接将HTML标记插入文本。</p>\n<hr>\n<h2><span id=\"标题\">标题</span></h2><p>Markdown提供了两种方式（Setext和Atx）来显示标题。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Setext方式</span><br><span class=\"line\">标题1</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">标题2</span><br><span class=\"line\">-----------------</span><br><span class=\"line\"></span><br><span class=\"line\">Atx方式</span><br><span class=\"line\"># 标题1</span><br><span class=\"line\">## 标题2</span><br><span class=\"line\">###### 标题6</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><p>Setext方式</p>\n<h1><span id=\"标题1\">标题1</span></h1><h2><span id=\"标题2\">标题2</span></h2><p>Atx方式</p>\n<h1><span id=\"标题1\">标题1</span></h1><h2><span id=\"标题2\">标题2</span></h2><h6><span id=\"标题6\">标题6</span></h6><hr>\n<h2><span id=\"换行\">换行</span></h2><p>在文字的末尾使用两个或两个以上的空格来表示换行。</p>\n<hr>\n<h2><span id=\"引用\">引用</span></h2><p>行首使用<code>&gt;</code>加上一个空格表示引用段落，内部可以嵌套多个引用。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 这是一个引用，</span><br><span class=\"line\">&gt; 这里木有换行，   </span><br><span class=\"line\">&gt; 在这里换行了。</span><br><span class=\"line\">&gt; &gt; 内部嵌套</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><blockquote>\n<p>这是一个引用， 这里木有换行，<br>在这里换行了。</p>\n<blockquote>\n<p>内部嵌套</p>\n</blockquote>\n</blockquote>\n<hr>\n<h2><span id=\"列表\">列表</span></h2><p><strong>无序列表</strong>使用<code>*</code>、<code>+</code>或<code>-</code>后面加上空格来表示。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Item 1</span><br><span class=\"line\">* Item 2</span><br><span class=\"line\">* Item 3</span><br><span class=\"line\"></span><br><span class=\"line\">+ Item 1</span><br><span class=\"line\">+ Item 2</span><br><span class=\"line\">+ Item 3</span><br><span class=\"line\"></span><br><span class=\"line\">- Item 1</span><br><span class=\"line\">- Item 2</span><br><span class=\"line\">- Item 3</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><ul>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n</ul>\n<p><strong>有序列表</strong>使用数字加英文句号加空格表示。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. Item 1</span><br><span class=\"line\">2. Item 2</span><br><span class=\"line\">3. Item 3</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n</ol>\n<hr>\n<h2><span id=\"代码区域\">代码区域</span></h2><p><strong>行内代码</strong>使用<strong>反斜杠</strong><code>`</code>表示。<br><strong>代码段落</strong>则是在每行文字前加4个空格或者1个缩进符表示。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bash中可以使用echo来进行输出。</span><br><span class=\"line\">    $ echo &#39;Something&#39;</span><br><span class=\"line\">    $ echo -e &#39;\\tSomething\\n&#39;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><p>Bash中可以使用echo来进行输出。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &#39;Something&#39;</span><br><span class=\"line\">$ echo -e &#39;\\tSomething\\n&#39;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"强调\">强调</span></h2><p>Markdown使用<code>\\*</code>或<code>\\_</code>表示强调。</p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">单星号 &#x3D; *斜体*</span><br><span class=\"line\">单下划线 &#x3D; _斜体_</span><br><span class=\"line\">双星号 &#x3D; **加粗**</span><br><span class=\"line\">双下划线 &#x3D; __加粗__</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><p>单星号 = <em>斜体</em><br>单下划线 = <em>斜体</em><br>双星号 = <strong>加粗</strong><br>双下划线 = <strong>加粗</strong></p>\n<hr>\n<h2><span id=\"链接\">链接</span></h2><p>Markdown支持两种风格的链接：<em>Inline</em>和<em>Reference</em>。</p>\n<h4><span id=\"语法\">语法：</span></h4><p><em>Inline</em>：以中括号标记显示的链接文本，后面紧跟用小括号包围的链接。如果链接有title属性，则在链接中使用<strong>空格</strong>加<strong>“title属性”</strong>。<br><em>Reference</em>：一般应用于多个不同位置使用相同链接。通常分为两个部分，调用部分为<code>[链接文本][ref]</code>；定义部分可以出现在文本中的其他位置，格式为<code>[ref]: http://some/link/address (可选的标题)</code>。<br><em>注：ref中不区分大小写。</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个Inline[示例](http:&#x2F;&#x2F;equation85.github.com &quot;可选的title&quot;)。</span><br><span class=\"line\">这是一个Reference[示例][ref]。</span><br><span class=\"line\">[ref]: http:&#x2F;&#x2F;equation85.github.com</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><p>这是一个<em>Inline</em><a href=\"http://equation85.github.com/\" target=\"_blank\" rel=\"noopener\">示例</a>。<br>这是一个<em>Reference</em><a href=\"http://equation85.github.com/\" target=\"_blank\" rel=\"noopener\">示例</a>。</p>\n<hr>\n<h2><span id=\"图片\">图片</span></h2><p>图片的使用方法基本上和链接类似，只是在中括号前加<strong>叹号</strong>。<br><em>注：Markdown不能设置图片大小，如果必须设置则应使用HTML标记。</em></p>\n<h4><span id=\"语法\">语法：</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Inline示例：![替代文本](&#x2F;assets&#x2F;images&#x2F;jian.jpg &quot;可选的title&quot;)</span><br><span class=\"line\">Reference示例：![替代文本][pic]</span><br><span class=\"line\">[pic]: &#x2F;assets&#x2F;images&#x2F;ship.jpg &quot;可选的title&quot;</span><br><span class=\"line\">HTML示例：&lt;img src&#x3D;&quot;&#x2F;assets&#x2F;images&#x2F;jian.jpg&quot; alt&#x3D;&quot;替代文本&quot; title&#x3D;&quot;标题文本&quot; width&#x3D;&quot;200&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"效果\">效果：</span></h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"http://equation85.github.io/assets/images/jian.jpg\" alt=\"替代文本\"></p>\n<hr>\n<h2><span id=\"其他\">其他</span></h2><h4><span id=\"自动链接\">自动链接</span></h4><p>使用<strong>尖括号</strong>，可以为输入的URL或者邮箱自动创建链接。如<a href=\"mailto:test@domain.com\">test@domain.com</a>。</p>\n<h4><span id=\"分隔线\">分隔线</span></h4><p>在一行中使用三个或三个以上的<code>*</code>、<code>-</code>或<code>_</code>可以添加分隔线，其中可以有空白，但是不能有其他字符。</p>\n<h4><span id=\"转义字符\">转义字符</span></h4><p>Markdown中的转义字符为<code>\\</code>，可以转义的有：</p>\n<ul>\n<li>\\ 反斜杠</li>\n<li>` 反引号</li>\n<li>* 星号</li>\n<li>_ 下划线</li>\n<li>{} 大括号</li>\n<li>[] 中括号</li>\n<li>() 小括号</li>\n<li># 井号</li>\n<li>+ 加号</li>\n<li>- 减号</li>\n<li>. 英文句号</li>\n<li>! 感叹号</li>\n</ul>\n<hr>\n<h2><span id=\"结语\">结语</span></h2><p>Markdown语法很大程度上减少了编辑的成本，但是在写作这篇文章的时候也发现某些标记对中文的支持似乎并不完美，虽然这些缺陷可以通过直接插入HTML代码解决（但这么做一点都不漂亮）。总的来说，能够在离线状态下使用命令行模式进行写作还是很爽的，相比在线写作模式精力可以更专注。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是Markdown\"><a href=\"#什么是Markdown\" class=\"headerlink\" title=\"什么是Markdown\"></a>什么是Markdown</h2><p>Markdown是一个将文本转化为HTML的工具。简单来说，Markdown是一个兼顾可读性与易用性的轻量级标记体系。Markdown并不追求大而全，它只关心HTML里最常用的几个标记，对于一些不常用的标记它允许直接将HTML标记插入文本。</p>\n<hr>\n<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><p>Markdown提供了两种方式（Setext和Atx）来显示标题。</p>\n<h4 id=\"语法：\"><a href=\"#语法：\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Setext方式</span><br><span class=\"line\">标题1</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">标题2</span><br><span class=\"line\">-----------------</span><br><span class=\"line\"></span><br><span class=\"line\">Atx方式</span><br><span class=\"line\"># 标题1</span><br><span class=\"line\">## 标题2</span><br><span class=\"line\">###### 标题6</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：\"><a href=\"#效果：\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><p>Setext方式</p>\n<h1 id=\"标题1\"><a href=\"#标题1\" class=\"headerlink\" title=\"标题1\"></a>标题1</h1><h2 id=\"标题2\"><a href=\"#标题2\" class=\"headerlink\" title=\"标题2\"></a>标题2</h2><p>Atx方式</p>\n<h1 id=\"标题1-1\"><a href=\"#标题1-1\" class=\"headerlink\" title=\"标题1\"></a>标题1</h1><h2 id=\"标题2-1\"><a href=\"#标题2-1\" class=\"headerlink\" title=\"标题2\"></a>标题2</h2><h6 id=\"标题6\"><a href=\"#标题6\" class=\"headerlink\" title=\"标题6\"></a>标题6</h6><hr>\n<h2 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h2><p>在文字的末尾使用两个或两个以上的空格来表示换行。</p>\n<hr>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>行首使用<code>&gt;</code>加上一个空格表示引用段落，内部可以嵌套多个引用。</p>\n<h4 id=\"语法：-1\"><a href=\"#语法：-1\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 这是一个引用，</span><br><span class=\"line\">&gt; 这里木有换行，   </span><br><span class=\"line\">&gt; 在这里换行了。</span><br><span class=\"line\">&gt; &gt; 内部嵌套</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-1\"><a href=\"#效果：-1\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><blockquote>\n<p>这是一个引用， 这里木有换行，<br>在这里换行了。</p>\n<blockquote>\n<p>内部嵌套</p>\n</blockquote>\n</blockquote>\n<hr>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p><strong>无序列表</strong>使用<code>*</code>、<code>+</code>或<code>-</code>后面加上空格来表示。</p>\n<h4 id=\"语法：-2\"><a href=\"#语法：-2\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* Item 1</span><br><span class=\"line\">* Item 2</span><br><span class=\"line\">* Item 3</span><br><span class=\"line\"></span><br><span class=\"line\">+ Item 1</span><br><span class=\"line\">+ Item 2</span><br><span class=\"line\">+ Item 3</span><br><span class=\"line\"></span><br><span class=\"line\">- Item 1</span><br><span class=\"line\">- Item 2</span><br><span class=\"line\">- Item 3</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-2\"><a href=\"#效果：-2\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><ul>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n</ul>\n<p><strong>有序列表</strong>使用数字加英文句号加空格表示。</p>\n<h4 id=\"语法：-3\"><a href=\"#语法：-3\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. Item 1</span><br><span class=\"line\">2. Item 2</span><br><span class=\"line\">3. Item 3</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-3\"><a href=\"#效果：-3\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><ol>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n</ol>\n<hr>\n<h2 id=\"代码区域\"><a href=\"#代码区域\" class=\"headerlink\" title=\"代码区域\"></a>代码区域</h2><p><strong>行内代码</strong>使用<strong>反斜杠</strong><code>`</code>表示。<br><strong>代码段落</strong>则是在每行文字前加4个空格或者1个缩进符表示。</p>\n<h4 id=\"语法：-4\"><a href=\"#语法：-4\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bash中可以使用echo来进行输出。</span><br><span class=\"line\">    $ echo &#39;Something&#39;</span><br><span class=\"line\">    $ echo -e &#39;\\tSomething\\n&#39;</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-4\"><a href=\"#效果：-4\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><p>Bash中可以使用echo来进行输出。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ echo &#39;Something&#39;</span><br><span class=\"line\">$ echo -e &#39;\\tSomething\\n&#39;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h2><p>Markdown使用<code>\\*</code>或<code>\\_</code>表示强调。</p>\n<h4 id=\"语法：-5\"><a href=\"#语法：-5\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">单星号 &#x3D; *斜体*</span><br><span class=\"line\">单下划线 &#x3D; _斜体_</span><br><span class=\"line\">双星号 &#x3D; **加粗**</span><br><span class=\"line\">双下划线 &#x3D; __加粗__</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-5\"><a href=\"#效果：-5\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><p>单星号 = <em>斜体</em><br>单下划线 = <em>斜体</em><br>双星号 = <strong>加粗</strong><br>双下划线 = <strong>加粗</strong></p>\n<hr>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p>Markdown支持两种风格的链接：<em>Inline</em>和<em>Reference</em>。</p>\n<h4 id=\"语法：-6\"><a href=\"#语法：-6\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><p><em>Inline</em>：以中括号标记显示的链接文本，后面紧跟用小括号包围的链接。如果链接有title属性，则在链接中使用<strong>空格</strong>加<strong>“title属性”</strong>。<br><em>Reference</em>：一般应用于多个不同位置使用相同链接。通常分为两个部分，调用部分为<code>[链接文本][ref]</code>；定义部分可以出现在文本中的其他位置，格式为<code>[ref]: http://some/link/address (可选的标题)</code>。<br><em>注：ref中不区分大小写。</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个Inline[示例](http:&#x2F;&#x2F;equation85.github.com &quot;可选的title&quot;)。</span><br><span class=\"line\">这是一个Reference[示例][ref]。</span><br><span class=\"line\">[ref]: http:&#x2F;&#x2F;equation85.github.com</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-6\"><a href=\"#效果：-6\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><p>这是一个<em>Inline</em><a href=\"http://equation85.github.com/\" target=\"_blank\" rel=\"noopener\">示例</a>。<br>这是一个<em>Reference</em><a href=\"http://equation85.github.com/\" target=\"_blank\" rel=\"noopener\">示例</a>。</p>\n<hr>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>图片的使用方法基本上和链接类似，只是在中括号前加<strong>叹号</strong>。<br><em>注：Markdown不能设置图片大小，如果必须设置则应使用HTML标记。</em></p>\n<h4 id=\"语法：-7\"><a href=\"#语法：-7\" class=\"headerlink\" title=\"语法：\"></a>语法：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Inline示例：![替代文本](&#x2F;assets&#x2F;images&#x2F;jian.jpg &quot;可选的title&quot;)</span><br><span class=\"line\">Reference示例：![替代文本][pic]</span><br><span class=\"line\">[pic]: &#x2F;assets&#x2F;images&#x2F;ship.jpg &quot;可选的title&quot;</span><br><span class=\"line\">HTML示例：&lt;img src&#x3D;&quot;&#x2F;assets&#x2F;images&#x2F;jian.jpg&quot; alt&#x3D;&quot;替代文本&quot; title&#x3D;&quot;标题文本&quot; width&#x3D;&quot;200&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"效果：-7\"><a href=\"#效果：-7\" class=\"headerlink\" title=\"效果：\"></a>效果：</h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"http://equation85.github.io/assets/images/jian.jpg\" alt=\"替代文本\"></p>\n<hr>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h4 id=\"自动链接\"><a href=\"#自动链接\" class=\"headerlink\" title=\"自动链接\"></a>自动链接</h4><p>使用<strong>尖括号</strong>，可以为输入的URL或者邮箱自动创建链接。如<a href=\"mailto:test@domain.com\">test@domain.com</a>。</p>\n<h4 id=\"分隔线\"><a href=\"#分隔线\" class=\"headerlink\" title=\"分隔线\"></a>分隔线</h4><p>在一行中使用三个或三个以上的<code>*</code>、<code>-</code>或<code>_</code>可以添加分隔线，其中可以有空白，但是不能有其他字符。</p>\n<h4 id=\"转义字符\"><a href=\"#转义字符\" class=\"headerlink\" title=\"转义字符\"></a>转义字符</h4><p>Markdown中的转义字符为<code>\\</code>，可以转义的有：</p>\n<ul>\n<li>\\ 反斜杠</li>\n<li>` 反引号</li>\n<li>* 星号</li>\n<li>_ 下划线</li>\n<li>{} 大括号</li>\n<li>[] 中括号</li>\n<li>() 小括号</li>\n<li># 井号</li>\n<li>+ 加号</li>\n<li>- 减号</li>\n<li>. 英文句号</li>\n<li>! 感叹号</li>\n</ul>\n<hr>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>Markdown语法很大程度上减少了编辑的成本，但是在写作这篇文章的时候也发现某些标记对中文的支持似乎并不完美，虽然这些缺陷可以通过直接插入HTML代码解决（但这么做一点都不漂亮）。总的来说，能够在离线状态下使用命令行模式进行写作还是很爽的，相比在线写作模式精力可以更专注。</p>\n"},{"title":"PT站点备忘","date":"2019-11-23T09:34:12.000Z","_content":"\n> 有缘看到这篇帖子又有PT经验的可以向 wannayoung@163.com 发邮件求邀，请注意表格中邀请数量。\n\n| **站点**                                  | 等级    | 分享率 | 魔力   | 邀请 | 入站时间   |\n| :---------------------------------------- | :------ | :----- | :----- | ---: | :--------- |\n| **[BTSchool](https://pt.btschool.club/)** | Crazy   | 8.96   | 283902 |    3 | 2019/07/31 |\n| **[CHDBits](https://chdbits.co/)**        | Power   | 6.38   | 283545 |    0 | 2019/08/26 |\n| **[DicMusic](https://dicmusic.club/)**    | User    | 0.57   | 27638  |    0 | 2019/08/05 |\n| **[DiscFan](https://discfan.net/)**       | Veteran | 10.34  | 343148 |   15 | 2018/03/07 |\n| **[ExoticaZ](https://exoticaz.to/)**      | Veteran | 17.27  | 8391   |    0 | 2019/06/23 |\n| **[FileList](https://filelist.ro/)**      | Power   | 15.22  | 6525   |    0 | 2019/09/06 |\n| **[HDHome](https://hdhome.org/)**         | Insane  | 11.17  | 441378 |    0 | 2019/07/14 |\n| **[HDSky](https://hdsky.me/)**            | Power   | 10.28  | 80400  |    0 | 2019/11/01 |\n| **[IPTorrents](https://iptorrents.com/)** | Power   | 39.65  | 3640   |    3 | 2019/09/06 |\n| **[KeepFrds](https://pt.keepfrds.com/)**  | Crazy   | 6.63   | 100290 |    0 | 2019/07/26 |\n| **[MTeam](https://pt.m-team.cc/)**        | Nexus   | 11.06  | 636729 |    2 | 2018/01/04 |\n| [**MoeCat**](https://moecat.best/)        | Insane  | 10.5   | 443184 |    3 | 2019/07/02 |\n| **[NanYang](https://nanyangpt.com/)**     | Insane  | 7.11   | 247847 |    2 | 2019/07/12 |\n| **[OpenCD](https://open.cd/)**            | Crazy   | 3.39   | 193430 |    6 | 2019/07/29 |\n| **[OurBits](https://ourbits.club/)**      | Crazy   | 8.17   | 692703 |    0 | 2018/04/01 |\n| **[Pornbits](http://pornbits.net/)**      | User    | 10     | 1000   |    0 | 2019/12/27 |\n| **[PTer](https://pterclub.com/)**         | Crazy   | 6.86   | 234234 |   18 | 2019/07/16 |\n| **[PTHome](https://pthome.net/)**         | Insane  | 8.79   | 512684 |   12 | 2019/07/22 |\n| **[Spring](https://springsunday.net/)**   | Insane  | 12.6   | 282553 |    0 | 2019/07/22 |\n| **[SportCult](https://sportscult.org/)**  | Power   | 6.81   | 290    |    5 | 2019/09/05 |\n| **[TTG](https://totheglory.im/)**         | Crazy   | 4.95   | 42662  |    0 | 2019/07/14 |\n| **[YDY](https://pt.hdbd.us/)**            | Crazy   | 20.71  | 28795  |    0 | 2019/08/01 |\n| **[TJU](https://tjupt.org/)**             | Crazy   | 4.17   | 758148 |    5 | 2019/08/02 |\n\n","source":"_posts/PT站点备忘.md","raw":"---\ntitle: PT站点备忘\ndate: 2019-11-23 17:34:12\n---\n\n> 有缘看到这篇帖子又有PT经验的可以向 wannayoung@163.com 发邮件求邀，请注意表格中邀请数量。\n\n| **站点**                                  | 等级    | 分享率 | 魔力   | 邀请 | 入站时间   |\n| :---------------------------------------- | :------ | :----- | :----- | ---: | :--------- |\n| **[BTSchool](https://pt.btschool.club/)** | Crazy   | 8.96   | 283902 |    3 | 2019/07/31 |\n| **[CHDBits](https://chdbits.co/)**        | Power   | 6.38   | 283545 |    0 | 2019/08/26 |\n| **[DicMusic](https://dicmusic.club/)**    | User    | 0.57   | 27638  |    0 | 2019/08/05 |\n| **[DiscFan](https://discfan.net/)**       | Veteran | 10.34  | 343148 |   15 | 2018/03/07 |\n| **[ExoticaZ](https://exoticaz.to/)**      | Veteran | 17.27  | 8391   |    0 | 2019/06/23 |\n| **[FileList](https://filelist.ro/)**      | Power   | 15.22  | 6525   |    0 | 2019/09/06 |\n| **[HDHome](https://hdhome.org/)**         | Insane  | 11.17  | 441378 |    0 | 2019/07/14 |\n| **[HDSky](https://hdsky.me/)**            | Power   | 10.28  | 80400  |    0 | 2019/11/01 |\n| **[IPTorrents](https://iptorrents.com/)** | Power   | 39.65  | 3640   |    3 | 2019/09/06 |\n| **[KeepFrds](https://pt.keepfrds.com/)**  | Crazy   | 6.63   | 100290 |    0 | 2019/07/26 |\n| **[MTeam](https://pt.m-team.cc/)**        | Nexus   | 11.06  | 636729 |    2 | 2018/01/04 |\n| [**MoeCat**](https://moecat.best/)        | Insane  | 10.5   | 443184 |    3 | 2019/07/02 |\n| **[NanYang](https://nanyangpt.com/)**     | Insane  | 7.11   | 247847 |    2 | 2019/07/12 |\n| **[OpenCD](https://open.cd/)**            | Crazy   | 3.39   | 193430 |    6 | 2019/07/29 |\n| **[OurBits](https://ourbits.club/)**      | Crazy   | 8.17   | 692703 |    0 | 2018/04/01 |\n| **[Pornbits](http://pornbits.net/)**      | User    | 10     | 1000   |    0 | 2019/12/27 |\n| **[PTer](https://pterclub.com/)**         | Crazy   | 6.86   | 234234 |   18 | 2019/07/16 |\n| **[PTHome](https://pthome.net/)**         | Insane  | 8.79   | 512684 |   12 | 2019/07/22 |\n| **[Spring](https://springsunday.net/)**   | Insane  | 12.6   | 282553 |    0 | 2019/07/22 |\n| **[SportCult](https://sportscult.org/)**  | Power   | 6.81   | 290    |    5 | 2019/09/05 |\n| **[TTG](https://totheglory.im/)**         | Crazy   | 4.95   | 42662  |    0 | 2019/07/14 |\n| **[YDY](https://pt.hdbd.us/)**            | Crazy   | 20.71  | 28795  |    0 | 2019/08/01 |\n| **[TJU](https://tjupt.org/)**             | Crazy   | 4.17   | 758148 |    5 | 2019/08/02 |\n\n","slug":"PT站点备忘","published":1,"updated":"2020-03-31T11:30:46.206Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8m20003s09k29vf4ey9","content":"<blockquote>\n<p>有缘看到这篇帖子又有PT经验的可以向 <a href=\"mailto:wannayoung@163.com\">wannayoung@163.com</a> 发邮件求邀，请注意表格中邀请数量。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>站点</strong></th>\n<th style=\"text-align:left\">等级</th>\n<th style=\"text-align:left\">分享率</th>\n<th style=\"text-align:left\">魔力</th>\n<th style=\"text-align:right\">邀请</th>\n<th style=\"text-align:left\">入站时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.btschool.club/\" target=\"_blank\" rel=\"noopener\">BTSchool</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">8.96</td>\n<td style=\"text-align:left\">283902</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/07/31</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://chdbits.co/\" target=\"_blank\" rel=\"noopener\">CHDBits</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">6.38</td>\n<td style=\"text-align:left\">283545</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/26</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://dicmusic.club/\" target=\"_blank\" rel=\"noopener\">DicMusic</a></strong></td>\n<td style=\"text-align:left\">User</td>\n<td style=\"text-align:left\">0.57</td>\n<td style=\"text-align:left\">27638</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/05</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://discfan.net/\" target=\"_blank\" rel=\"noopener\">DiscFan</a></strong></td>\n<td style=\"text-align:left\">Veteran</td>\n<td style=\"text-align:left\">10.34</td>\n<td style=\"text-align:left\">343148</td>\n<td style=\"text-align:right\">15</td>\n<td style=\"text-align:left\">2018/03/07</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://exoticaz.to/\" target=\"_blank\" rel=\"noopener\">ExoticaZ</a></strong></td>\n<td style=\"text-align:left\">Veteran</td>\n<td style=\"text-align:left\">17.27</td>\n<td style=\"text-align:left\">8391</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/06/23</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://filelist.ro/\" target=\"_blank\" rel=\"noopener\">FileList</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">15.22</td>\n<td style=\"text-align:left\">6525</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/09/06</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://hdhome.org/\" target=\"_blank\" rel=\"noopener\">HDHome</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">11.17</td>\n<td style=\"text-align:left\">441378</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/14</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://hdsky.me/\" target=\"_blank\" rel=\"noopener\">HDSky</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">10.28</td>\n<td style=\"text-align:left\">80400</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/11/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://iptorrents.com/\" target=\"_blank\" rel=\"noopener\">IPTorrents</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">39.65</td>\n<td style=\"text-align:left\">3640</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/09/06</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.keepfrds.com/\" target=\"_blank\" rel=\"noopener\">KeepFrds</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">6.63</td>\n<td style=\"text-align:left\">100290</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/26</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.m-team.cc/\" target=\"_blank\" rel=\"noopener\">MTeam</a></strong></td>\n<td style=\"text-align:left\">Nexus</td>\n<td style=\"text-align:left\">11.06</td>\n<td style=\"text-align:left\">636729</td>\n<td style=\"text-align:right\">2</td>\n<td style=\"text-align:left\">2018/01/04</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://moecat.best/\" target=\"_blank\" rel=\"noopener\"><strong>MoeCat</strong></a></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">10.5</td>\n<td style=\"text-align:left\">443184</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/07/02</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://nanyangpt.com/\" target=\"_blank\" rel=\"noopener\">NanYang</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">7.11</td>\n<td style=\"text-align:left\">247847</td>\n<td style=\"text-align:right\">2</td>\n<td style=\"text-align:left\">2019/07/12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://open.cd/\" target=\"_blank\" rel=\"noopener\">OpenCD</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">3.39</td>\n<td style=\"text-align:left\">193430</td>\n<td style=\"text-align:right\">6</td>\n<td style=\"text-align:left\">2019/07/29</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://ourbits.club/\" target=\"_blank\" rel=\"noopener\">OurBits</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">8.17</td>\n<td style=\"text-align:left\">692703</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2018/04/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"http://pornbits.net/\" target=\"_blank\" rel=\"noopener\">Pornbits</a></strong></td>\n<td style=\"text-align:left\">User</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">1000</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/12/27</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pterclub.com/\" target=\"_blank\" rel=\"noopener\">PTer</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">6.86</td>\n<td style=\"text-align:left\">234234</td>\n<td style=\"text-align:right\">18</td>\n<td style=\"text-align:left\">2019/07/16</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pthome.net/\" target=\"_blank\" rel=\"noopener\">PTHome</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">8.79</td>\n<td style=\"text-align:left\">512684</td>\n<td style=\"text-align:right\">12</td>\n<td style=\"text-align:left\">2019/07/22</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://springsunday.net/\" target=\"_blank\" rel=\"noopener\">Spring</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">12.6</td>\n<td style=\"text-align:left\">282553</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/22</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://sportscult.org/\" target=\"_blank\" rel=\"noopener\">SportCult</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">6.81</td>\n<td style=\"text-align:left\">290</td>\n<td style=\"text-align:right\">5</td>\n<td style=\"text-align:left\">2019/09/05</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://totheglory.im/\" target=\"_blank\" rel=\"noopener\">TTG</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">4.95</td>\n<td style=\"text-align:left\">42662</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/14</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.hdbd.us/\" target=\"_blank\" rel=\"noopener\">YDY</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">20.71</td>\n<td style=\"text-align:left\">28795</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://tjupt.org/\" target=\"_blank\" rel=\"noopener\">TJU</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">4.17</td>\n<td style=\"text-align:left\">758148</td>\n<td style=\"text-align:right\">5</td>\n<td style=\"text-align:left\">2019/08/02</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>有缘看到这篇帖子又有PT经验的可以向 <a href=\"mailto:wannayoung@163.com\">wannayoung@163.com</a> 发邮件求邀，请注意表格中邀请数量。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>站点</strong></th>\n<th style=\"text-align:left\">等级</th>\n<th style=\"text-align:left\">分享率</th>\n<th style=\"text-align:left\">魔力</th>\n<th style=\"text-align:right\">邀请</th>\n<th style=\"text-align:left\">入站时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.btschool.club/\" target=\"_blank\" rel=\"noopener\">BTSchool</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">8.96</td>\n<td style=\"text-align:left\">283902</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/07/31</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://chdbits.co/\" target=\"_blank\" rel=\"noopener\">CHDBits</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">6.38</td>\n<td style=\"text-align:left\">283545</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/26</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://dicmusic.club/\" target=\"_blank\" rel=\"noopener\">DicMusic</a></strong></td>\n<td style=\"text-align:left\">User</td>\n<td style=\"text-align:left\">0.57</td>\n<td style=\"text-align:left\">27638</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/05</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://discfan.net/\" target=\"_blank\" rel=\"noopener\">DiscFan</a></strong></td>\n<td style=\"text-align:left\">Veteran</td>\n<td style=\"text-align:left\">10.34</td>\n<td style=\"text-align:left\">343148</td>\n<td style=\"text-align:right\">15</td>\n<td style=\"text-align:left\">2018/03/07</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://exoticaz.to/\" target=\"_blank\" rel=\"noopener\">ExoticaZ</a></strong></td>\n<td style=\"text-align:left\">Veteran</td>\n<td style=\"text-align:left\">17.27</td>\n<td style=\"text-align:left\">8391</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/06/23</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://filelist.ro/\" target=\"_blank\" rel=\"noopener\">FileList</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">15.22</td>\n<td style=\"text-align:left\">6525</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/09/06</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://hdhome.org/\" target=\"_blank\" rel=\"noopener\">HDHome</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">11.17</td>\n<td style=\"text-align:left\">441378</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/14</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://hdsky.me/\" target=\"_blank\" rel=\"noopener\">HDSky</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">10.28</td>\n<td style=\"text-align:left\">80400</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/11/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://iptorrents.com/\" target=\"_blank\" rel=\"noopener\">IPTorrents</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">39.65</td>\n<td style=\"text-align:left\">3640</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/09/06</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.keepfrds.com/\" target=\"_blank\" rel=\"noopener\">KeepFrds</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">6.63</td>\n<td style=\"text-align:left\">100290</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/26</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.m-team.cc/\" target=\"_blank\" rel=\"noopener\">MTeam</a></strong></td>\n<td style=\"text-align:left\">Nexus</td>\n<td style=\"text-align:left\">11.06</td>\n<td style=\"text-align:left\">636729</td>\n<td style=\"text-align:right\">2</td>\n<td style=\"text-align:left\">2018/01/04</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><a href=\"https://moecat.best/\" target=\"_blank\" rel=\"noopener\"><strong>MoeCat</strong></a></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">10.5</td>\n<td style=\"text-align:left\">443184</td>\n<td style=\"text-align:right\">3</td>\n<td style=\"text-align:left\">2019/07/02</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://nanyangpt.com/\" target=\"_blank\" rel=\"noopener\">NanYang</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">7.11</td>\n<td style=\"text-align:left\">247847</td>\n<td style=\"text-align:right\">2</td>\n<td style=\"text-align:left\">2019/07/12</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://open.cd/\" target=\"_blank\" rel=\"noopener\">OpenCD</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">3.39</td>\n<td style=\"text-align:left\">193430</td>\n<td style=\"text-align:right\">6</td>\n<td style=\"text-align:left\">2019/07/29</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://ourbits.club/\" target=\"_blank\" rel=\"noopener\">OurBits</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">8.17</td>\n<td style=\"text-align:left\">692703</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2018/04/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"http://pornbits.net/\" target=\"_blank\" rel=\"noopener\">Pornbits</a></strong></td>\n<td style=\"text-align:left\">User</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">1000</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/12/27</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pterclub.com/\" target=\"_blank\" rel=\"noopener\">PTer</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">6.86</td>\n<td style=\"text-align:left\">234234</td>\n<td style=\"text-align:right\">18</td>\n<td style=\"text-align:left\">2019/07/16</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pthome.net/\" target=\"_blank\" rel=\"noopener\">PTHome</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">8.79</td>\n<td style=\"text-align:left\">512684</td>\n<td style=\"text-align:right\">12</td>\n<td style=\"text-align:left\">2019/07/22</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://springsunday.net/\" target=\"_blank\" rel=\"noopener\">Spring</a></strong></td>\n<td style=\"text-align:left\">Insane</td>\n<td style=\"text-align:left\">12.6</td>\n<td style=\"text-align:left\">282553</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/22</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://sportscult.org/\" target=\"_blank\" rel=\"noopener\">SportCult</a></strong></td>\n<td style=\"text-align:left\">Power</td>\n<td style=\"text-align:left\">6.81</td>\n<td style=\"text-align:left\">290</td>\n<td style=\"text-align:right\">5</td>\n<td style=\"text-align:left\">2019/09/05</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://totheglory.im/\" target=\"_blank\" rel=\"noopener\">TTG</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">4.95</td>\n<td style=\"text-align:left\">42662</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/07/14</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://pt.hdbd.us/\" target=\"_blank\" rel=\"noopener\">YDY</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">20.71</td>\n<td style=\"text-align:left\">28795</td>\n<td style=\"text-align:right\">0</td>\n<td style=\"text-align:left\">2019/08/01</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong><a href=\"https://tjupt.org/\" target=\"_blank\" rel=\"noopener\">TJU</a></strong></td>\n<td style=\"text-align:left\">Crazy</td>\n<td style=\"text-align:left\">4.17</td>\n<td style=\"text-align:left\">758148</td>\n<td style=\"text-align:right\">5</td>\n<td style=\"text-align:left\">2019/08/02</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"iOS开发中的知识点","date":"2020-03-30T07:56:45.000Z","_content":"\n> iOS开发中的重要知识点，方便自己随时回顾查看，不间断更新。\n\n<!-- toc -->\n\n## OC 相关\n\n### 1、多线程\n\n#### 进程与线程\n\n##### \t进程：\n\n- 进程是一个具有一定独立功能的程序关于某次数据集合的一次运行活动，它是操作系统分配资源的基本单元\n\n- 进程是指在系统中正在运行的一个应用程序，就是一段程序的执行过程,我们可以理解为手机上的一个app\n\n- 每个进程之间是独立的，每个进程均运行在其专用且受保护的内存空间内，拥有独立运行所需的全部资源\n\n  ##### 线程：\n\n- 程序执行流的最小单元，线程是进程中的一个实体\n\n- 一个进程要想执行任务，必须至少有一条线程.应用程序启动的时候，系统会默认开启主线程\n\n  ##### 进程和线程：\n\n- 线程是进程的执行单元，进程的所有任务都在线程中执行\n\n- 线程是 CPU 分配资源和调度的最小单位\n\n- 一个程序可以对应多个进程(多进程),一个进程中可有多个线程,但至少要有一条线程\n  同一个进程内的线程共享进程资源\n\n#### 创建线程方式\n\n- NSThread面向对象的，需要手动创建线程，不需要手动销毁，子线程间通信很难\n- GCD基于C语言，充分利用设备的多核，自动管理线程生命周期，比NSOperation效率高\n- NSOperation基于GCD封装，更加面向对象，比GCD多了一些功能，可以添加线程间的依赖\n\n#### GCD（大中央调度）\n\n- 并发队列（让多个任务并发执行，异步任务下才有效）\n- 串行队列（任务一个接一个地执行，按照FIFO顺序执行）\n- 同步任务派发(synchronous，阻塞当前线程，等待任务块Block完成后,函数才能返回,后面的代码才能继续执行)\n- 异步任务派发(asynchronous，任务添加到队列后，函数立即返回，后面的代码不用等待任务完成后即可执行，异步提交任务执行无序)\n\n#### NSOpertionQueue\n\n1. 初始化NSOpertionQueue\n2. 创建线程队列的NSOpertion\n3. 添加NSOpertion的相关依赖\n4. 添加NSOpertion到NSOpertionQueue\n\n\n### 2、Runtime\n\n#### Runtime 机制\n\nruntime简称运行时。OC是运行时机制，也就是在运行时才做一些处理。\n例如：C语言在编译的时候就知道要调用哪个方法函数，而OC在编译的时候并不知道要调用哪个方法函数，只有在运行的时候才知道调用的方法函数名称，来找到对应的方法函数进行调用。\n\n#### Runtime 应用\n\n- 交换方法实现\n  场景：当第三方框架或者系统原生方法功能不能满足我们的时候，我们可以在保持系统原有方法功能的基础上，添加额外的功能。\n- 动态添加方法\n  场景：如果一个类方法非常多，加载类到内存的时候也比较耗费资源，需要给每个方法生成映射表，可以使用动态给某个类，添加方法解决。\n- 利用关联对象（AssociatedObject）给分类添加属性\n  场景：分类是不能自定义属性和变量的，这时候可以使用runtime动态添加属性方法\n  原理：给一个类声明属性，其实本质就是给这个类添加关联\n- 遍历类的所有成员变量\n   1)、NSCoding自动归档解档\n  场景：如果一个模型有许多个属性，实现自定义模型数据持久化时，需要对每个属性都实现一遍encodeObject 和decodeObjectForKey方法，比较麻烦。我们可以使用Runtime来解决。\n  原理：用runtime提供的函数遍历Model自身所有属性，并对属性进行encode和decode操作。\n   2)、字典转模型\n  原理：利用Runtime，遍历模型中所有属性，根据模型的属性名，去字典中查找key，取出对应的值，给模型的属性赋值\n  3)、修改textfield的占位文字颜色\n- 利用消息转发机制解决方法找不到的异常问题\n\n### 3、Runloop\n\n#### 什么是 RunLoop？\n\nRunLoop是一种高级的循环机制，让程序持续运行，并处理程序中的各种事件，让线程在需要做事的时候忙起来，不需要的话就让线程休眠。\n\n- RunLoop和线程是绑定在一起的，每条线程都有唯一一个与之对应的RunLoop对象。\n- 不能自己创建RunLoop对象，但是可以获取系统提供的RunLoop对象。\n- 主线程的RunLoop对象是由系统自动创建自动完成启动，而子线程中的RunLoop对象需要我们手动获取并启动。\n- NSRunLoop提供了一个添加NSTimer的方法，可以指定Mode，如果要让任何情况下都回调，需设置Mode为Common模式。\n\n#### 列表Timer停止\n\n原因在于滑动时当前线程的Runloop切换了mode用于列表滑动，导致timer暂停。滑动列表时，Runloop的mode由原来的Default模式切换到了Event Tracking模式，timer停止工作。\n\nRunloop中的mode主要用来指定事件在runloop中的优先级，有以下几种：\n\n- Default：默认，一般情况下使用\n- Connection：一般系统用来处理NSConnection相关事件，开发者一般用不到\n- Modal：处理modal panels事件\n- Event Tracking：用于处理拖拽和用户交互的模式\n- Common：包括Default，Modal，Event Tracking三大模式，可以处理几乎所有事件\n\n```objective-c\n// 方法一是将timer加入到NSRunloopCommonModes中\n[[NSRunLoop currentRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];\n\n// 方法二是将timer放到另一个线程中，然后开启另一个线程的runloop\ndispatch_async(dispatch_get_global_queue(0, 0), ^{\n\ttimer = [NSTimer scheduledTimerWithTimeInterval:1 ...];\n\t[[NSRunLoop currentRunLoop] run];\n});\n```\n\n### 4、KVC 和 KVO\n\n#### 什么是 KVC 和 KVO\n\nKVC(key-value-coding)键值编码，是一种间接访问实例变量的方法。提供一种机制来间接访问对象的属性。\n给私有变量赋值。\n\n- 给控件的内部属性赋值（如自定义UITextFiled的clearButton、placeholder的颜色，一般可利用runtime获取控件的内部属性名，Ivar *ivar = class_getInstanceVariable获取实例成员变量）\n  [textField setValue:[UIColor redColor] forKeyPath:@\"placeholderLabel.textColor\"];\n- 结合Runtime，model和字典的转换（setValuesForKeysWithDictionary，class_copyIvarList获取指定类的Ivar成员列表）\n\nKVO是一种基于KVC实现的观察者模式。当指被观察的对象的属性更改了，KVO会以自动或手动方式通知观察者。\n事例：监听 ScrollView 的 contentOffSet属性\n[scrollview addObserver:self forKeyPath:@\"contentOffset\" options: NSKeyValueObservingOptionNew context:nil];\n\n#### KVC的底层实现\n\n- 检查是否存在相应的key的set方法，如果存在，就调用set方法\n- 如果set方法不存在，就会查找与key相同名称并且带下划线的成员变量，如果有，则直接给成员变量属性赋值\n- 如果没有找到_key，就会查找相同名称的属性key，如果有就直接赋值\n- 如果还没有找到，则调用valueForUndefinedKey:和setValue:forUndefinedKey:方法，这些方法的默认实现都是抛出异常，我们可以根据需要重写它们\n\n#### KVO的底层实现\n\n- 当给A类添加KVO的时候，runtime动态的生成了一个子类NSKVONotifying_A，让A类的isa指针指向NSKVONotifying_A类，重写class方法，隐藏对象真实类信息\n- 重写监听属性的setter方法，在setter方法内部调用了Foundation 的 _NSSetObjectValueAndNotify 函数\n  _NSSetObjectValueAndNotify函数内部\n   1) 首先会调用 willChangeValueForKey\n   2) 然后给属性赋值\n   3) 最后调用 didChangeValueForKey\n   4) 最后调用 observer 的 observeValueForKeyPath 去告诉监听器属性值发生了改变 \n- 重写了dealloc做一些 KVO 内存释放\n\n## Swift 相关\n\n### 1、与 OC 比较\n\n#### 共同点\n\n- OC出现过的绝大多数概念，在Swift中继续有效（可能换个术语）\n- Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然\n\n#### 比较\n\n- Swift注重安全，OC注重灵活\n- Swift注重值类型，OC注重指针和引用\n- Swift是静态类型语言，OC是动态类型语言\n- Swift注重面向协议编程、函数式编程、面向对象编程，OC注重面向对象编程\n\n#### 优点\n\n- Swift容易阅读，文件结构和语法简化\n- Swift中有各种方便快捷的高阶函数（函数式编程）\n- Swift中的可选类型，用于所有数据类型，而不仅仅局限于类\n- Swift中的泛型更加方便和通用，OC中只能为集合类型添加泛型\n- Swift细化权限，open > public > internal(默认) > fileprivate > private\n- Swift中独有的元组类型(tuples)，把多个值组合成复合值。元组内的值并不要求是相同类型的\n\n### 2、高级用法\n\n#### 柯里化（Currying）\n\n把接受多个参数的方法变换成接受第一个参数的方法，并且返回接受余下的参数并且返回结果的新方法\n\n```swift\nfunc add(_ v1:Int,_ v2:Int) -> Int {\n    return v1 + v2\n}\nprint(add(1, 2))\n\n// 柯里化(Currying)\nfunc add(_ v:Int) -> (Int) -> Int {\n    return {$0 + v}\n}\nprint(add(1)(2))\n```\n\n#### 关键字mutating\n\n使用 struct 或 enum 实现某协议时，协议的方法前加 mutating 关键字，可以在此方法中修改 struct 或 enum的变量。使用 class 实现协议时，方法前面是不需要加 mutating 修饰的，因为 class 可以随意更改自己的成员变量。\n\n```swift\nprotocol Vehicle {\n   var numberOfWheels:Int{get}\n   mutating func changeNumberOfWheels()\n}\n\nstruct MyCar:Vehicle {\n   var numberOfWheels: Int = 4\n   mutating func changeNumberOfWheels() {\n       numberOfWheels = 4\n   }\n}\n```\n\n#### 元组（Tuple）\n\n元组是swift编程语言中唯一的一种复合类型，他可以将指定有限个数的任何类型一次整理为一个对象，元组中的每一种类型都可以是任何的结构体、枚举或类类型。\n\n```swift\n// 交换输入普通实现：\nfunc swapMe<T>(a: inout T, b: inout T) {\n  let temp = a\n  a = b\n  b = temp\n}\n\n// 交换输入元组实现：\nfunc swapMe<T>(a: inout T, b: inout T) {\n\t(a,b) = (b,a)\n}\n```\n\n#### 操作符\n\n- precedencegroup：定义操作符的优先级\n- associativity：操作符的结合律\n- higherThan、lowerThan：运算符的优先级\n- prefix、infix、postfix：前缀、中缀、后缀运算符\n\n```swift\ninfix operator +++  // 中缀\nfunc +++(left: Int, right: Int) -> Int {\n    return left+right*2\n}\nprint(2+++3) // 8\n\nprefix operator ==+  // 前缀\nprefix func ==+(left: Int) -> Int {\n   return left*2\n}\nprint(==+2) // 4\n\npostfix operator +==  // 后缀\npostfix func +==(right: Int) -> Int {\n   return right*3\n}\nprint(2+==) // 6\n```\n\n#### 输入输出参数（inout）\n\n可变形式参数只能在函数的内部做改变。如果你想函数能够修改一个形式参数的值，而且你想这些改变在函数结束之后依然生效，那么就需要将形式参数定义为输入输出形式参数。\n\n```swift\nvar b = 10\nfunc test(a:inout Int) {\n   a = 20\n}\ntest(a: &b)\nprint(b) //20\n```\n\n#### 嵌套函数\n\n我们可以把函数当成参数或者变量来使用，函数内部嵌套函数。\n\n```swift\nfunc forward(_ forward:Bool) -> (Int) -> Int {\n    \n    func next(_ input:Int) -> Int {\n        input + 1\n    }\n\n    func previous(_ input:Int) -> Int {\n        input - 1\n    }\n  \n    return forward ? next : previous\n}\n```\n\n#### 命名空间\n\nSwift 的命名空间是基于 module 而不是在代码中显式地指明，每个 module 代表了 Swift 中的一个命名空间。也就是说，同一个 target 里的类型名称还是不能相同的。在我们进行 app 开发时，默认添加到 app 的主 target 的内容都是处于同一个命名空间中的，我们可以通过创建 Cocoa (Touch) Framework 的 target 的方法来新建一个 module，这样我们就可以在两个不同的 target 中添加同样名字的类型了。\n\n#### 别名（typealias）\n\n我们可以给一个复杂的难以理解的类型起一个别名，方便我们使用和理解。\n\n```swift\n// Swift 定义 Void 为空的元组\npublic typealias Void = ()\n\n// 函数别名\ntypealias IntFn = (Int,Int) -> Int\nfunc difference(v1:Int,v2:Int) -> Int {\n   v1 - v2\n}\nlet fn:IntFn = difference\nprint(fn(2,1))  //1\n\n// 元组别名\ntypealias Date = (year:Int,month:Int,day:Int)\nfunc test(_ date:Date) {\n   print(date.year)\n}\ntest((2019,10,30))\n```\n\n#### 可变参数\n\n一个可变形式参数可以接受零或者多个`特定类型的值`，可变参数必须是同一类型的。当调用函数的时候你可以利用可变形式参数来声明形式参数可以被传入值的数量是可变的。可以通过在形式参数的类型名称后边插入三个点符号（`...`）来书写可变形式参数。\n\n```swift\nfunc sum(_ numbers:Int...) -> Int{\n   var total = 0\n   for item in numbers {\n       total += item\n   }\n   return total\n}\nsum(1,2,3,4)  // 10\n```\n\n#### 初始化\n\n不同于 Objective-C 的初始化器，Swift 初始化器不返回值。这些初始化器主要的角色就是确保在第一次使用之前某类型的新实例能够正确初始化。\n\n```swift\nclass Person {\n   var age: Int\n   var name: String\n   //指定初始化器\n   init(age:Int, name:String) {\n       self.age = age\n       self.name = name\n   }\n   //便捷初始化器\n   convenience init(age:Int){\n       self.init(age:age,name:\"\")\n   }\n}\n```\n\n- 每一个类至少有一个指定初始化器\n- 默认初始化器总是类的指定初始化器\n- 一个类通常只有一个指定初始化器\n- 指定初始化器必须从他的直系父类调用指定初始化器\n- 便捷初始化器必须从相同的类里调用另一个初始化器\n- 便捷初始化器最终必须调用一个指定初始化器\n\n## 控件使用\n\n### 1、UIView\n\n### 2、UITableView\n\n## 实际应用\n\n### 网络封装\n\n1. 使用xcconfig配置不同环境host\n2. 添加通用的请求类和响应类\n3. 根据后台设计添加处理加密、验签等方法\n4. 封装get、post、upload请求方法\n5. 请求方法传入：响应类泛型、请求路径、请求参数\n6. 请求完成回调：成功（返回响应类型对象）、异常、失败\n7. 异常处理（退出登录、重试机制...）\n8. 添加统一的网络请求hud\n\n### 图片加载\n\n1. 显示placeholder占位图\n2. 以url为数据索引先在内存中查找是否有缓存\n3. 如果没有缓存，通过md5处理过的key来在磁盘查找，找到把的数据加载到内存并显示出来\n4. 如果内存和磁盘中都没有找到，就会向远程服务器发送请求，开始下载图片\n5. 下载完的图片加入缓存并写入到磁盘中\n6. 获取图片的过程是在子线程中进行，在主线程中显示\n\n## APP 架构\n\n### 1、组件化\n\n#### 优点\n\n- 业务分层、解耦，使代码变得可维护\n- 拆分、组织庞大的项目，使项目变得可维护\n- 便于各业务功能拆分、抽离，实现功能复用\n- 业务隔离，实现跨团队开发代码控制和版本风险控制\n- 模块化对代码的封装性、合理性都有一定的要求，提升开发人员编码能力\n- 在维护好组件的情况下，满足不同客户需求（在新的主App中使用当前组件）\n\n#### 实现\n\n- 基础组件：按功能分库，不涉及业务需求，通过接口供业务组件调用\n- 基础UI组件：各个业务模块依赖使用，但需要保持好定制扩展的设计\n- 业务组件：业务功能间相对独立，相互间没有Model共享的依赖\n- 中间件：target-action，url-block，protocol-class\n\n### 2、MVVM\n\n## App 优化\n\n### 1、启动优化\n\n- 删除无用代码\n- 抽象重复代码\n- 第三方库延迟初始化\n- 业务逻辑延迟或异步执行\n- App首页面先展示后渲染\n- Time Profiler查找耗时操作和页面\n\n### 2、网络优化\n\n#### 请求优化\n\n- 使用HttpDNS下发ip列表\n- 根据不同网络设置超时时间\n- 网络环境切换或失败，自动重发\n\n#### 传输优化\n\n- 使用http缓存\n- 文件传输启用Gzip\n- 采用WebP图片格式\n- 采用更好的序列化/反序列化方案\n\n### 3、体积优化\n\n- 开启Bitcode\n- 删除无用资源和代码\n- 对图片资源进行压缩\n- 使用更轻量级的第三方库\n- 使用纯代码进行界面布局\n- 启动图和引导图使用原生绘制或jpg\n- 某些资源文件放在服务器上，按需下载\n\n### 4、性能优化\n\n#### 速度优化\n\n- 耗时操作放入子线程\n- 使用图片缓存，数据缓存\n- 图文混排使用CoreText\n- 使图片适合UIImageView的尺寸\n- 减少离屏渲染，子线程绘制，主线程渲染\n- 减少subviews个数，用layer绘制元素\n- 减少clearColor，maskToBounds，阴影\n\n#### tableview优化\n\n- 使用cell复用机制\n- 不要动态添加视图\n- 图片异步加载并缓存\n- 手动计算高度缓存高度\n- 按需刷新，刷新最小列表单元\n\n","source":"_posts/iOS开发中的知识点.md","raw":"---\ntitle: iOS开发中的知识点\ndate: 2020-03-30 15:56:45\n\n---\n\n> iOS开发中的重要知识点，方便自己随时回顾查看，不间断更新。\n\n<!-- toc -->\n\n## OC 相关\n\n### 1、多线程\n\n#### 进程与线程\n\n##### \t进程：\n\n- 进程是一个具有一定独立功能的程序关于某次数据集合的一次运行活动，它是操作系统分配资源的基本单元\n\n- 进程是指在系统中正在运行的一个应用程序，就是一段程序的执行过程,我们可以理解为手机上的一个app\n\n- 每个进程之间是独立的，每个进程均运行在其专用且受保护的内存空间内，拥有独立运行所需的全部资源\n\n  ##### 线程：\n\n- 程序执行流的最小单元，线程是进程中的一个实体\n\n- 一个进程要想执行任务，必须至少有一条线程.应用程序启动的时候，系统会默认开启主线程\n\n  ##### 进程和线程：\n\n- 线程是进程的执行单元，进程的所有任务都在线程中执行\n\n- 线程是 CPU 分配资源和调度的最小单位\n\n- 一个程序可以对应多个进程(多进程),一个进程中可有多个线程,但至少要有一条线程\n  同一个进程内的线程共享进程资源\n\n#### 创建线程方式\n\n- NSThread面向对象的，需要手动创建线程，不需要手动销毁，子线程间通信很难\n- GCD基于C语言，充分利用设备的多核，自动管理线程生命周期，比NSOperation效率高\n- NSOperation基于GCD封装，更加面向对象，比GCD多了一些功能，可以添加线程间的依赖\n\n#### GCD（大中央调度）\n\n- 并发队列（让多个任务并发执行，异步任务下才有效）\n- 串行队列（任务一个接一个地执行，按照FIFO顺序执行）\n- 同步任务派发(synchronous，阻塞当前线程，等待任务块Block完成后,函数才能返回,后面的代码才能继续执行)\n- 异步任务派发(asynchronous，任务添加到队列后，函数立即返回，后面的代码不用等待任务完成后即可执行，异步提交任务执行无序)\n\n#### NSOpertionQueue\n\n1. 初始化NSOpertionQueue\n2. 创建线程队列的NSOpertion\n3. 添加NSOpertion的相关依赖\n4. 添加NSOpertion到NSOpertionQueue\n\n\n### 2、Runtime\n\n#### Runtime 机制\n\nruntime简称运行时。OC是运行时机制，也就是在运行时才做一些处理。\n例如：C语言在编译的时候就知道要调用哪个方法函数，而OC在编译的时候并不知道要调用哪个方法函数，只有在运行的时候才知道调用的方法函数名称，来找到对应的方法函数进行调用。\n\n#### Runtime 应用\n\n- 交换方法实现\n  场景：当第三方框架或者系统原生方法功能不能满足我们的时候，我们可以在保持系统原有方法功能的基础上，添加额外的功能。\n- 动态添加方法\n  场景：如果一个类方法非常多，加载类到内存的时候也比较耗费资源，需要给每个方法生成映射表，可以使用动态给某个类，添加方法解决。\n- 利用关联对象（AssociatedObject）给分类添加属性\n  场景：分类是不能自定义属性和变量的，这时候可以使用runtime动态添加属性方法\n  原理：给一个类声明属性，其实本质就是给这个类添加关联\n- 遍历类的所有成员变量\n   1)、NSCoding自动归档解档\n  场景：如果一个模型有许多个属性，实现自定义模型数据持久化时，需要对每个属性都实现一遍encodeObject 和decodeObjectForKey方法，比较麻烦。我们可以使用Runtime来解决。\n  原理：用runtime提供的函数遍历Model自身所有属性，并对属性进行encode和decode操作。\n   2)、字典转模型\n  原理：利用Runtime，遍历模型中所有属性，根据模型的属性名，去字典中查找key，取出对应的值，给模型的属性赋值\n  3)、修改textfield的占位文字颜色\n- 利用消息转发机制解决方法找不到的异常问题\n\n### 3、Runloop\n\n#### 什么是 RunLoop？\n\nRunLoop是一种高级的循环机制，让程序持续运行，并处理程序中的各种事件，让线程在需要做事的时候忙起来，不需要的话就让线程休眠。\n\n- RunLoop和线程是绑定在一起的，每条线程都有唯一一个与之对应的RunLoop对象。\n- 不能自己创建RunLoop对象，但是可以获取系统提供的RunLoop对象。\n- 主线程的RunLoop对象是由系统自动创建自动完成启动，而子线程中的RunLoop对象需要我们手动获取并启动。\n- NSRunLoop提供了一个添加NSTimer的方法，可以指定Mode，如果要让任何情况下都回调，需设置Mode为Common模式。\n\n#### 列表Timer停止\n\n原因在于滑动时当前线程的Runloop切换了mode用于列表滑动，导致timer暂停。滑动列表时，Runloop的mode由原来的Default模式切换到了Event Tracking模式，timer停止工作。\n\nRunloop中的mode主要用来指定事件在runloop中的优先级，有以下几种：\n\n- Default：默认，一般情况下使用\n- Connection：一般系统用来处理NSConnection相关事件，开发者一般用不到\n- Modal：处理modal panels事件\n- Event Tracking：用于处理拖拽和用户交互的模式\n- Common：包括Default，Modal，Event Tracking三大模式，可以处理几乎所有事件\n\n```objective-c\n// 方法一是将timer加入到NSRunloopCommonModes中\n[[NSRunLoop currentRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];\n\n// 方法二是将timer放到另一个线程中，然后开启另一个线程的runloop\ndispatch_async(dispatch_get_global_queue(0, 0), ^{\n\ttimer = [NSTimer scheduledTimerWithTimeInterval:1 ...];\n\t[[NSRunLoop currentRunLoop] run];\n});\n```\n\n### 4、KVC 和 KVO\n\n#### 什么是 KVC 和 KVO\n\nKVC(key-value-coding)键值编码，是一种间接访问实例变量的方法。提供一种机制来间接访问对象的属性。\n给私有变量赋值。\n\n- 给控件的内部属性赋值（如自定义UITextFiled的clearButton、placeholder的颜色，一般可利用runtime获取控件的内部属性名，Ivar *ivar = class_getInstanceVariable获取实例成员变量）\n  [textField setValue:[UIColor redColor] forKeyPath:@\"placeholderLabel.textColor\"];\n- 结合Runtime，model和字典的转换（setValuesForKeysWithDictionary，class_copyIvarList获取指定类的Ivar成员列表）\n\nKVO是一种基于KVC实现的观察者模式。当指被观察的对象的属性更改了，KVO会以自动或手动方式通知观察者。\n事例：监听 ScrollView 的 contentOffSet属性\n[scrollview addObserver:self forKeyPath:@\"contentOffset\" options: NSKeyValueObservingOptionNew context:nil];\n\n#### KVC的底层实现\n\n- 检查是否存在相应的key的set方法，如果存在，就调用set方法\n- 如果set方法不存在，就会查找与key相同名称并且带下划线的成员变量，如果有，则直接给成员变量属性赋值\n- 如果没有找到_key，就会查找相同名称的属性key，如果有就直接赋值\n- 如果还没有找到，则调用valueForUndefinedKey:和setValue:forUndefinedKey:方法，这些方法的默认实现都是抛出异常，我们可以根据需要重写它们\n\n#### KVO的底层实现\n\n- 当给A类添加KVO的时候，runtime动态的生成了一个子类NSKVONotifying_A，让A类的isa指针指向NSKVONotifying_A类，重写class方法，隐藏对象真实类信息\n- 重写监听属性的setter方法，在setter方法内部调用了Foundation 的 _NSSetObjectValueAndNotify 函数\n  _NSSetObjectValueAndNotify函数内部\n   1) 首先会调用 willChangeValueForKey\n   2) 然后给属性赋值\n   3) 最后调用 didChangeValueForKey\n   4) 最后调用 observer 的 observeValueForKeyPath 去告诉监听器属性值发生了改变 \n- 重写了dealloc做一些 KVO 内存释放\n\n## Swift 相关\n\n### 1、与 OC 比较\n\n#### 共同点\n\n- OC出现过的绝大多数概念，在Swift中继续有效（可能换个术语）\n- Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然\n\n#### 比较\n\n- Swift注重安全，OC注重灵活\n- Swift注重值类型，OC注重指针和引用\n- Swift是静态类型语言，OC是动态类型语言\n- Swift注重面向协议编程、函数式编程、面向对象编程，OC注重面向对象编程\n\n#### 优点\n\n- Swift容易阅读，文件结构和语法简化\n- Swift中有各种方便快捷的高阶函数（函数式编程）\n- Swift中的可选类型，用于所有数据类型，而不仅仅局限于类\n- Swift中的泛型更加方便和通用，OC中只能为集合类型添加泛型\n- Swift细化权限，open > public > internal(默认) > fileprivate > private\n- Swift中独有的元组类型(tuples)，把多个值组合成复合值。元组内的值并不要求是相同类型的\n\n### 2、高级用法\n\n#### 柯里化（Currying）\n\n把接受多个参数的方法变换成接受第一个参数的方法，并且返回接受余下的参数并且返回结果的新方法\n\n```swift\nfunc add(_ v1:Int,_ v2:Int) -> Int {\n    return v1 + v2\n}\nprint(add(1, 2))\n\n// 柯里化(Currying)\nfunc add(_ v:Int) -> (Int) -> Int {\n    return {$0 + v}\n}\nprint(add(1)(2))\n```\n\n#### 关键字mutating\n\n使用 struct 或 enum 实现某协议时，协议的方法前加 mutating 关键字，可以在此方法中修改 struct 或 enum的变量。使用 class 实现协议时，方法前面是不需要加 mutating 修饰的，因为 class 可以随意更改自己的成员变量。\n\n```swift\nprotocol Vehicle {\n   var numberOfWheels:Int{get}\n   mutating func changeNumberOfWheels()\n}\n\nstruct MyCar:Vehicle {\n   var numberOfWheels: Int = 4\n   mutating func changeNumberOfWheels() {\n       numberOfWheels = 4\n   }\n}\n```\n\n#### 元组（Tuple）\n\n元组是swift编程语言中唯一的一种复合类型，他可以将指定有限个数的任何类型一次整理为一个对象，元组中的每一种类型都可以是任何的结构体、枚举或类类型。\n\n```swift\n// 交换输入普通实现：\nfunc swapMe<T>(a: inout T, b: inout T) {\n  let temp = a\n  a = b\n  b = temp\n}\n\n// 交换输入元组实现：\nfunc swapMe<T>(a: inout T, b: inout T) {\n\t(a,b) = (b,a)\n}\n```\n\n#### 操作符\n\n- precedencegroup：定义操作符的优先级\n- associativity：操作符的结合律\n- higherThan、lowerThan：运算符的优先级\n- prefix、infix、postfix：前缀、中缀、后缀运算符\n\n```swift\ninfix operator +++  // 中缀\nfunc +++(left: Int, right: Int) -> Int {\n    return left+right*2\n}\nprint(2+++3) // 8\n\nprefix operator ==+  // 前缀\nprefix func ==+(left: Int) -> Int {\n   return left*2\n}\nprint(==+2) // 4\n\npostfix operator +==  // 后缀\npostfix func +==(right: Int) -> Int {\n   return right*3\n}\nprint(2+==) // 6\n```\n\n#### 输入输出参数（inout）\n\n可变形式参数只能在函数的内部做改变。如果你想函数能够修改一个形式参数的值，而且你想这些改变在函数结束之后依然生效，那么就需要将形式参数定义为输入输出形式参数。\n\n```swift\nvar b = 10\nfunc test(a:inout Int) {\n   a = 20\n}\ntest(a: &b)\nprint(b) //20\n```\n\n#### 嵌套函数\n\n我们可以把函数当成参数或者变量来使用，函数内部嵌套函数。\n\n```swift\nfunc forward(_ forward:Bool) -> (Int) -> Int {\n    \n    func next(_ input:Int) -> Int {\n        input + 1\n    }\n\n    func previous(_ input:Int) -> Int {\n        input - 1\n    }\n  \n    return forward ? next : previous\n}\n```\n\n#### 命名空间\n\nSwift 的命名空间是基于 module 而不是在代码中显式地指明，每个 module 代表了 Swift 中的一个命名空间。也就是说，同一个 target 里的类型名称还是不能相同的。在我们进行 app 开发时，默认添加到 app 的主 target 的内容都是处于同一个命名空间中的，我们可以通过创建 Cocoa (Touch) Framework 的 target 的方法来新建一个 module，这样我们就可以在两个不同的 target 中添加同样名字的类型了。\n\n#### 别名（typealias）\n\n我们可以给一个复杂的难以理解的类型起一个别名，方便我们使用和理解。\n\n```swift\n// Swift 定义 Void 为空的元组\npublic typealias Void = ()\n\n// 函数别名\ntypealias IntFn = (Int,Int) -> Int\nfunc difference(v1:Int,v2:Int) -> Int {\n   v1 - v2\n}\nlet fn:IntFn = difference\nprint(fn(2,1))  //1\n\n// 元组别名\ntypealias Date = (year:Int,month:Int,day:Int)\nfunc test(_ date:Date) {\n   print(date.year)\n}\ntest((2019,10,30))\n```\n\n#### 可变参数\n\n一个可变形式参数可以接受零或者多个`特定类型的值`，可变参数必须是同一类型的。当调用函数的时候你可以利用可变形式参数来声明形式参数可以被传入值的数量是可变的。可以通过在形式参数的类型名称后边插入三个点符号（`...`）来书写可变形式参数。\n\n```swift\nfunc sum(_ numbers:Int...) -> Int{\n   var total = 0\n   for item in numbers {\n       total += item\n   }\n   return total\n}\nsum(1,2,3,4)  // 10\n```\n\n#### 初始化\n\n不同于 Objective-C 的初始化器，Swift 初始化器不返回值。这些初始化器主要的角色就是确保在第一次使用之前某类型的新实例能够正确初始化。\n\n```swift\nclass Person {\n   var age: Int\n   var name: String\n   //指定初始化器\n   init(age:Int, name:String) {\n       self.age = age\n       self.name = name\n   }\n   //便捷初始化器\n   convenience init(age:Int){\n       self.init(age:age,name:\"\")\n   }\n}\n```\n\n- 每一个类至少有一个指定初始化器\n- 默认初始化器总是类的指定初始化器\n- 一个类通常只有一个指定初始化器\n- 指定初始化器必须从他的直系父类调用指定初始化器\n- 便捷初始化器必须从相同的类里调用另一个初始化器\n- 便捷初始化器最终必须调用一个指定初始化器\n\n## 控件使用\n\n### 1、UIView\n\n### 2、UITableView\n\n## 实际应用\n\n### 网络封装\n\n1. 使用xcconfig配置不同环境host\n2. 添加通用的请求类和响应类\n3. 根据后台设计添加处理加密、验签等方法\n4. 封装get、post、upload请求方法\n5. 请求方法传入：响应类泛型、请求路径、请求参数\n6. 请求完成回调：成功（返回响应类型对象）、异常、失败\n7. 异常处理（退出登录、重试机制...）\n8. 添加统一的网络请求hud\n\n### 图片加载\n\n1. 显示placeholder占位图\n2. 以url为数据索引先在内存中查找是否有缓存\n3. 如果没有缓存，通过md5处理过的key来在磁盘查找，找到把的数据加载到内存并显示出来\n4. 如果内存和磁盘中都没有找到，就会向远程服务器发送请求，开始下载图片\n5. 下载完的图片加入缓存并写入到磁盘中\n6. 获取图片的过程是在子线程中进行，在主线程中显示\n\n## APP 架构\n\n### 1、组件化\n\n#### 优点\n\n- 业务分层、解耦，使代码变得可维护\n- 拆分、组织庞大的项目，使项目变得可维护\n- 便于各业务功能拆分、抽离，实现功能复用\n- 业务隔离，实现跨团队开发代码控制和版本风险控制\n- 模块化对代码的封装性、合理性都有一定的要求，提升开发人员编码能力\n- 在维护好组件的情况下，满足不同客户需求（在新的主App中使用当前组件）\n\n#### 实现\n\n- 基础组件：按功能分库，不涉及业务需求，通过接口供业务组件调用\n- 基础UI组件：各个业务模块依赖使用，但需要保持好定制扩展的设计\n- 业务组件：业务功能间相对独立，相互间没有Model共享的依赖\n- 中间件：target-action，url-block，protocol-class\n\n### 2、MVVM\n\n## App 优化\n\n### 1、启动优化\n\n- 删除无用代码\n- 抽象重复代码\n- 第三方库延迟初始化\n- 业务逻辑延迟或异步执行\n- App首页面先展示后渲染\n- Time Profiler查找耗时操作和页面\n\n### 2、网络优化\n\n#### 请求优化\n\n- 使用HttpDNS下发ip列表\n- 根据不同网络设置超时时间\n- 网络环境切换或失败，自动重发\n\n#### 传输优化\n\n- 使用http缓存\n- 文件传输启用Gzip\n- 采用WebP图片格式\n- 采用更好的序列化/反序列化方案\n\n### 3、体积优化\n\n- 开启Bitcode\n- 删除无用资源和代码\n- 对图片资源进行压缩\n- 使用更轻量级的第三方库\n- 使用纯代码进行界面布局\n- 启动图和引导图使用原生绘制或jpg\n- 某些资源文件放在服务器上，按需下载\n\n### 4、性能优化\n\n#### 速度优化\n\n- 耗时操作放入子线程\n- 使用图片缓存，数据缓存\n- 图文混排使用CoreText\n- 使图片适合UIImageView的尺寸\n- 减少离屏渲染，子线程绘制，主线程渲染\n- 减少subviews个数，用layer绘制元素\n- 减少clearColor，maskToBounds，阴影\n\n#### tableview优化\n\n- 使用cell复用机制\n- 不要动态添加视图\n- 图片异步加载并缓存\n- 手动计算高度缓存高度\n- 按需刷新，刷新最小列表单元\n\n","slug":"iOS开发中的知识点","published":1,"updated":"2020-04-02T10:48:36.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8mi0004s09k857a457l","content":"<blockquote>\n<p>iOS开发中的重要知识点，方便自己随时回顾查看，不间断更新。</p>\n</blockquote>\n<!-- toc -->\n<ul>\n<li><a href=\"#oc-相关\">OC 相关</a><ul>\n<li><a href=\"#1-多线程\">1、多线程</a><ul>\n<li><a href=\"#进程与线程\">进程与线程</a><ul>\n<li><a href=\"#进程\">进程：</a></li>\n<li><a href=\"#线程\">线程：</a></li>\n<li><a href=\"#进程和线程\">进程和线程：</a></li>\n</ul>\n</li>\n<li><a href=\"#创建线程方式\">创建线程方式</a></li>\n<li><a href=\"#gcd大中央调度\">GCD（大中央调度）</a></li>\n<li><a href=\"#nsopertionqueue\">NSOpertionQueue</a></li>\n</ul>\n</li>\n<li><a href=\"#2-runtime\">2、Runtime</a><ul>\n<li><a href=\"#runtime-机制\">Runtime 机制</a></li>\n<li><a href=\"#runtime-应用\">Runtime 应用</a></li>\n</ul>\n</li>\n<li><a href=\"#3-runloop\">3、Runloop</a><ul>\n<li><a href=\"#什么是-runloop\">什么是 RunLoop？</a></li>\n<li><a href=\"#列表timer停止\">列表Timer停止</a></li>\n</ul>\n</li>\n<li><a href=\"#4-kvc-和-kvo\">4、KVC 和 KVO</a><ul>\n<li><a href=\"#什么是-kvc-和-kvo\">什么是 KVC 和 KVO</a></li>\n<li><a href=\"#kvc的底层实现\">KVC的底层实现</a></li>\n<li><a href=\"#kvo的底层实现\">KVO的底层实现</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#swift-相关\">Swift 相关</a><ul>\n<li><a href=\"#1-与-oc-比较\">1、与 OC 比较</a><ul>\n<li><a href=\"#共同点\">共同点</a></li>\n<li><a href=\"#比较\">比较</a></li>\n<li><a href=\"#优点\">优点</a></li>\n</ul>\n</li>\n<li><a href=\"#2-高级用法\">2、高级用法</a><ul>\n<li><a href=\"#柯里化currying\">柯里化（Currying）</a></li>\n<li><a href=\"#关键字mutating\">关键字mutating</a></li>\n<li><a href=\"#元组tuple\">元组（Tuple）</a></li>\n<li><a href=\"#操作符\">操作符</a></li>\n<li><a href=\"#输入输出参数inout\">输入输出参数（inout）</a></li>\n<li><a href=\"#嵌套函数\">嵌套函数</a></li>\n<li><a href=\"#命名空间\">命名空间</a></li>\n<li><a href=\"#别名typealias\">别名（typealias）</a></li>\n<li><a href=\"#可变参数\">可变参数</a></li>\n<li><a href=\"#初始化\">初始化</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#控件使用\">控件使用</a><ul>\n<li><a href=\"#1-uiview\">1、UIView</a></li>\n<li><a href=\"#2-uitableview\">2、UITableView</a></li>\n</ul>\n</li>\n<li><a href=\"#实际应用\">实际应用</a><ul>\n<li><a href=\"#网络封装\">网络封装</a></li>\n<li><a href=\"#图片加载\">图片加载</a></li>\n</ul>\n</li>\n<li><a href=\"#app-架构\">APP 架构</a><ul>\n<li><a href=\"#1-组件化\">1、组件化</a><ul>\n<li><a href=\"#优点-1\">优点</a></li>\n<li><a href=\"#实现\">实现</a></li>\n</ul>\n</li>\n<li><a href=\"#2-mvvm\">2、MVVM</a></li>\n</ul>\n</li>\n<li><a href=\"#app-优化\">App 优化</a><ul>\n<li><a href=\"#1-启动优化\">1、启动优化</a></li>\n<li><a href=\"#2-网络优化\">2、网络优化</a><ul>\n<li><a href=\"#请求优化\">请求优化</a></li>\n<li><a href=\"#传输优化\">传输优化</a></li>\n</ul>\n</li>\n<li><a href=\"#3-体积优化\">3、体积优化</a></li>\n<li><a href=\"#4-性能优化\">4、性能优化</a><ul>\n<li><a href=\"#速度优化\">速度优化</a></li>\n<li><a href=\"#tableview优化\">tableview优化</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<h2><span id=\"oc-相关\">OC 相关</span></h2><h3><span id=\"1-多线程\">1、多线程</span></h3><h4><span id=\"进程与线程\">进程与线程</span></h4><h5><span id=\"进程\">进程：</span></h5><ul>\n<li><p>进程是一个具有一定独立功能的程序关于某次数据集合的一次运行活动，它是操作系统分配资源的基本单元</p>\n</li>\n<li><p>进程是指在系统中正在运行的一个应用程序，就是一段程序的执行过程,我们可以理解为手机上的一个app</p>\n</li>\n<li><p>每个进程之间是独立的，每个进程均运行在其专用且受保护的内存空间内，拥有独立运行所需的全部资源</p>\n<h5><span id=\"线程\">线程：</span></h5></li>\n<li><p>程序执行流的最小单元，线程是进程中的一个实体</p>\n</li>\n<li><p>一个进程要想执行任务，必须至少有一条线程.应用程序启动的时候，系统会默认开启主线程</p>\n<h5><span id=\"进程和线程\">进程和线程：</span></h5></li>\n<li><p>线程是进程的执行单元，进程的所有任务都在线程中执行</p>\n</li>\n<li><p>线程是 CPU 分配资源和调度的最小单位</p>\n</li>\n<li><p>一个程序可以对应多个进程(多进程),一个进程中可有多个线程,但至少要有一条线程<br>同一个进程内的线程共享进程资源</p>\n</li>\n</ul>\n<h4><span id=\"创建线程方式\">创建线程方式</span></h4><ul>\n<li>NSThread面向对象的，需要手动创建线程，不需要手动销毁，子线程间通信很难</li>\n<li>GCD基于C语言，充分利用设备的多核，自动管理线程生命周期，比NSOperation效率高</li>\n<li>NSOperation基于GCD封装，更加面向对象，比GCD多了一些功能，可以添加线程间的依赖</li>\n</ul>\n<h4><span id=\"gcd大中央调度\">GCD（大中央调度）</span></h4><ul>\n<li>并发队列（让多个任务并发执行，异步任务下才有效）</li>\n<li>串行队列（任务一个接一个地执行，按照FIFO顺序执行）</li>\n<li>同步任务派发(synchronous，阻塞当前线程，等待任务块Block完成后,函数才能返回,后面的代码才能继续执行)</li>\n<li>异步任务派发(asynchronous，任务添加到队列后，函数立即返回，后面的代码不用等待任务完成后即可执行，异步提交任务执行无序)</li>\n</ul>\n<h4><span id=\"nsopertionqueue\">NSOpertionQueue</span></h4><ol>\n<li>初始化NSOpertionQueue</li>\n<li>创建线程队列的NSOpertion</li>\n<li>添加NSOpertion的相关依赖</li>\n<li>添加NSOpertion到NSOpertionQueue</li>\n</ol>\n<h3><span id=\"2-runtime\">2、Runtime</span></h3><h4><span id=\"runtime-机制\">Runtime 机制</span></h4><p>runtime简称运行时。OC是运行时机制，也就是在运行时才做一些处理。<br>例如：C语言在编译的时候就知道要调用哪个方法函数，而OC在编译的时候并不知道要调用哪个方法函数，只有在运行的时候才知道调用的方法函数名称，来找到对应的方法函数进行调用。</p>\n<h4><span id=\"runtime-应用\">Runtime 应用</span></h4><ul>\n<li>交换方法实现<br>场景：当第三方框架或者系统原生方法功能不能满足我们的时候，我们可以在保持系统原有方法功能的基础上，添加额外的功能。</li>\n<li>动态添加方法<br>场景：如果一个类方法非常多，加载类到内存的时候也比较耗费资源，需要给每个方法生成映射表，可以使用动态给某个类，添加方法解决。</li>\n<li>利用关联对象（AssociatedObject）给分类添加属性<br>场景：分类是不能自定义属性和变量的，这时候可以使用runtime动态添加属性方法<br>原理：给一个类声明属性，其实本质就是给这个类添加关联</li>\n<li>遍历类的所有成员变量<br> 1)、NSCoding自动归档解档<br>场景：如果一个模型有许多个属性，实现自定义模型数据持久化时，需要对每个属性都实现一遍encodeObject 和decodeObjectForKey方法，比较麻烦。我们可以使用Runtime来解决。<br>原理：用runtime提供的函数遍历Model自身所有属性，并对属性进行encode和decode操作。<br> 2)、字典转模型<br>原理：利用Runtime，遍历模型中所有属性，根据模型的属性名，去字典中查找key，取出对应的值，给模型的属性赋值<br>3)、修改textfield的占位文字颜色</li>\n<li>利用消息转发机制解决方法找不到的异常问题</li>\n</ul>\n<h3><span id=\"3-runloop\">3、Runloop</span></h3><h4><span id=\"什么是-runloop\">什么是 RunLoop？</span></h4><p>RunLoop是一种高级的循环机制，让程序持续运行，并处理程序中的各种事件，让线程在需要做事的时候忙起来，不需要的话就让线程休眠。</p>\n<ul>\n<li>RunLoop和线程是绑定在一起的，每条线程都有唯一一个与之对应的RunLoop对象。</li>\n<li>不能自己创建RunLoop对象，但是可以获取系统提供的RunLoop对象。</li>\n<li>主线程的RunLoop对象是由系统自动创建自动完成启动，而子线程中的RunLoop对象需要我们手动获取并启动。</li>\n<li>NSRunLoop提供了一个添加NSTimer的方法，可以指定Mode，如果要让任何情况下都回调，需设置Mode为Common模式。</li>\n</ul>\n<h4><span id=\"列表timer停止\">列表Timer停止</span></h4><p>原因在于滑动时当前线程的Runloop切换了mode用于列表滑动，导致timer暂停。滑动列表时，Runloop的mode由原来的Default模式切换到了Event Tracking模式，timer停止工作。</p>\n<p>Runloop中的mode主要用来指定事件在runloop中的优先级，有以下几种：</p>\n<ul>\n<li>Default：默认，一般情况下使用</li>\n<li>Connection：一般系统用来处理NSConnection相关事件，开发者一般用不到</li>\n<li>Modal：处理modal panels事件</li>\n<li>Event Tracking：用于处理拖拽和用户交互的模式</li>\n<li>Common：包括Default，Modal，Event Tracking三大模式，可以处理几乎所有事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 方法一是将timer加入到NSRunloopCommonModes中</span><br><span class=\"line\">[[NSRunLoop currentRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 方法二是将timer放到另一个线程中，然后开启另一个线程的runloop</span><br><span class=\"line\">dispatch_async(dispatch_get_global_queue(0, 0), ^&#123;</span><br><span class=\"line\">\ttimer &#x3D; [NSTimer scheduledTimerWithTimeInterval:1 ...];</span><br><span class=\"line\">\t[[NSRunLoop currentRunLoop] run];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3><span id=\"4-kvc-和-kvo\">4、KVC 和 KVO</span></h3><h4><span id=\"什么是-kvc-和-kvo\">什么是 KVC 和 KVO</span></h4><p>KVC(key-value-coding)键值编码，是一种间接访问实例变量的方法。提供一种机制来间接访问对象的属性。<br>给私有变量赋值。</p>\n<ul>\n<li>给控件的内部属性赋值（如自定义UITextFiled的clearButton、placeholder的颜色，一般可利用runtime获取控件的内部属性名，Ivar *ivar = class_getInstanceVariable获取实例成员变量）<br>[textField setValue:[UIColor redColor] forKeyPath:@”placeholderLabel.textColor”];</li>\n<li>结合Runtime，model和字典的转换（setValuesForKeysWithDictionary，class_copyIvarList获取指定类的Ivar成员列表）</li>\n</ul>\n<p>KVO是一种基于KVC实现的观察者模式。当指被观察的对象的属性更改了，KVO会以自动或手动方式通知观察者。<br>事例：监听 ScrollView 的 contentOffSet属性<br>[scrollview addObserver:self forKeyPath:@”contentOffset” options: NSKeyValueObservingOptionNew context:nil];</p>\n<h4><span id=\"kvc的底层实现\">KVC的底层实现</span></h4><ul>\n<li>检查是否存在相应的key的set方法，如果存在，就调用set方法</li>\n<li>如果set方法不存在，就会查找与key相同名称并且带下划线的成员变量，如果有，则直接给成员变量属性赋值</li>\n<li>如果没有找到_key，就会查找相同名称的属性key，如果有就直接赋值</li>\n<li>如果还没有找到，则调用valueForUndefinedKey:和setValue:forUndefinedKey:方法，这些方法的默认实现都是抛出异常，我们可以根据需要重写它们</li>\n</ul>\n<h4><span id=\"kvo的底层实现\">KVO的底层实现</span></h4><ul>\n<li>当给A类添加KVO的时候，runtime动态的生成了一个子类NSKVONotifying_A，让A类的isa指针指向NSKVONotifying_A类，重写class方法，隐藏对象真实类信息</li>\n<li>重写监听属性的setter方法，在setter方法内部调用了Foundation 的 _NSSetObjectValueAndNotify 函数<br>_NSSetObjectValueAndNotify函数内部<br> 1) 首先会调用 willChangeValueForKey<br> 2) 然后给属性赋值<br> 3) 最后调用 didChangeValueForKey<br> 4) 最后调用 observer 的 observeValueForKeyPath 去告诉监听器属性值发生了改变 </li>\n<li>重写了dealloc做一些 KVO 内存释放</li>\n</ul>\n<h2><span id=\"swift-相关\">Swift 相关</span></h2><h3><span id=\"1-与-oc-比较\">1、与 OC 比较</span></h3><h4><span id=\"共同点\">共同点</span></h4><ul>\n<li>OC出现过的绝大多数概念，在Swift中继续有效（可能换个术语）</li>\n<li>Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然</li>\n</ul>\n<h4><span id=\"比较\">比较</span></h4><ul>\n<li>Swift注重安全，OC注重灵活</li>\n<li>Swift注重值类型，OC注重指针和引用</li>\n<li>Swift是静态类型语言，OC是动态类型语言</li>\n<li>Swift注重面向协议编程、函数式编程、面向对象编程，OC注重面向对象编程</li>\n</ul>\n<h4><span id=\"优点\">优点</span></h4><ul>\n<li>Swift容易阅读，文件结构和语法简化</li>\n<li>Swift中有各种方便快捷的高阶函数（函数式编程）</li>\n<li>Swift中的可选类型，用于所有数据类型，而不仅仅局限于类</li>\n<li>Swift中的泛型更加方便和通用，OC中只能为集合类型添加泛型</li>\n<li>Swift细化权限，open &gt; public &gt; internal(默认) &gt; fileprivate &gt; private</li>\n<li>Swift中独有的元组类型(tuples)，把多个值组合成复合值。元组内的值并不要求是相同类型的</li>\n</ul>\n<h3><span id=\"2-高级用法\">2、高级用法</span></h3><h4><span id=\"柯里化currying\">柯里化（Currying）</span></h4><p>把接受多个参数的方法变换成接受第一个参数的方法，并且返回接受余下的参数并且返回结果的新方法</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"number\">_</span> v1:Int,<span class=\"number\">_</span> v2:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v1 + v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 柯里化(Currying)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"number\">_</span> v:Int)</span></span> -&gt; (<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;$<span class=\"number\">0</span> + v&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(<span class=\"number\">1</span>)(<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<h4><span id=\"关键字mutating\">关键字mutating</span></h4><p>使用 struct 或 enum 实现某协议时，协议的方法前加 mutating 关键字，可以在此方法中修改 struct 或 enum的变量。使用 class 实现协议时，方法前面是不需要加 mutating 修饰的，因为 class 可以随意更改自己的成员变量。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Vehicle</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> numberOfWheels:<span class=\"type\">Int</span>&#123;<span class=\"keyword\">get</span>&#125;</span><br><span class=\"line\">   <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeNumberOfWheels</span><span class=\"params\">()</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">MyCar</span>:<span class=\"title\">Vehicle</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> numberOfWheels: <span class=\"type\">Int</span> = <span class=\"number\">4</span></span><br><span class=\"line\">   <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeNumberOfWheels</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">       numberOfWheels = <span class=\"number\">4</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"元组tuple\">元组（Tuple）</span></h4><p>元组是swift编程语言中唯一的一种复合类型，他可以将指定有限个数的任何类型一次整理为一个对象，元组中的每一种类型都可以是任何的结构体、枚举或类类型。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 交换输入普通实现：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapMe</span>&lt;T&gt;<span class=\"params\">(a: <span class=\"keyword\">inout</span> T, b: <span class=\"keyword\">inout</span> T)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> temp = a</span><br><span class=\"line\">  a = b</span><br><span class=\"line\">  b = temp</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换输入元组实现：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapMe</span>&lt;T&gt;<span class=\"params\">(a: <span class=\"keyword\">inout</span> T, b: <span class=\"keyword\">inout</span> T)</span></span> &#123;</span><br><span class=\"line\">\t(a,b) = (b,a)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"操作符\">操作符</span></h4><ul>\n<li>precedencegroup：定义操作符的优先级</li>\n<li>associativity：操作符的结合律</li>\n<li>higherThan、lowerThan：运算符的优先级</li>\n<li>prefix、infix、postfix：前缀、中缀、后缀运算符</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">infix</span> <span class=\"keyword\">operator</span> +++  <span class=\"comment\">// 中缀</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> +++<span class=\"params\">(<span class=\"keyword\">left</span>: Int, <span class=\"keyword\">right</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>+<span class=\"keyword\">right</span>*<span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">2</span>+++<span class=\"number\">3</span>) <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"keyword\">operator</span> ==+  <span class=\"comment\">// 前缀</span></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"function\"><span class=\"keyword\">func</span> ==+<span class=\"params\">(<span class=\"keyword\">left</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>*<span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(==+<span class=\"number\">2</span>) <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"keyword\">operator</span> +==  <span class=\"comment\">// 后缀</span></span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"function\"><span class=\"keyword\">func</span> +==<span class=\"params\">(<span class=\"keyword\">right</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">right</span>*<span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">2</span>+==) <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"输入输出参数inout\">输入输出参数（inout）</span></h4><p>可变形式参数只能在函数的内部做改变。如果你想函数能够修改一个形式参数的值，而且你想这些改变在函数结束之后依然生效，那么就需要将形式参数定义为输入输出形式参数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">test</span><span class=\"params\">(a:<span class=\"keyword\">inout</span> Int)</span></span> &#123;</span><br><span class=\"line\">   a = <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test(a: &amp;b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(b) <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"嵌套函数\">嵌套函数</span></h4><p>我们可以把函数当成参数或者变量来使用，函数内部嵌套函数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">forward</span><span class=\"params\">(<span class=\"number\">_</span> forward:Bool)</span></span> -&gt; (<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">next</span><span class=\"params\">(<span class=\"number\">_</span> input:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        input + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">previous</span><span class=\"params\">(<span class=\"number\">_</span> input:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        input - <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> forward ? next : previous</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"命名空间\">命名空间</span></h4><p>Swift 的命名空间是基于 module 而不是在代码中显式地指明，每个 module 代表了 Swift 中的一个命名空间。也就是说，同一个 target 里的类型名称还是不能相同的。在我们进行 app 开发时，默认添加到 app 的主 target 的内容都是处于同一个命名空间中的，我们可以通过创建 Cocoa (Touch) Framework 的 target 的方法来新建一个 module，这样我们就可以在两个不同的 target 中添加同样名字的类型了。</p>\n<h4><span id=\"别名typealias\">别名（typealias）</span></h4><p>我们可以给一个复杂的难以理解的类型起一个别名，方便我们使用和理解。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Swift 定义 Void 为空的元组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">typealias</span> <span class=\"type\">Void</span> = ()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数别名</span></span><br><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">IntFn</span> = (<span class=\"type\">Int</span>,<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">difference</span><span class=\"params\">(v1:Int,v2:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   v1 - v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> fn:<span class=\"type\">IntFn</span> = difference</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fn(<span class=\"number\">2</span>,<span class=\"number\">1</span>))  <span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 元组别名</span></span><br><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">Date</span> = (year:<span class=\"type\">Int</span>,month:<span class=\"type\">Int</span>,day:<span class=\"type\">Int</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">test</span><span class=\"params\">(<span class=\"number\">_</span> date:Date)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(date.year)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test((<span class=\"number\">2019</span>,<span class=\"number\">10</span>,<span class=\"number\">30</span>))</span><br></pre></td></tr></table></figure>\n<h4><span id=\"可变参数\">可变参数</span></h4><p>一个可变形式参数可以接受零或者多个<code>特定类型的值</code>，可变参数必须是同一类型的。当调用函数的时候你可以利用可变形式参数来声明形式参数可以被传入值的数量是可变的。可以通过在形式参数的类型名称后边插入三个点符号（<code>...</code>）来书写可变形式参数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"number\">_</span> numbers:Int...)</span></span> -&gt; <span class=\"type\">Int</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> total = <span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">       total += item</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> total</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sum(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)  <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"初始化\">初始化</span></h4><p>不同于 Objective-C 的初始化器，Swift 初始化器不返回值。这些初始化器主要的角色就是确保在第一次使用之前某类型的新实例能够正确初始化。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> age: <span class=\"type\">Int</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">   <span class=\"comment\">//指定初始化器</span></span><br><span class=\"line\">   <span class=\"keyword\">init</span>(age:<span class=\"type\">Int</span>, name:<span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.age = age</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//便捷初始化器</span></span><br><span class=\"line\">   <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(age:<span class=\"type\">Int</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(age:age,name:<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>每一个类至少有一个指定初始化器</li>\n<li>默认初始化器总是类的指定初始化器</li>\n<li>一个类通常只有一个指定初始化器</li>\n<li>指定初始化器必须从他的直系父类调用指定初始化器</li>\n<li>便捷初始化器必须从相同的类里调用另一个初始化器</li>\n<li>便捷初始化器最终必须调用一个指定初始化器</li>\n</ul>\n<h2><span id=\"控件使用\">控件使用</span></h2><h3><span id=\"1-uiview\">1、UIView</span></h3><h3><span id=\"2-uitableview\">2、UITableView</span></h3><h2><span id=\"实际应用\">实际应用</span></h2><h3><span id=\"网络封装\">网络封装</span></h3><ol>\n<li>使用xcconfig配置不同环境host</li>\n<li>添加通用的请求类和响应类</li>\n<li>根据后台设计添加处理加密、验签等方法</li>\n<li>封装get、post、upload请求方法</li>\n<li>请求方法传入：响应类泛型、请求路径、请求参数</li>\n<li>请求完成回调：成功（返回响应类型对象）、异常、失败</li>\n<li>异常处理（退出登录、重试机制…）</li>\n<li>添加统一的网络请求hud</li>\n</ol>\n<h3><span id=\"图片加载\">图片加载</span></h3><ol>\n<li>显示placeholder占位图</li>\n<li>以url为数据索引先在内存中查找是否有缓存</li>\n<li>如果没有缓存，通过md5处理过的key来在磁盘查找，找到把的数据加载到内存并显示出来</li>\n<li>如果内存和磁盘中都没有找到，就会向远程服务器发送请求，开始下载图片</li>\n<li>下载完的图片加入缓存并写入到磁盘中</li>\n<li>获取图片的过程是在子线程中进行，在主线程中显示</li>\n</ol>\n<h2><span id=\"app-架构\">APP 架构</span></h2><h3><span id=\"1-组件化\">1、组件化</span></h3><h4><span id=\"优点\">优点</span></h4><ul>\n<li>业务分层、解耦，使代码变得可维护</li>\n<li>拆分、组织庞大的项目，使项目变得可维护</li>\n<li>便于各业务功能拆分、抽离，实现功能复用</li>\n<li>业务隔离，实现跨团队开发代码控制和版本风险控制</li>\n<li>模块化对代码的封装性、合理性都有一定的要求，提升开发人员编码能力</li>\n<li>在维护好组件的情况下，满足不同客户需求（在新的主App中使用当前组件）</li>\n</ul>\n<h4><span id=\"实现\">实现</span></h4><ul>\n<li>基础组件：按功能分库，不涉及业务需求，通过接口供业务组件调用</li>\n<li>基础UI组件：各个业务模块依赖使用，但需要保持好定制扩展的设计</li>\n<li>业务组件：业务功能间相对独立，相互间没有Model共享的依赖</li>\n<li>中间件：target-action，url-block，protocol-class</li>\n</ul>\n<h3><span id=\"2-mvvm\">2、MVVM</span></h3><h2><span id=\"app-优化\">App 优化</span></h2><h3><span id=\"1-启动优化\">1、启动优化</span></h3><ul>\n<li>删除无用代码</li>\n<li>抽象重复代码</li>\n<li>第三方库延迟初始化</li>\n<li>业务逻辑延迟或异步执行</li>\n<li>App首页面先展示后渲染</li>\n<li>Time Profiler查找耗时操作和页面</li>\n</ul>\n<h3><span id=\"2-网络优化\">2、网络优化</span></h3><h4><span id=\"请求优化\">请求优化</span></h4><ul>\n<li>使用HttpDNS下发ip列表</li>\n<li>根据不同网络设置超时时间</li>\n<li>网络环境切换或失败，自动重发</li>\n</ul>\n<h4><span id=\"传输优化\">传输优化</span></h4><ul>\n<li>使用http缓存</li>\n<li>文件传输启用Gzip</li>\n<li>采用WebP图片格式</li>\n<li>采用更好的序列化/反序列化方案</li>\n</ul>\n<h3><span id=\"3-体积优化\">3、体积优化</span></h3><ul>\n<li>开启Bitcode</li>\n<li>删除无用资源和代码</li>\n<li>对图片资源进行压缩</li>\n<li>使用更轻量级的第三方库</li>\n<li>使用纯代码进行界面布局</li>\n<li>启动图和引导图使用原生绘制或jpg</li>\n<li>某些资源文件放在服务器上，按需下载</li>\n</ul>\n<h3><span id=\"4-性能优化\">4、性能优化</span></h3><h4><span id=\"速度优化\">速度优化</span></h4><ul>\n<li>耗时操作放入子线程</li>\n<li>使用图片缓存，数据缓存</li>\n<li>图文混排使用CoreText</li>\n<li>使图片适合UIImageView的尺寸</li>\n<li>减少离屏渲染，子线程绘制，主线程渲染</li>\n<li>减少subviews个数，用layer绘制元素</li>\n<li>减少clearColor，maskToBounds，阴影</li>\n</ul>\n<h4><span id=\"tableview优化\">tableview优化</span></h4><ul>\n<li>使用cell复用机制</li>\n<li>不要动态添加视图</li>\n<li>图片异步加载并缓存</li>\n<li>手动计算高度缓存高度</li>\n<li>按需刷新，刷新最小列表单元</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>iOS开发中的重要知识点，方便自己随时回顾查看，不间断更新。</p>\n</blockquote>\n<!-- toc -->\n<ul>\n<li><a href=\"#oc-相关\">OC 相关</a><ul>\n<li><a href=\"#1-多线程\">1、多线程</a><ul>\n<li><a href=\"#进程与线程\">进程与线程</a><ul>\n<li><a href=\"#进程\">进程：</a></li>\n<li><a href=\"#线程\">线程：</a></li>\n<li><a href=\"#进程和线程\">进程和线程：</a></li>\n</ul>\n</li>\n<li><a href=\"#创建线程方式\">创建线程方式</a></li>\n<li><a href=\"#gcd大中央调度\">GCD（大中央调度）</a></li>\n<li><a href=\"#nsopertionqueue\">NSOpertionQueue</a></li>\n</ul>\n</li>\n<li><a href=\"#2-runtime\">2、Runtime</a><ul>\n<li><a href=\"#runtime-机制\">Runtime 机制</a></li>\n<li><a href=\"#runtime-应用\">Runtime 应用</a></li>\n</ul>\n</li>\n<li><a href=\"#3-runloop\">3、Runloop</a><ul>\n<li><a href=\"#什么是-runloop\">什么是 RunLoop？</a></li>\n<li><a href=\"#列表timer停止\">列表Timer停止</a></li>\n</ul>\n</li>\n<li><a href=\"#4-kvc-和-kvo\">4、KVC 和 KVO</a><ul>\n<li><a href=\"#什么是-kvc-和-kvo\">什么是 KVC 和 KVO</a></li>\n<li><a href=\"#kvc的底层实现\">KVC的底层实现</a></li>\n<li><a href=\"#kvo的底层实现\">KVO的底层实现</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#swift-相关\">Swift 相关</a><ul>\n<li><a href=\"#1-与-oc-比较\">1、与 OC 比较</a><ul>\n<li><a href=\"#共同点\">共同点</a></li>\n<li><a href=\"#比较\">比较</a></li>\n<li><a href=\"#优点\">优点</a></li>\n</ul>\n</li>\n<li><a href=\"#2-高级用法\">2、高级用法</a><ul>\n<li><a href=\"#柯里化currying\">柯里化（Currying）</a></li>\n<li><a href=\"#关键字mutating\">关键字mutating</a></li>\n<li><a href=\"#元组tuple\">元组（Tuple）</a></li>\n<li><a href=\"#操作符\">操作符</a></li>\n<li><a href=\"#输入输出参数inout\">输入输出参数（inout）</a></li>\n<li><a href=\"#嵌套函数\">嵌套函数</a></li>\n<li><a href=\"#命名空间\">命名空间</a></li>\n<li><a href=\"#别名typealias\">别名（typealias）</a></li>\n<li><a href=\"#可变参数\">可变参数</a></li>\n<li><a href=\"#初始化\">初始化</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#控件使用\">控件使用</a><ul>\n<li><a href=\"#1-uiview\">1、UIView</a></li>\n<li><a href=\"#2-uitableview\">2、UITableView</a></li>\n</ul>\n</li>\n<li><a href=\"#实际应用\">实际应用</a><ul>\n<li><a href=\"#网络封装\">网络封装</a></li>\n<li><a href=\"#图片加载\">图片加载</a></li>\n</ul>\n</li>\n<li><a href=\"#app-架构\">APP 架构</a><ul>\n<li><a href=\"#1-组件化\">1、组件化</a><ul>\n<li><a href=\"#优点-1\">优点</a></li>\n<li><a href=\"#实现\">实现</a></li>\n</ul>\n</li>\n<li><a href=\"#2-mvvm\">2、MVVM</a></li>\n</ul>\n</li>\n<li><a href=\"#app-优化\">App 优化</a><ul>\n<li><a href=\"#1-启动优化\">1、启动优化</a></li>\n<li><a href=\"#2-网络优化\">2、网络优化</a><ul>\n<li><a href=\"#请求优化\">请求优化</a></li>\n<li><a href=\"#传输优化\">传输优化</a></li>\n</ul>\n</li>\n<li><a href=\"#3-体积优化\">3、体积优化</a></li>\n<li><a href=\"#4-性能优化\">4、性能优化</a><ul>\n<li><a href=\"#速度优化\">速度优化</a></li>\n<li><a href=\"#tableview优化\">tableview优化</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<h2 id=\"OC-相关\"><a href=\"#OC-相关\" class=\"headerlink\" title=\"OC 相关\"></a>OC 相关</h2><h3 id=\"1、多线程\"><a href=\"#1、多线程\" class=\"headerlink\" title=\"1、多线程\"></a>1、多线程</h3><h4 id=\"进程与线程\"><a href=\"#进程与线程\" class=\"headerlink\" title=\"进程与线程\"></a>进程与线程</h4><h5 id=\"进程：\"><a href=\"#进程：\" class=\"headerlink\" title=\"进程：\"></a>进程：</h5><ul>\n<li><p>进程是一个具有一定独立功能的程序关于某次数据集合的一次运行活动，它是操作系统分配资源的基本单元</p>\n</li>\n<li><p>进程是指在系统中正在运行的一个应用程序，就是一段程序的执行过程,我们可以理解为手机上的一个app</p>\n</li>\n<li><p>每个进程之间是独立的，每个进程均运行在其专用且受保护的内存空间内，拥有独立运行所需的全部资源</p>\n<h5 id=\"线程：\"><a href=\"#线程：\" class=\"headerlink\" title=\"线程：\"></a>线程：</h5></li>\n<li><p>程序执行流的最小单元，线程是进程中的一个实体</p>\n</li>\n<li><p>一个进程要想执行任务，必须至少有一条线程.应用程序启动的时候，系统会默认开启主线程</p>\n<h5 id=\"进程和线程：\"><a href=\"#进程和线程：\" class=\"headerlink\" title=\"进程和线程：\"></a>进程和线程：</h5></li>\n<li><p>线程是进程的执行单元，进程的所有任务都在线程中执行</p>\n</li>\n<li><p>线程是 CPU 分配资源和调度的最小单位</p>\n</li>\n<li><p>一个程序可以对应多个进程(多进程),一个进程中可有多个线程,但至少要有一条线程<br>同一个进程内的线程共享进程资源</p>\n</li>\n</ul>\n<h4 id=\"创建线程方式\"><a href=\"#创建线程方式\" class=\"headerlink\" title=\"创建线程方式\"></a>创建线程方式</h4><ul>\n<li>NSThread面向对象的，需要手动创建线程，不需要手动销毁，子线程间通信很难</li>\n<li>GCD基于C语言，充分利用设备的多核，自动管理线程生命周期，比NSOperation效率高</li>\n<li>NSOperation基于GCD封装，更加面向对象，比GCD多了一些功能，可以添加线程间的依赖</li>\n</ul>\n<h4 id=\"GCD（大中央调度）\"><a href=\"#GCD（大中央调度）\" class=\"headerlink\" title=\"GCD（大中央调度）\"></a>GCD（大中央调度）</h4><ul>\n<li>并发队列（让多个任务并发执行，异步任务下才有效）</li>\n<li>串行队列（任务一个接一个地执行，按照FIFO顺序执行）</li>\n<li>同步任务派发(synchronous，阻塞当前线程，等待任务块Block完成后,函数才能返回,后面的代码才能继续执行)</li>\n<li>异步任务派发(asynchronous，任务添加到队列后，函数立即返回，后面的代码不用等待任务完成后即可执行，异步提交任务执行无序)</li>\n</ul>\n<h4 id=\"NSOpertionQueue\"><a href=\"#NSOpertionQueue\" class=\"headerlink\" title=\"NSOpertionQueue\"></a>NSOpertionQueue</h4><ol>\n<li>初始化NSOpertionQueue</li>\n<li>创建线程队列的NSOpertion</li>\n<li>添加NSOpertion的相关依赖</li>\n<li>添加NSOpertion到NSOpertionQueue</li>\n</ol>\n<h3 id=\"2、Runtime\"><a href=\"#2、Runtime\" class=\"headerlink\" title=\"2、Runtime\"></a>2、Runtime</h3><h4 id=\"Runtime-机制\"><a href=\"#Runtime-机制\" class=\"headerlink\" title=\"Runtime 机制\"></a>Runtime 机制</h4><p>runtime简称运行时。OC是运行时机制，也就是在运行时才做一些处理。<br>例如：C语言在编译的时候就知道要调用哪个方法函数，而OC在编译的时候并不知道要调用哪个方法函数，只有在运行的时候才知道调用的方法函数名称，来找到对应的方法函数进行调用。</p>\n<h4 id=\"Runtime-应用\"><a href=\"#Runtime-应用\" class=\"headerlink\" title=\"Runtime 应用\"></a>Runtime 应用</h4><ul>\n<li>交换方法实现<br>场景：当第三方框架或者系统原生方法功能不能满足我们的时候，我们可以在保持系统原有方法功能的基础上，添加额外的功能。</li>\n<li>动态添加方法<br>场景：如果一个类方法非常多，加载类到内存的时候也比较耗费资源，需要给每个方法生成映射表，可以使用动态给某个类，添加方法解决。</li>\n<li>利用关联对象（AssociatedObject）给分类添加属性<br>场景：分类是不能自定义属性和变量的，这时候可以使用runtime动态添加属性方法<br>原理：给一个类声明属性，其实本质就是给这个类添加关联</li>\n<li>遍历类的所有成员变量<br> 1)、NSCoding自动归档解档<br>场景：如果一个模型有许多个属性，实现自定义模型数据持久化时，需要对每个属性都实现一遍encodeObject 和decodeObjectForKey方法，比较麻烦。我们可以使用Runtime来解决。<br>原理：用runtime提供的函数遍历Model自身所有属性，并对属性进行encode和decode操作。<br> 2)、字典转模型<br>原理：利用Runtime，遍历模型中所有属性，根据模型的属性名，去字典中查找key，取出对应的值，给模型的属性赋值<br>3)、修改textfield的占位文字颜色</li>\n<li>利用消息转发机制解决方法找不到的异常问题</li>\n</ul>\n<h3 id=\"3、Runloop\"><a href=\"#3、Runloop\" class=\"headerlink\" title=\"3、Runloop\"></a>3、Runloop</h3><h4 id=\"什么是-RunLoop？\"><a href=\"#什么是-RunLoop？\" class=\"headerlink\" title=\"什么是 RunLoop？\"></a>什么是 RunLoop？</h4><p>RunLoop是一种高级的循环机制，让程序持续运行，并处理程序中的各种事件，让线程在需要做事的时候忙起来，不需要的话就让线程休眠。</p>\n<ul>\n<li>RunLoop和线程是绑定在一起的，每条线程都有唯一一个与之对应的RunLoop对象。</li>\n<li>不能自己创建RunLoop对象，但是可以获取系统提供的RunLoop对象。</li>\n<li>主线程的RunLoop对象是由系统自动创建自动完成启动，而子线程中的RunLoop对象需要我们手动获取并启动。</li>\n<li>NSRunLoop提供了一个添加NSTimer的方法，可以指定Mode，如果要让任何情况下都回调，需设置Mode为Common模式。</li>\n</ul>\n<h4 id=\"列表Timer停止\"><a href=\"#列表Timer停止\" class=\"headerlink\" title=\"列表Timer停止\"></a>列表Timer停止</h4><p>原因在于滑动时当前线程的Runloop切换了mode用于列表滑动，导致timer暂停。滑动列表时，Runloop的mode由原来的Default模式切换到了Event Tracking模式，timer停止工作。</p>\n<p>Runloop中的mode主要用来指定事件在runloop中的优先级，有以下几种：</p>\n<ul>\n<li>Default：默认，一般情况下使用</li>\n<li>Connection：一般系统用来处理NSConnection相关事件，开发者一般用不到</li>\n<li>Modal：处理modal panels事件</li>\n<li>Event Tracking：用于处理拖拽和用户交互的模式</li>\n<li>Common：包括Default，Modal，Event Tracking三大模式，可以处理几乎所有事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 方法一是将timer加入到NSRunloopCommonModes中</span><br><span class=\"line\">[[NSRunLoop currentRunLoop] addTimer:timer forMode:NSRunLoopCommonModes];</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 方法二是将timer放到另一个线程中，然后开启另一个线程的runloop</span><br><span class=\"line\">dispatch_async(dispatch_get_global_queue(0, 0), ^&#123;</span><br><span class=\"line\">\ttimer &#x3D; [NSTimer scheduledTimerWithTimeInterval:1 ...];</span><br><span class=\"line\">\t[[NSRunLoop currentRunLoop] run];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、KVC-和-KVO\"><a href=\"#4、KVC-和-KVO\" class=\"headerlink\" title=\"4、KVC 和 KVO\"></a>4、KVC 和 KVO</h3><h4 id=\"什么是-KVC-和-KVO\"><a href=\"#什么是-KVC-和-KVO\" class=\"headerlink\" title=\"什么是 KVC 和 KVO\"></a>什么是 KVC 和 KVO</h4><p>KVC(key-value-coding)键值编码，是一种间接访问实例变量的方法。提供一种机制来间接访问对象的属性。<br>给私有变量赋值。</p>\n<ul>\n<li>给控件的内部属性赋值（如自定义UITextFiled的clearButton、placeholder的颜色，一般可利用runtime获取控件的内部属性名，Ivar *ivar = class_getInstanceVariable获取实例成员变量）<br>[textField setValue:[UIColor redColor] forKeyPath:@”placeholderLabel.textColor”];</li>\n<li>结合Runtime，model和字典的转换（setValuesForKeysWithDictionary，class_copyIvarList获取指定类的Ivar成员列表）</li>\n</ul>\n<p>KVO是一种基于KVC实现的观察者模式。当指被观察的对象的属性更改了，KVO会以自动或手动方式通知观察者。<br>事例：监听 ScrollView 的 contentOffSet属性<br>[scrollview addObserver:self forKeyPath:@”contentOffset” options: NSKeyValueObservingOptionNew context:nil];</p>\n<h4 id=\"KVC的底层实现\"><a href=\"#KVC的底层实现\" class=\"headerlink\" title=\"KVC的底层实现\"></a>KVC的底层实现</h4><ul>\n<li>检查是否存在相应的key的set方法，如果存在，就调用set方法</li>\n<li>如果set方法不存在，就会查找与key相同名称并且带下划线的成员变量，如果有，则直接给成员变量属性赋值</li>\n<li>如果没有找到_key，就会查找相同名称的属性key，如果有就直接赋值</li>\n<li>如果还没有找到，则调用valueForUndefinedKey:和setValue:forUndefinedKey:方法，这些方法的默认实现都是抛出异常，我们可以根据需要重写它们</li>\n</ul>\n<h4 id=\"KVO的底层实现\"><a href=\"#KVO的底层实现\" class=\"headerlink\" title=\"KVO的底层实现\"></a>KVO的底层实现</h4><ul>\n<li>当给A类添加KVO的时候，runtime动态的生成了一个子类NSKVONotifying_A，让A类的isa指针指向NSKVONotifying_A类，重写class方法，隐藏对象真实类信息</li>\n<li>重写监听属性的setter方法，在setter方法内部调用了Foundation 的 _NSSetObjectValueAndNotify 函数<br>_NSSetObjectValueAndNotify函数内部<br> 1) 首先会调用 willChangeValueForKey<br> 2) 然后给属性赋值<br> 3) 最后调用 didChangeValueForKey<br> 4) 最后调用 observer 的 observeValueForKeyPath 去告诉监听器属性值发生了改变 </li>\n<li>重写了dealloc做一些 KVO 内存释放</li>\n</ul>\n<h2 id=\"Swift-相关\"><a href=\"#Swift-相关\" class=\"headerlink\" title=\"Swift 相关\"></a>Swift 相关</h2><h3 id=\"1、与-OC-比较\"><a href=\"#1、与-OC-比较\" class=\"headerlink\" title=\"1、与 OC 比较\"></a>1、与 OC 比较</h3><h4 id=\"共同点\"><a href=\"#共同点\" class=\"headerlink\" title=\"共同点\"></a>共同点</h4><ul>\n<li>OC出现过的绝大多数概念，在Swift中继续有效（可能换个术语）</li>\n<li>Swift和OC共用一套运行时环境，Swift的类型可以桥接到OC，反之亦然</li>\n</ul>\n<h4 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h4><ul>\n<li>Swift注重安全，OC注重灵活</li>\n<li>Swift注重值类型，OC注重指针和引用</li>\n<li>Swift是静态类型语言，OC是动态类型语言</li>\n<li>Swift注重面向协议编程、函数式编程、面向对象编程，OC注重面向对象编程</li>\n</ul>\n<h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><ul>\n<li>Swift容易阅读，文件结构和语法简化</li>\n<li>Swift中有各种方便快捷的高阶函数（函数式编程）</li>\n<li>Swift中的可选类型，用于所有数据类型，而不仅仅局限于类</li>\n<li>Swift中的泛型更加方便和通用，OC中只能为集合类型添加泛型</li>\n<li>Swift细化权限，open &gt; public &gt; internal(默认) &gt; fileprivate &gt; private</li>\n<li>Swift中独有的元组类型(tuples)，把多个值组合成复合值。元组内的值并不要求是相同类型的</li>\n</ul>\n<h3 id=\"2、高级用法\"><a href=\"#2、高级用法\" class=\"headerlink\" title=\"2、高级用法\"></a>2、高级用法</h3><h4 id=\"柯里化（Currying）\"><a href=\"#柯里化（Currying）\" class=\"headerlink\" title=\"柯里化（Currying）\"></a>柯里化（Currying）</h4><p>把接受多个参数的方法变换成接受第一个参数的方法，并且返回接受余下的参数并且返回结果的新方法</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"number\">_</span> v1:Int,<span class=\"number\">_</span> v2:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v1 + v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 柯里化(Currying)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"number\">_</span> v:Int)</span></span> -&gt; (<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;$<span class=\"number\">0</span> + v&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(add(<span class=\"number\">1</span>)(<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<h4 id=\"关键字mutating\"><a href=\"#关键字mutating\" class=\"headerlink\" title=\"关键字mutating\"></a>关键字mutating</h4><p>使用 struct 或 enum 实现某协议时，协议的方法前加 mutating 关键字，可以在此方法中修改 struct 或 enum的变量。使用 class 实现协议时，方法前面是不需要加 mutating 修饰的，因为 class 可以随意更改自己的成员变量。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">protocol</span> <span class=\"title\">Vehicle</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> numberOfWheels:<span class=\"type\">Int</span>&#123;<span class=\"keyword\">get</span>&#125;</span><br><span class=\"line\">   <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeNumberOfWheels</span><span class=\"params\">()</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">MyCar</span>:<span class=\"title\">Vehicle</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> numberOfWheels: <span class=\"type\">Int</span> = <span class=\"number\">4</span></span><br><span class=\"line\">   <span class=\"keyword\">mutating</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">changeNumberOfWheels</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">       numberOfWheels = <span class=\"number\">4</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"元组（Tuple）\"><a href=\"#元组（Tuple）\" class=\"headerlink\" title=\"元组（Tuple）\"></a>元组（Tuple）</h4><p>元组是swift编程语言中唯一的一种复合类型，他可以将指定有限个数的任何类型一次整理为一个对象，元组中的每一种类型都可以是任何的结构体、枚举或类类型。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 交换输入普通实现：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapMe</span>&lt;T&gt;<span class=\"params\">(a: <span class=\"keyword\">inout</span> T, b: <span class=\"keyword\">inout</span> T)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> temp = a</span><br><span class=\"line\">  a = b</span><br><span class=\"line\">  b = temp</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换输入元组实现：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swapMe</span>&lt;T&gt;<span class=\"params\">(a: <span class=\"keyword\">inout</span> T, b: <span class=\"keyword\">inout</span> T)</span></span> &#123;</span><br><span class=\"line\">\t(a,b) = (b,a)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"操作符\"><a href=\"#操作符\" class=\"headerlink\" title=\"操作符\"></a>操作符</h4><ul>\n<li>precedencegroup：定义操作符的优先级</li>\n<li>associativity：操作符的结合律</li>\n<li>higherThan、lowerThan：运算符的优先级</li>\n<li>prefix、infix、postfix：前缀、中缀、后缀运算符</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">infix</span> <span class=\"keyword\">operator</span> +++  <span class=\"comment\">// 中缀</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> +++<span class=\"params\">(<span class=\"keyword\">left</span>: Int, <span class=\"keyword\">right</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>+<span class=\"keyword\">right</span>*<span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">2</span>+++<span class=\"number\">3</span>) <span class=\"comment\">// 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"keyword\">operator</span> ==+  <span class=\"comment\">// 前缀</span></span><br><span class=\"line\"><span class=\"keyword\">prefix</span> <span class=\"function\"><span class=\"keyword\">func</span> ==+<span class=\"params\">(<span class=\"keyword\">left</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">left</span>*<span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(==+<span class=\"number\">2</span>) <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"keyword\">operator</span> +==  <span class=\"comment\">// 后缀</span></span><br><span class=\"line\"><span class=\"keyword\">postfix</span> <span class=\"function\"><span class=\"keyword\">func</span> +==<span class=\"params\">(<span class=\"keyword\">right</span>: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">right</span>*<span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">2</span>+==) <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"输入输出参数（inout）\"><a href=\"#输入输出参数（inout）\" class=\"headerlink\" title=\"输入输出参数（inout）\"></a>输入输出参数（inout）</h4><p>可变形式参数只能在函数的内部做改变。如果你想函数能够修改一个形式参数的值，而且你想这些改变在函数结束之后依然生效，那么就需要将形式参数定义为输入输出形式参数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">test</span><span class=\"params\">(a:<span class=\"keyword\">inout</span> Int)</span></span> &#123;</span><br><span class=\"line\">   a = <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test(a: &amp;b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(b) <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"嵌套函数\"><a href=\"#嵌套函数\" class=\"headerlink\" title=\"嵌套函数\"></a>嵌套函数</h4><p>我们可以把函数当成参数或者变量来使用，函数内部嵌套函数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">forward</span><span class=\"params\">(<span class=\"number\">_</span> forward:Bool)</span></span> -&gt; (<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">next</span><span class=\"params\">(<span class=\"number\">_</span> input:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        input + <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">previous</span><span class=\"params\">(<span class=\"number\">_</span> input:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        input - <span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> forward ? next : previous</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h4><p>Swift 的命名空间是基于 module 而不是在代码中显式地指明，每个 module 代表了 Swift 中的一个命名空间。也就是说，同一个 target 里的类型名称还是不能相同的。在我们进行 app 开发时，默认添加到 app 的主 target 的内容都是处于同一个命名空间中的，我们可以通过创建 Cocoa (Touch) Framework 的 target 的方法来新建一个 module，这样我们就可以在两个不同的 target 中添加同样名字的类型了。</p>\n<h4 id=\"别名（typealias）\"><a href=\"#别名（typealias）\" class=\"headerlink\" title=\"别名（typealias）\"></a>别名（typealias）</h4><p>我们可以给一个复杂的难以理解的类型起一个别名，方便我们使用和理解。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Swift 定义 Void 为空的元组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">typealias</span> <span class=\"type\">Void</span> = ()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数别名</span></span><br><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">IntFn</span> = (<span class=\"type\">Int</span>,<span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">difference</span><span class=\"params\">(v1:Int,v2:Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">   v1 - v2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> fn:<span class=\"type\">IntFn</span> = difference</span><br><span class=\"line\"><span class=\"built_in\">print</span>(fn(<span class=\"number\">2</span>,<span class=\"number\">1</span>))  <span class=\"comment\">//1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 元组别名</span></span><br><span class=\"line\"><span class=\"keyword\">typealias</span> <span class=\"type\">Date</span> = (year:<span class=\"type\">Int</span>,month:<span class=\"type\">Int</span>,day:<span class=\"type\">Int</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">test</span><span class=\"params\">(<span class=\"number\">_</span> date:Date)</span></span> &#123;</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(date.year)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">test((<span class=\"number\">2019</span>,<span class=\"number\">10</span>,<span class=\"number\">30</span>))</span><br></pre></td></tr></table></figure>\n<h4 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h4><p>一个可变形式参数可以接受零或者多个<code>特定类型的值</code>，可变参数必须是同一类型的。当调用函数的时候你可以利用可变形式参数来声明形式参数可以被传入值的数量是可变的。可以通过在形式参数的类型名称后边插入三个点符号（<code>...</code>）来书写可变形式参数。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">sum</span><span class=\"params\">(<span class=\"number\">_</span> numbers:Int...)</span></span> -&gt; <span class=\"type\">Int</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> total = <span class=\"number\">0</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> numbers &#123;</span><br><span class=\"line\">       total += item</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> total</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">sum(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>)  <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h4><p>不同于 Objective-C 的初始化器，Swift 初始化器不返回值。这些初始化器主要的角色就是确保在第一次使用之前某类型的新实例能够正确初始化。</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> age: <span class=\"type\">Int</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> name: <span class=\"type\">String</span></span><br><span class=\"line\">   <span class=\"comment\">//指定初始化器</span></span><br><span class=\"line\">   <span class=\"keyword\">init</span>(age:<span class=\"type\">Int</span>, name:<span class=\"type\">String</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.age = age</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.name = name</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">//便捷初始化器</span></span><br><span class=\"line\">   <span class=\"keyword\">convenience</span> <span class=\"keyword\">init</span>(age:<span class=\"type\">Int</span>)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">self</span>.<span class=\"keyword\">init</span>(age:age,name:<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>每一个类至少有一个指定初始化器</li>\n<li>默认初始化器总是类的指定初始化器</li>\n<li>一个类通常只有一个指定初始化器</li>\n<li>指定初始化器必须从他的直系父类调用指定初始化器</li>\n<li>便捷初始化器必须从相同的类里调用另一个初始化器</li>\n<li>便捷初始化器最终必须调用一个指定初始化器</li>\n</ul>\n<h2 id=\"控件使用\"><a href=\"#控件使用\" class=\"headerlink\" title=\"控件使用\"></a>控件使用</h2><h3 id=\"1、UIView\"><a href=\"#1、UIView\" class=\"headerlink\" title=\"1、UIView\"></a>1、UIView</h3><h3 id=\"2、UITableView\"><a href=\"#2、UITableView\" class=\"headerlink\" title=\"2、UITableView\"></a>2、UITableView</h3><h2 id=\"实际应用\"><a href=\"#实际应用\" class=\"headerlink\" title=\"实际应用\"></a>实际应用</h2><h3 id=\"网络封装\"><a href=\"#网络封装\" class=\"headerlink\" title=\"网络封装\"></a>网络封装</h3><ol>\n<li>使用xcconfig配置不同环境host</li>\n<li>添加通用的请求类和响应类</li>\n<li>根据后台设计添加处理加密、验签等方法</li>\n<li>封装get、post、upload请求方法</li>\n<li>请求方法传入：响应类泛型、请求路径、请求参数</li>\n<li>请求完成回调：成功（返回响应类型对象）、异常、失败</li>\n<li>异常处理（退出登录、重试机制…）</li>\n<li>添加统一的网络请求hud</li>\n</ol>\n<h3 id=\"图片加载\"><a href=\"#图片加载\" class=\"headerlink\" title=\"图片加载\"></a>图片加载</h3><ol>\n<li>显示placeholder占位图</li>\n<li>以url为数据索引先在内存中查找是否有缓存</li>\n<li>如果没有缓存，通过md5处理过的key来在磁盘查找，找到把的数据加载到内存并显示出来</li>\n<li>如果内存和磁盘中都没有找到，就会向远程服务器发送请求，开始下载图片</li>\n<li>下载完的图片加入缓存并写入到磁盘中</li>\n<li>获取图片的过程是在子线程中进行，在主线程中显示</li>\n</ol>\n<h2 id=\"APP-架构\"><a href=\"#APP-架构\" class=\"headerlink\" title=\"APP 架构\"></a>APP 架构</h2><h3 id=\"1、组件化\"><a href=\"#1、组件化\" class=\"headerlink\" title=\"1、组件化\"></a>1、组件化</h3><h4 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h4><ul>\n<li>业务分层、解耦，使代码变得可维护</li>\n<li>拆分、组织庞大的项目，使项目变得可维护</li>\n<li>便于各业务功能拆分、抽离，实现功能复用</li>\n<li>业务隔离，实现跨团队开发代码控制和版本风险控制</li>\n<li>模块化对代码的封装性、合理性都有一定的要求，提升开发人员编码能力</li>\n<li>在维护好组件的情况下，满足不同客户需求（在新的主App中使用当前组件）</li>\n</ul>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><ul>\n<li>基础组件：按功能分库，不涉及业务需求，通过接口供业务组件调用</li>\n<li>基础UI组件：各个业务模块依赖使用，但需要保持好定制扩展的设计</li>\n<li>业务组件：业务功能间相对独立，相互间没有Model共享的依赖</li>\n<li>中间件：target-action，url-block，protocol-class</li>\n</ul>\n<h3 id=\"2、MVVM\"><a href=\"#2、MVVM\" class=\"headerlink\" title=\"2、MVVM\"></a>2、MVVM</h3><h2 id=\"App-优化\"><a href=\"#App-优化\" class=\"headerlink\" title=\"App 优化\"></a>App 优化</h2><h3 id=\"1、启动优化\"><a href=\"#1、启动优化\" class=\"headerlink\" title=\"1、启动优化\"></a>1、启动优化</h3><ul>\n<li>删除无用代码</li>\n<li>抽象重复代码</li>\n<li>第三方库延迟初始化</li>\n<li>业务逻辑延迟或异步执行</li>\n<li>App首页面先展示后渲染</li>\n<li>Time Profiler查找耗时操作和页面</li>\n</ul>\n<h3 id=\"2、网络优化\"><a href=\"#2、网络优化\" class=\"headerlink\" title=\"2、网络优化\"></a>2、网络优化</h3><h4 id=\"请求优化\"><a href=\"#请求优化\" class=\"headerlink\" title=\"请求优化\"></a>请求优化</h4><ul>\n<li>使用HttpDNS下发ip列表</li>\n<li>根据不同网络设置超时时间</li>\n<li>网络环境切换或失败，自动重发</li>\n</ul>\n<h4 id=\"传输优化\"><a href=\"#传输优化\" class=\"headerlink\" title=\"传输优化\"></a>传输优化</h4><ul>\n<li>使用http缓存</li>\n<li>文件传输启用Gzip</li>\n<li>采用WebP图片格式</li>\n<li>采用更好的序列化/反序列化方案</li>\n</ul>\n<h3 id=\"3、体积优化\"><a href=\"#3、体积优化\" class=\"headerlink\" title=\"3、体积优化\"></a>3、体积优化</h3><ul>\n<li>开启Bitcode</li>\n<li>删除无用资源和代码</li>\n<li>对图片资源进行压缩</li>\n<li>使用更轻量级的第三方库</li>\n<li>使用纯代码进行界面布局</li>\n<li>启动图和引导图使用原生绘制或jpg</li>\n<li>某些资源文件放在服务器上，按需下载</li>\n</ul>\n<h3 id=\"4、性能优化\"><a href=\"#4、性能优化\" class=\"headerlink\" title=\"4、性能优化\"></a>4、性能优化</h3><h4 id=\"速度优化\"><a href=\"#速度优化\" class=\"headerlink\" title=\"速度优化\"></a>速度优化</h4><ul>\n<li>耗时操作放入子线程</li>\n<li>使用图片缓存，数据缓存</li>\n<li>图文混排使用CoreText</li>\n<li>使图片适合UIImageView的尺寸</li>\n<li>减少离屏渲染，子线程绘制，主线程渲染</li>\n<li>减少subviews个数，用layer绘制元素</li>\n<li>减少clearColor，maskToBounds，阴影</li>\n</ul>\n<h4 id=\"tableview优化\"><a href=\"#tableview优化\" class=\"headerlink\" title=\"tableview优化\"></a>tableview优化</h4><ul>\n<li>使用cell复用机制</li>\n<li>不要动态添加视图</li>\n<li>图片异步加载并缓存</li>\n<li>手动计算高度缓存高度</li>\n<li>按需刷新，刷新最小列表单元</li>\n</ul>\n"},{"title":"使用Mac自带脚本一键部署Hexo","date":"2020-03-27T03:19:55.000Z","_content":"\n网上 Hexo 自动部署流程大都是抓取 Git 提交，自动部署博客，常见的实现方式是: Travis CI 和 Git Hooks。 不过我不喜欢这种频繁提交 Git 来部署的方式，但是又不想每次打开终端使用命令行部署，于是想到使用Mac系统自带的AppleScript实现。\n\n#### 在Hexo根目录新建 publish.sh 文件\n\n```shell\nrm -rf ~/Library/Caches/google/Chrome/Default/  #清除chrome缓存\ncd /Users/yang/Desktop/Hexo  #打开Hexo根目录\nhexo clean && hexo d -g  #部署Hexo\n```\n\n#### 新建 AppleScript，实现在 iTerm 运行 publish.sh 文件\n\n```vbscript\ntell application \"iTerm\"\n\tactivate\n\ttell current window\n\t\ttell current session\n\t\t\twrite text \"/Users/yang/Desktop/Hexo/publish.sh\"\n\t\tend tell\n\tend tell\nend tell\n```\n\n> 我用的终端是 iTerm，使用自带终端同理。\n\n#### AppleScript 导出为“应用程序”\n\n![AppleScript](https://tva1.sinaimg.cn/large/00831rSTgy1gdbxvlon6mj30uw0fp49j.jpg)\n\n> 可以通过替换应用包里面的 /Contents/Resources/applet.icns 文件来修改应用图标\n\n最终实现的效果就是使用 Markdown 编辑器写好文章后，使用Alfred输入 AppleScript 导出的应用程序名称，Hexo便自动部署至设置好的VPS。Markdown 编辑器推荐使用 Typora，特别好用。","source":"_posts/使用Mac自带脚本一键部署Hexo.md","raw":"---\ntitle: 使用Mac自带脚本一键部署Hexo\ndate: 2020-03-27 11:19:55\n---\n\n网上 Hexo 自动部署流程大都是抓取 Git 提交，自动部署博客，常见的实现方式是: Travis CI 和 Git Hooks。 不过我不喜欢这种频繁提交 Git 来部署的方式，但是又不想每次打开终端使用命令行部署，于是想到使用Mac系统自带的AppleScript实现。\n\n#### 在Hexo根目录新建 publish.sh 文件\n\n```shell\nrm -rf ~/Library/Caches/google/Chrome/Default/  #清除chrome缓存\ncd /Users/yang/Desktop/Hexo  #打开Hexo根目录\nhexo clean && hexo d -g  #部署Hexo\n```\n\n#### 新建 AppleScript，实现在 iTerm 运行 publish.sh 文件\n\n```vbscript\ntell application \"iTerm\"\n\tactivate\n\ttell current window\n\t\ttell current session\n\t\t\twrite text \"/Users/yang/Desktop/Hexo/publish.sh\"\n\t\tend tell\n\tend tell\nend tell\n```\n\n> 我用的终端是 iTerm，使用自带终端同理。\n\n#### AppleScript 导出为“应用程序”\n\n![AppleScript](https://tva1.sinaimg.cn/large/00831rSTgy1gdbxvlon6mj30uw0fp49j.jpg)\n\n> 可以通过替换应用包里面的 /Contents/Resources/applet.icns 文件来修改应用图标\n\n最终实现的效果就是使用 Markdown 编辑器写好文章后，使用Alfred输入 AppleScript 导出的应用程序名称，Hexo便自动部署至设置好的VPS。Markdown 编辑器推荐使用 Typora，特别好用。","slug":"使用Mac自带脚本一键部署Hexo","published":1,"updated":"2020-03-30T06:40:25.127Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8ml0006s09k1o7cc310","content":"<p>网上 Hexo 自动部署流程大都是抓取 Git 提交，自动部署博客，常见的实现方式是: Travis CI 和 Git Hooks。 不过我不喜欢这种频繁提交 Git 来部署的方式，但是又不想每次打开终端使用命令行部署，于是想到使用Mac系统自带的AppleScript实现。</p>\n<h4><span id=\"在hexo根目录新建-publishsh-文件\">在Hexo根目录新建 publish.sh 文件</span></h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/Library/Caches/google/Chrome/Default/  #清除chrome缓存</span><br><span class=\"line\">cd /Users/yang/Desktop/Hexo  #打开Hexo根目录</span><br><span class=\"line\">hexo clean &amp;&amp; hexo d -g  #部署Hexo</span><br></pre></td></tr></table></figure>\n<h4><span id=\"新建-applescript实现在-iterm-运行-publishsh-文件\">新建 AppleScript，实现在 iTerm 运行 publish.sh 文件</span></h4><figure class=\"highlight vbscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">\tactivate</span><br><span class=\"line\">\ttell current window</span><br><span class=\"line\">\t\ttell current session</span><br><span class=\"line\">\t\t\twrite text <span class=\"string\">\"/Users/yang/Desktop/Hexo/publish.sh\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span> tell</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> tell</span><br><span class=\"line\"><span class=\"keyword\">end</span> tell</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我用的终端是 iTerm，使用自带终端同理。</p>\n</blockquote>\n<h4><span id=\"applescript-导出为应用程序\">AppleScript 导出为“应用程序”</span></h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbxvlon6mj30uw0fp49j.jpg\" alt=\"AppleScript\"></p>\n<blockquote>\n<p>可以通过替换应用包里面的 /Contents/Resources/applet.icns 文件来修改应用图标</p>\n</blockquote>\n<p>最终实现的效果就是使用 Markdown 编辑器写好文章后，使用Alfred输入 AppleScript 导出的应用程序名称，Hexo便自动部署至设置好的VPS。Markdown 编辑器推荐使用 Typora，特别好用。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>网上 Hexo 自动部署流程大都是抓取 Git 提交，自动部署博客，常见的实现方式是: Travis CI 和 Git Hooks。 不过我不喜欢这种频繁提交 Git 来部署的方式，但是又不想每次打开终端使用命令行部署，于是想到使用Mac系统自带的AppleScript实现。</p>\n<h4 id=\"在Hexo根目录新建-publish-sh-文件\"><a href=\"#在Hexo根目录新建-publish-sh-文件\" class=\"headerlink\" title=\"在Hexo根目录新建 publish.sh 文件\"></a>在Hexo根目录新建 publish.sh 文件</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf ~/Library/Caches/google/Chrome/Default/  #清除chrome缓存</span><br><span class=\"line\">cd /Users/yang/Desktop/Hexo  #打开Hexo根目录</span><br><span class=\"line\">hexo clean &amp;&amp; hexo d -g  #部署Hexo</span><br></pre></td></tr></table></figure>\n<h4 id=\"新建-AppleScript，实现在-iTerm-运行-publish-sh-文件\"><a href=\"#新建-AppleScript，实现在-iTerm-运行-publish-sh-文件\" class=\"headerlink\" title=\"新建 AppleScript，实现在 iTerm 运行 publish.sh 文件\"></a>新建 AppleScript，实现在 iTerm 运行 publish.sh 文件</h4><figure class=\"highlight vbscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tell application <span class=\"string\">\"iTerm\"</span></span><br><span class=\"line\">\tactivate</span><br><span class=\"line\">\ttell current window</span><br><span class=\"line\">\t\ttell current session</span><br><span class=\"line\">\t\t\twrite text <span class=\"string\">\"/Users/yang/Desktop/Hexo/publish.sh\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span> tell</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> tell</span><br><span class=\"line\"><span class=\"keyword\">end</span> tell</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我用的终端是 iTerm，使用自带终端同理。</p>\n</blockquote>\n<h4 id=\"AppleScript-导出为“应用程序”\"><a href=\"#AppleScript-导出为“应用程序”\" class=\"headerlink\" title=\"AppleScript 导出为“应用程序”\"></a>AppleScript 导出为“应用程序”</h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbxvlon6mj30uw0fp49j.jpg\" alt=\"AppleScript\"></p>\n<blockquote>\n<p>可以通过替换应用包里面的 /Contents/Resources/applet.icns 文件来修改应用图标</p>\n</blockquote>\n<p>最终实现的效果就是使用 Markdown 编辑器写好文章后，使用Alfred输入 AppleScript 导出的应用程序名称，Hexo便自动部署至设置好的VPS。Markdown 编辑器推荐使用 Typora，特别好用。</p>\n"},{"title":"天涯神贴之意淫中国未来","date":"2019-12-30T06:52:08.000Z","_content":"\n> 此贴是天涯大神 liwang3894 于 2006年11月19日发布在天涯的帖子。当时来看是何等大胆，现在再看，这是中国被低估了。\n\n#### 此贴已被天涯删除，以下是此贴发于2006年的部分证据\n\n![1](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzayex24j30kb0bs0un.jpg)\n\n![2](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzb72rtuj30i108agn7.jpg)\n\n![3](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzbfgsotj30ji08s760.jpg)\n\n\n\n楼主：liwang3894 时间：2006-11-19 22:45:00\n\n虽然是YY，但是我觉得这些事情大部分都是可能发生的。或者类似的事情会发生。只不过是具体顺序，过程和发生时间有所不同罢了。\n\n2007年，中国经济持续保持高增长，房价增长放缓。嫦娥一号绕月探测器成功发射。\n\n2008年，北京奥运会成功举办，中国45枚金牌名列奖牌榜第二。神舟7号发射成功，宇航员出仓行走。台湾大选，马英九当选。\n\n2009年，两岸实现三通，结成更紧密贸易区。台湾经济开始复苏。\n\n2010年，京沪，京广高速铁路投入运营。时速300公里。中国外汇储备达20000亿美圆。中国GDP超过德国，位居世界第三。\n\n2011年，中国全年出国人次累计超过1亿，各国重视中国旅游市场。中国宽带用户超过2亿，位居世界第一。\n\n2012年，中国电影蓬勃发展，并且产生第一部科幻大片，讲述了未来发生世界大灾难，中国拯救世界的故事。影片制作精良，视觉效果震撼，气势恢弘，故事精彩。退休导演陈凯歌，张艺谋，冯小刚看罢影片，当即表示后生可畏，和新生代导演相比，自己就是SB。\n\n2013年，受到电影业成就的鼓舞，中国电视业后来居上，大量中国国产电视剧出口，中华风风靡亚洲。中国国内开始流行穿汉服过年，穿汉服结婚。\n\n2014年，中日韩－东盟成为世界上最大的自由贸易区。美国影响逐渐淡出亚洲。中国高速铁路网初步建成，一举解决铁路运力不足对中国经济发展的制约，春运成为历史。朝鲜借鉴中国模式，开始改革开放。\n\n2015年，中国成功发射载人登月航天器。首名中国女航天员成为有史以来第一个登上月球的中国人。航天器于农历八月十五降落在月球表面。全国超过10亿观众在中秋节亲眼目睹了现代版的嫦娥奔月。\n\n2016年，中国GDP总量超过日本，成为世界第二。中国人均GDP超过6000美圆。全国城镇人口超过60％，农业人口不足40%,中国正式完成了从农业化国家到后工业化国家的转变。同年，农村，城市户口差别取消。\n\n2017年，中国宣布建成科技创新型国家，这项计划始于2005年，终于利用12年时间完成。中国产业升级初步完成，中国企业的生产线更多的设立在非洲，印度，东南亚，拉丁美洲，中国本土制造比例逐渐下降。\n\n2018年，龙芯处理器占领国际CPU超过10％市场份额，中国国产汽车大量占领广大发展中国家市场，中国国内汽车拥有率达到20％，个人移动终端（那个时候估计不用手机了，应该是掌上电脑的感觉吧）拥有率超过80％，按照绝对数量，全部位居世界第一。\n\n2019年，朝鲜韩国结成自由经济体，经济总量位居世界第7位。当年全球GDP排行为1美国，2中国，3日本，4德国，5英国，6法国，7朝鲜韩国经济体，8意大利，9印度。\n\n2020年，有中国渔民在东海看到外形似龙的不明生物，引起全国媒体关注，一时间关于是否真的存在龙这种生物的讨论沸沸扬扬。随后，中国海军在东海与日本自卫队发生小规模冲突，中国海军随即占领钓鱼岛，宣布钓鱼岛为中国固有领土。并希望日方保持克制，不要使冲突升级。最终中日谈判解决争端，日本承认钓鱼岛属于中国，中国支持日本收回北方四岛之主权。\n\n2021年，一种以学习中华礼仪，复兴中华文化为目的的仿古私塾在民间兴起。有条件的家庭纷纷送孩子去这种私塾学习古礼，古文，古文化和琴棋书画，以增加孩子的修养。以往的英语，钢琴，芭蕾，素描等等培训机构逐渐被冷落。\n\n2022年，伊斯兰世界发动针对以色列的又一次战争，澳大利亚和欧洲的穆斯林同时举行游行示威支持圣战，并引起骚乱。美国联合北约军队参战。中国宣布启动反分裂国家法，武力统一台湾。五星红旗升起在台北上空。中国自此全部解放。中国人民解放军正式更名为中国人民军。并派20万精锐部队登陆台湾维持秩序。\n\n2023年，中东战争基本平息，阿拉伯世界再一次失败，但是对于西方文明的敌对情绪更加膨胀。美国表示承认中国对于台湾的占领和统治。中国政府在台湾推行一国两制，台湾体制维持不变，但是取消台湾军权，收编为中国人民军，由中央统一管理，取消总统选举，由中央委任，保持县市长选举。同年，中国大型空间站建成。北斗卫星导航系统初步完成，从此，伽利略，GPS在中国成为纯民用，军用全部采用北斗系统。\n\n2024年，中国第一个航母编队建成。活动区域，南海。有效捍卫了我国领海主权。中国初步借鉴台湾经验，在广东福建进行试点，实行县市长选举。同年，美国登陆火星。\n\n2025年，柳叶眉，丹凤眼，樱桃口，小鼻子，黑色直发逐渐成为中国女性的流行审美，美容整容行业纷纷推出相应服务，以往以高鼻梁，薄嘴唇，面部棱角分明，小脑袋为美的审美观逐渐被淘汰。同年，中美俄欧日联合在月球建立国际月球基地。从此，月球上有人类生存。\n\n2026年，俄罗斯远东的中国移民首次超过俄罗斯族，成为半中国化地区，中国对此地区有着潜移默化的影响力。俄罗斯人口继续衰退，经济影响力甚微，使得俄罗斯对远东心有余而力不足。\n\n2027年，朝鲜经过多年改革开放，各方面体制与中国无异，加之中国对朝鲜的扶持，朝鲜人均GDP达到韩国的60％。朝鲜半岛开始统一谈判。\n\n2028年，由于蒙古国在经济文化上越来越中国化，同时大量中国移民涌入蒙古，蒙古对中国的依赖越来越严重，最终蒙古以邦联形式加入中国。同年，中国大陆进行简化字修改方案试运行，将简化的不科学，不成功的简化字取消，所有简体字应保持与繁体字一一对应，并且结构合理，表意明确。同时，在港澳台地区推行新简体字。\n\n2029年，马来西亚华人独立建国，国号新新加坡。印尼华人开始独立斗争，但遭到残酷镇压。\n\n2030年，中国政府表示支持印尼华人的民主要求，认为当地华人有人民自决的权利，印尼政府对华人的残酷政策严重损害了当地华人的人权。中国本着人权大于主权的原则，派出2只航母编队和10万陆军进发印尼。\n\n2031年，经过几个月的战斗，印尼华人成功建国，国号，新新新加坡。国防暂时由中华人民共和国负责。西方媒体披露中国军队在印尼的战争中有种族灭绝的情况发生，导致大量印尼马来人被屠杀。中国表示这纯粹子虚乌有，印尼马来人的大量死亡完全系此人种生存力不强造成，属于自然现象，与中国军队无关。\n\n2032年，中国在国内推行基层民主选举，各地县市长由人民民主选举。省长仍由中央委任。朝鲜韩国统一谈判达成协议，组成联合政府，同时美军撤离韩国。新国家国号大朝鲜民国。\n\n2033年，大中华地区，包括中国大陆，香港，澳门，台湾，新加坡，新新加坡，新新新加坡，蒙古加盟共和国的经济总量首次与美国持平。当年全球GDP排行为1大中华，美国，3日本，4大朝鲜民国，5，德国，6法国，7印度，8英国。\n\n2034年，中国成功登陆火星。美军撤离日本，日美安保条约失效。中国主导建立亚洲共同体，成为世界最大的经济体。\n\n2035年，大朝鲜民国正式全面启用汉字书写，要求利用10年时间恢复汉字与朝鲜文书写系统并用。同年，日本限制假名和英语词汇的过量使用。规定有汉源词的词语一律使用汉字书写。同时日本人姓名中，不得出现假名。\n\n2036年，越南正式启用简体中文作为书写系统，朝鲜，日本也开始引进中国的简体字，保证本国汉字与中国汉字的一致。同年，全世界学习汉语的人数超过1亿。\n\n2037年，中国出台新移民法，严格限制外来移民和偷渡者。\n\n2038年，亚洲共同体把人民币作为通用货币。日元汇率与人民币挂钩。以西方世界主导的经济秩序正式崩溃。\n\n2040年，东方世界的财富超过西方世界，全球GDP排行为1大中华地区2欧盟3北美（美国加拿大）4日本，5大朝鲜民国，6印度。中国人均GDP，达到150000人民币，成为中等发达国家。\n\n中国新一个强盛期正式开始。\n\n好了，我YY完了，如果大家觉得我的时间表太快的话，可以时代把时间成比例放大。我认为，如果中国不崩溃，那么中国的趋势大概就是我YY的这样。不过谁也不知道未来究竟是什么样的。也许一切比你所能想到的更加激动人心，更加波澜壮阔。","source":"_posts/天涯神贴之意淫中国未来.md","raw":"---\ntitle: 天涯神贴之意淫中国未来\ndate: 2019-12-30 14:52:08\n---\n\n> 此贴是天涯大神 liwang3894 于 2006年11月19日发布在天涯的帖子。当时来看是何等大胆，现在再看，这是中国被低估了。\n\n#### 此贴已被天涯删除，以下是此贴发于2006年的部分证据\n\n![1](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzayex24j30kb0bs0un.jpg)\n\n![2](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzb72rtuj30i108agn7.jpg)\n\n![3](https://tva1.sinaimg.cn/large/00831rSTgy1gdbzbfgsotj30ji08s760.jpg)\n\n\n\n楼主：liwang3894 时间：2006-11-19 22:45:00\n\n虽然是YY，但是我觉得这些事情大部分都是可能发生的。或者类似的事情会发生。只不过是具体顺序，过程和发生时间有所不同罢了。\n\n2007年，中国经济持续保持高增长，房价增长放缓。嫦娥一号绕月探测器成功发射。\n\n2008年，北京奥运会成功举办，中国45枚金牌名列奖牌榜第二。神舟7号发射成功，宇航员出仓行走。台湾大选，马英九当选。\n\n2009年，两岸实现三通，结成更紧密贸易区。台湾经济开始复苏。\n\n2010年，京沪，京广高速铁路投入运营。时速300公里。中国外汇储备达20000亿美圆。中国GDP超过德国，位居世界第三。\n\n2011年，中国全年出国人次累计超过1亿，各国重视中国旅游市场。中国宽带用户超过2亿，位居世界第一。\n\n2012年，中国电影蓬勃发展，并且产生第一部科幻大片，讲述了未来发生世界大灾难，中国拯救世界的故事。影片制作精良，视觉效果震撼，气势恢弘，故事精彩。退休导演陈凯歌，张艺谋，冯小刚看罢影片，当即表示后生可畏，和新生代导演相比，自己就是SB。\n\n2013年，受到电影业成就的鼓舞，中国电视业后来居上，大量中国国产电视剧出口，中华风风靡亚洲。中国国内开始流行穿汉服过年，穿汉服结婚。\n\n2014年，中日韩－东盟成为世界上最大的自由贸易区。美国影响逐渐淡出亚洲。中国高速铁路网初步建成，一举解决铁路运力不足对中国经济发展的制约，春运成为历史。朝鲜借鉴中国模式，开始改革开放。\n\n2015年，中国成功发射载人登月航天器。首名中国女航天员成为有史以来第一个登上月球的中国人。航天器于农历八月十五降落在月球表面。全国超过10亿观众在中秋节亲眼目睹了现代版的嫦娥奔月。\n\n2016年，中国GDP总量超过日本，成为世界第二。中国人均GDP超过6000美圆。全国城镇人口超过60％，农业人口不足40%,中国正式完成了从农业化国家到后工业化国家的转变。同年，农村，城市户口差别取消。\n\n2017年，中国宣布建成科技创新型国家，这项计划始于2005年，终于利用12年时间完成。中国产业升级初步完成，中国企业的生产线更多的设立在非洲，印度，东南亚，拉丁美洲，中国本土制造比例逐渐下降。\n\n2018年，龙芯处理器占领国际CPU超过10％市场份额，中国国产汽车大量占领广大发展中国家市场，中国国内汽车拥有率达到20％，个人移动终端（那个时候估计不用手机了，应该是掌上电脑的感觉吧）拥有率超过80％，按照绝对数量，全部位居世界第一。\n\n2019年，朝鲜韩国结成自由经济体，经济总量位居世界第7位。当年全球GDP排行为1美国，2中国，3日本，4德国，5英国，6法国，7朝鲜韩国经济体，8意大利，9印度。\n\n2020年，有中国渔民在东海看到外形似龙的不明生物，引起全国媒体关注，一时间关于是否真的存在龙这种生物的讨论沸沸扬扬。随后，中国海军在东海与日本自卫队发生小规模冲突，中国海军随即占领钓鱼岛，宣布钓鱼岛为中国固有领土。并希望日方保持克制，不要使冲突升级。最终中日谈判解决争端，日本承认钓鱼岛属于中国，中国支持日本收回北方四岛之主权。\n\n2021年，一种以学习中华礼仪，复兴中华文化为目的的仿古私塾在民间兴起。有条件的家庭纷纷送孩子去这种私塾学习古礼，古文，古文化和琴棋书画，以增加孩子的修养。以往的英语，钢琴，芭蕾，素描等等培训机构逐渐被冷落。\n\n2022年，伊斯兰世界发动针对以色列的又一次战争，澳大利亚和欧洲的穆斯林同时举行游行示威支持圣战，并引起骚乱。美国联合北约军队参战。中国宣布启动反分裂国家法，武力统一台湾。五星红旗升起在台北上空。中国自此全部解放。中国人民解放军正式更名为中国人民军。并派20万精锐部队登陆台湾维持秩序。\n\n2023年，中东战争基本平息，阿拉伯世界再一次失败，但是对于西方文明的敌对情绪更加膨胀。美国表示承认中国对于台湾的占领和统治。中国政府在台湾推行一国两制，台湾体制维持不变，但是取消台湾军权，收编为中国人民军，由中央统一管理，取消总统选举，由中央委任，保持县市长选举。同年，中国大型空间站建成。北斗卫星导航系统初步完成，从此，伽利略，GPS在中国成为纯民用，军用全部采用北斗系统。\n\n2024年，中国第一个航母编队建成。活动区域，南海。有效捍卫了我国领海主权。中国初步借鉴台湾经验，在广东福建进行试点，实行县市长选举。同年，美国登陆火星。\n\n2025年，柳叶眉，丹凤眼，樱桃口，小鼻子，黑色直发逐渐成为中国女性的流行审美，美容整容行业纷纷推出相应服务，以往以高鼻梁，薄嘴唇，面部棱角分明，小脑袋为美的审美观逐渐被淘汰。同年，中美俄欧日联合在月球建立国际月球基地。从此，月球上有人类生存。\n\n2026年，俄罗斯远东的中国移民首次超过俄罗斯族，成为半中国化地区，中国对此地区有着潜移默化的影响力。俄罗斯人口继续衰退，经济影响力甚微，使得俄罗斯对远东心有余而力不足。\n\n2027年，朝鲜经过多年改革开放，各方面体制与中国无异，加之中国对朝鲜的扶持，朝鲜人均GDP达到韩国的60％。朝鲜半岛开始统一谈判。\n\n2028年，由于蒙古国在经济文化上越来越中国化，同时大量中国移民涌入蒙古，蒙古对中国的依赖越来越严重，最终蒙古以邦联形式加入中国。同年，中国大陆进行简化字修改方案试运行，将简化的不科学，不成功的简化字取消，所有简体字应保持与繁体字一一对应，并且结构合理，表意明确。同时，在港澳台地区推行新简体字。\n\n2029年，马来西亚华人独立建国，国号新新加坡。印尼华人开始独立斗争，但遭到残酷镇压。\n\n2030年，中国政府表示支持印尼华人的民主要求，认为当地华人有人民自决的权利，印尼政府对华人的残酷政策严重损害了当地华人的人权。中国本着人权大于主权的原则，派出2只航母编队和10万陆军进发印尼。\n\n2031年，经过几个月的战斗，印尼华人成功建国，国号，新新新加坡。国防暂时由中华人民共和国负责。西方媒体披露中国军队在印尼的战争中有种族灭绝的情况发生，导致大量印尼马来人被屠杀。中国表示这纯粹子虚乌有，印尼马来人的大量死亡完全系此人种生存力不强造成，属于自然现象，与中国军队无关。\n\n2032年，中国在国内推行基层民主选举，各地县市长由人民民主选举。省长仍由中央委任。朝鲜韩国统一谈判达成协议，组成联合政府，同时美军撤离韩国。新国家国号大朝鲜民国。\n\n2033年，大中华地区，包括中国大陆，香港，澳门，台湾，新加坡，新新加坡，新新新加坡，蒙古加盟共和国的经济总量首次与美国持平。当年全球GDP排行为1大中华，美国，3日本，4大朝鲜民国，5，德国，6法国，7印度，8英国。\n\n2034年，中国成功登陆火星。美军撤离日本，日美安保条约失效。中国主导建立亚洲共同体，成为世界最大的经济体。\n\n2035年，大朝鲜民国正式全面启用汉字书写，要求利用10年时间恢复汉字与朝鲜文书写系统并用。同年，日本限制假名和英语词汇的过量使用。规定有汉源词的词语一律使用汉字书写。同时日本人姓名中，不得出现假名。\n\n2036年，越南正式启用简体中文作为书写系统，朝鲜，日本也开始引进中国的简体字，保证本国汉字与中国汉字的一致。同年，全世界学习汉语的人数超过1亿。\n\n2037年，中国出台新移民法，严格限制外来移民和偷渡者。\n\n2038年，亚洲共同体把人民币作为通用货币。日元汇率与人民币挂钩。以西方世界主导的经济秩序正式崩溃。\n\n2040年，东方世界的财富超过西方世界，全球GDP排行为1大中华地区2欧盟3北美（美国加拿大）4日本，5大朝鲜民国，6印度。中国人均GDP，达到150000人民币，成为中等发达国家。\n\n中国新一个强盛期正式开始。\n\n好了，我YY完了，如果大家觉得我的时间表太快的话，可以时代把时间成比例放大。我认为，如果中国不崩溃，那么中国的趋势大概就是我YY的这样。不过谁也不知道未来究竟是什么样的。也许一切比你所能想到的更加激动人心，更加波澜壮阔。","slug":"天涯神贴之意淫中国未来","published":1,"updated":"2020-03-30T07:40:11.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8imz8mn0008s09kfvm41ech","content":"<blockquote>\n<p>此贴是天涯大神 liwang3894 于 2006年11月19日发布在天涯的帖子。当时来看是何等大胆，现在再看，这是中国被低估了。</p>\n</blockquote>\n<h4><span id=\"此贴已被天涯删除以下是此贴发于2006年的部分证据\">此贴已被天涯删除，以下是此贴发于2006年的部分证据</span></h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzayex24j30kb0bs0un.jpg\" alt=\"1\"></p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzb72rtuj30i108agn7.jpg\" alt=\"2\"></p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzbfgsotj30ji08s760.jpg\" alt=\"3\"></p>\n<p>楼主：liwang3894 时间：2006-11-19 22:45:00</p>\n<p>虽然是YY，但是我觉得这些事情大部分都是可能发生的。或者类似的事情会发生。只不过是具体顺序，过程和发生时间有所不同罢了。</p>\n<p>2007年，中国经济持续保持高增长，房价增长放缓。嫦娥一号绕月探测器成功发射。</p>\n<p>2008年，北京奥运会成功举办，中国45枚金牌名列奖牌榜第二。神舟7号发射成功，宇航员出仓行走。台湾大选，马英九当选。</p>\n<p>2009年，两岸实现三通，结成更紧密贸易区。台湾经济开始复苏。</p>\n<p>2010年，京沪，京广高速铁路投入运营。时速300公里。中国外汇储备达20000亿美圆。中国GDP超过德国，位居世界第三。</p>\n<p>2011年，中国全年出国人次累计超过1亿，各国重视中国旅游市场。中国宽带用户超过2亿，位居世界第一。</p>\n<p>2012年，中国电影蓬勃发展，并且产生第一部科幻大片，讲述了未来发生世界大灾难，中国拯救世界的故事。影片制作精良，视觉效果震撼，气势恢弘，故事精彩。退休导演陈凯歌，张艺谋，冯小刚看罢影片，当即表示后生可畏，和新生代导演相比，自己就是SB。</p>\n<p>2013年，受到电影业成就的鼓舞，中国电视业后来居上，大量中国国产电视剧出口，中华风风靡亚洲。中国国内开始流行穿汉服过年，穿汉服结婚。</p>\n<p>2014年，中日韩－东盟成为世界上最大的自由贸易区。美国影响逐渐淡出亚洲。中国高速铁路网初步建成，一举解决铁路运力不足对中国经济发展的制约，春运成为历史。朝鲜借鉴中国模式，开始改革开放。</p>\n<p>2015年，中国成功发射载人登月航天器。首名中国女航天员成为有史以来第一个登上月球的中国人。航天器于农历八月十五降落在月球表面。全国超过10亿观众在中秋节亲眼目睹了现代版的嫦娥奔月。</p>\n<p>2016年，中国GDP总量超过日本，成为世界第二。中国人均GDP超过6000美圆。全国城镇人口超过60％，农业人口不足40%,中国正式完成了从农业化国家到后工业化国家的转变。同年，农村，城市户口差别取消。</p>\n<p>2017年，中国宣布建成科技创新型国家，这项计划始于2005年，终于利用12年时间完成。中国产业升级初步完成，中国企业的生产线更多的设立在非洲，印度，东南亚，拉丁美洲，中国本土制造比例逐渐下降。</p>\n<p>2018年，龙芯处理器占领国际CPU超过10％市场份额，中国国产汽车大量占领广大发展中国家市场，中国国内汽车拥有率达到20％，个人移动终端（那个时候估计不用手机了，应该是掌上电脑的感觉吧）拥有率超过80％，按照绝对数量，全部位居世界第一。</p>\n<p>2019年，朝鲜韩国结成自由经济体，经济总量位居世界第7位。当年全球GDP排行为1美国，2中国，3日本，4德国，5英国，6法国，7朝鲜韩国经济体，8意大利，9印度。</p>\n<p>2020年，有中国渔民在东海看到外形似龙的不明生物，引起全国媒体关注，一时间关于是否真的存在龙这种生物的讨论沸沸扬扬。随后，中国海军在东海与日本自卫队发生小规模冲突，中国海军随即占领钓鱼岛，宣布钓鱼岛为中国固有领土。并希望日方保持克制，不要使冲突升级。最终中日谈判解决争端，日本承认钓鱼岛属于中国，中国支持日本收回北方四岛之主权。</p>\n<p>2021年，一种以学习中华礼仪，复兴中华文化为目的的仿古私塾在民间兴起。有条件的家庭纷纷送孩子去这种私塾学习古礼，古文，古文化和琴棋书画，以增加孩子的修养。以往的英语，钢琴，芭蕾，素描等等培训机构逐渐被冷落。</p>\n<p>2022年，伊斯兰世界发动针对以色列的又一次战争，澳大利亚和欧洲的穆斯林同时举行游行示威支持圣战，并引起骚乱。美国联合北约军队参战。中国宣布启动反分裂国家法，武力统一台湾。五星红旗升起在台北上空。中国自此全部解放。中国人民解放军正式更名为中国人民军。并派20万精锐部队登陆台湾维持秩序。</p>\n<p>2023年，中东战争基本平息，阿拉伯世界再一次失败，但是对于西方文明的敌对情绪更加膨胀。美国表示承认中国对于台湾的占领和统治。中国政府在台湾推行一国两制，台湾体制维持不变，但是取消台湾军权，收编为中国人民军，由中央统一管理，取消总统选举，由中央委任，保持县市长选举。同年，中国大型空间站建成。北斗卫星导航系统初步完成，从此，伽利略，GPS在中国成为纯民用，军用全部采用北斗系统。</p>\n<p>2024年，中国第一个航母编队建成。活动区域，南海。有效捍卫了我国领海主权。中国初步借鉴台湾经验，在广东福建进行试点，实行县市长选举。同年，美国登陆火星。</p>\n<p>2025年，柳叶眉，丹凤眼，樱桃口，小鼻子，黑色直发逐渐成为中国女性的流行审美，美容整容行业纷纷推出相应服务，以往以高鼻梁，薄嘴唇，面部棱角分明，小脑袋为美的审美观逐渐被淘汰。同年，中美俄欧日联合在月球建立国际月球基地。从此，月球上有人类生存。</p>\n<p>2026年，俄罗斯远东的中国移民首次超过俄罗斯族，成为半中国化地区，中国对此地区有着潜移默化的影响力。俄罗斯人口继续衰退，经济影响力甚微，使得俄罗斯对远东心有余而力不足。</p>\n<p>2027年，朝鲜经过多年改革开放，各方面体制与中国无异，加之中国对朝鲜的扶持，朝鲜人均GDP达到韩国的60％。朝鲜半岛开始统一谈判。</p>\n<p>2028年，由于蒙古国在经济文化上越来越中国化，同时大量中国移民涌入蒙古，蒙古对中国的依赖越来越严重，最终蒙古以邦联形式加入中国。同年，中国大陆进行简化字修改方案试运行，将简化的不科学，不成功的简化字取消，所有简体字应保持与繁体字一一对应，并且结构合理，表意明确。同时，在港澳台地区推行新简体字。</p>\n<p>2029年，马来西亚华人独立建国，国号新新加坡。印尼华人开始独立斗争，但遭到残酷镇压。</p>\n<p>2030年，中国政府表示支持印尼华人的民主要求，认为当地华人有人民自决的权利，印尼政府对华人的残酷政策严重损害了当地华人的人权。中国本着人权大于主权的原则，派出2只航母编队和10万陆军进发印尼。</p>\n<p>2031年，经过几个月的战斗，印尼华人成功建国，国号，新新新加坡。国防暂时由中华人民共和国负责。西方媒体披露中国军队在印尼的战争中有种族灭绝的情况发生，导致大量印尼马来人被屠杀。中国表示这纯粹子虚乌有，印尼马来人的大量死亡完全系此人种生存力不强造成，属于自然现象，与中国军队无关。</p>\n<p>2032年，中国在国内推行基层民主选举，各地县市长由人民民主选举。省长仍由中央委任。朝鲜韩国统一谈判达成协议，组成联合政府，同时美军撤离韩国。新国家国号大朝鲜民国。</p>\n<p>2033年，大中华地区，包括中国大陆，香港，澳门，台湾，新加坡，新新加坡，新新新加坡，蒙古加盟共和国的经济总量首次与美国持平。当年全球GDP排行为1大中华，美国，3日本，4大朝鲜民国，5，德国，6法国，7印度，8英国。</p>\n<p>2034年，中国成功登陆火星。美军撤离日本，日美安保条约失效。中国主导建立亚洲共同体，成为世界最大的经济体。</p>\n<p>2035年，大朝鲜民国正式全面启用汉字书写，要求利用10年时间恢复汉字与朝鲜文书写系统并用。同年，日本限制假名和英语词汇的过量使用。规定有汉源词的词语一律使用汉字书写。同时日本人姓名中，不得出现假名。</p>\n<p>2036年，越南正式启用简体中文作为书写系统，朝鲜，日本也开始引进中国的简体字，保证本国汉字与中国汉字的一致。同年，全世界学习汉语的人数超过1亿。</p>\n<p>2037年，中国出台新移民法，严格限制外来移民和偷渡者。</p>\n<p>2038年，亚洲共同体把人民币作为通用货币。日元汇率与人民币挂钩。以西方世界主导的经济秩序正式崩溃。</p>\n<p>2040年，东方世界的财富超过西方世界，全球GDP排行为1大中华地区2欧盟3北美（美国加拿大）4日本，5大朝鲜民国，6印度。中国人均GDP，达到150000人民币，成为中等发达国家。</p>\n<p>中国新一个强盛期正式开始。</p>\n<p>好了，我YY完了，如果大家觉得我的时间表太快的话，可以时代把时间成比例放大。我认为，如果中国不崩溃，那么中国的趋势大概就是我YY的这样。不过谁也不知道未来究竟是什么样的。也许一切比你所能想到的更加激动人心，更加波澜壮阔。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>此贴是天涯大神 liwang3894 于 2006年11月19日发布在天涯的帖子。当时来看是何等大胆，现在再看，这是中国被低估了。</p>\n</blockquote>\n<h4 id=\"此贴已被天涯删除，以下是此贴发于2006年的部分证据\"><a href=\"#此贴已被天涯删除，以下是此贴发于2006年的部分证据\" class=\"headerlink\" title=\"此贴已被天涯删除，以下是此贴发于2006年的部分证据\"></a>此贴已被天涯删除，以下是此贴发于2006年的部分证据</h4><p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzayex24j30kb0bs0un.jpg\" alt=\"1\"></p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzb72rtuj30i108agn7.jpg\" alt=\"2\"></p>\n<p><img src=\"https://loading.io/mod/spinner/spinner/sample.gif\" data-echo=\"https://tva1.sinaimg.cn/large/00831rSTgy1gdbzbfgsotj30ji08s760.jpg\" alt=\"3\"></p>\n<p>楼主：liwang3894 时间：2006-11-19 22:45:00</p>\n<p>虽然是YY，但是我觉得这些事情大部分都是可能发生的。或者类似的事情会发生。只不过是具体顺序，过程和发生时间有所不同罢了。</p>\n<p>2007年，中国经济持续保持高增长，房价增长放缓。嫦娥一号绕月探测器成功发射。</p>\n<p>2008年，北京奥运会成功举办，中国45枚金牌名列奖牌榜第二。神舟7号发射成功，宇航员出仓行走。台湾大选，马英九当选。</p>\n<p>2009年，两岸实现三通，结成更紧密贸易区。台湾经济开始复苏。</p>\n<p>2010年，京沪，京广高速铁路投入运营。时速300公里。中国外汇储备达20000亿美圆。中国GDP超过德国，位居世界第三。</p>\n<p>2011年，中国全年出国人次累计超过1亿，各国重视中国旅游市场。中国宽带用户超过2亿，位居世界第一。</p>\n<p>2012年，中国电影蓬勃发展，并且产生第一部科幻大片，讲述了未来发生世界大灾难，中国拯救世界的故事。影片制作精良，视觉效果震撼，气势恢弘，故事精彩。退休导演陈凯歌，张艺谋，冯小刚看罢影片，当即表示后生可畏，和新生代导演相比，自己就是SB。</p>\n<p>2013年，受到电影业成就的鼓舞，中国电视业后来居上，大量中国国产电视剧出口，中华风风靡亚洲。中国国内开始流行穿汉服过年，穿汉服结婚。</p>\n<p>2014年，中日韩－东盟成为世界上最大的自由贸易区。美国影响逐渐淡出亚洲。中国高速铁路网初步建成，一举解决铁路运力不足对中国经济发展的制约，春运成为历史。朝鲜借鉴中国模式，开始改革开放。</p>\n<p>2015年，中国成功发射载人登月航天器。首名中国女航天员成为有史以来第一个登上月球的中国人。航天器于农历八月十五降落在月球表面。全国超过10亿观众在中秋节亲眼目睹了现代版的嫦娥奔月。</p>\n<p>2016年，中国GDP总量超过日本，成为世界第二。中国人均GDP超过6000美圆。全国城镇人口超过60％，农业人口不足40%,中国正式完成了从农业化国家到后工业化国家的转变。同年，农村，城市户口差别取消。</p>\n<p>2017年，中国宣布建成科技创新型国家，这项计划始于2005年，终于利用12年时间完成。中国产业升级初步完成，中国企业的生产线更多的设立在非洲，印度，东南亚，拉丁美洲，中国本土制造比例逐渐下降。</p>\n<p>2018年，龙芯处理器占领国际CPU超过10％市场份额，中国国产汽车大量占领广大发展中国家市场，中国国内汽车拥有率达到20％，个人移动终端（那个时候估计不用手机了，应该是掌上电脑的感觉吧）拥有率超过80％，按照绝对数量，全部位居世界第一。</p>\n<p>2019年，朝鲜韩国结成自由经济体，经济总量位居世界第7位。当年全球GDP排行为1美国，2中国，3日本，4德国，5英国，6法国，7朝鲜韩国经济体，8意大利，9印度。</p>\n<p>2020年，有中国渔民在东海看到外形似龙的不明生物，引起全国媒体关注，一时间关于是否真的存在龙这种生物的讨论沸沸扬扬。随后，中国海军在东海与日本自卫队发生小规模冲突，中国海军随即占领钓鱼岛，宣布钓鱼岛为中国固有领土。并希望日方保持克制，不要使冲突升级。最终中日谈判解决争端，日本承认钓鱼岛属于中国，中国支持日本收回北方四岛之主权。</p>\n<p>2021年，一种以学习中华礼仪，复兴中华文化为目的的仿古私塾在民间兴起。有条件的家庭纷纷送孩子去这种私塾学习古礼，古文，古文化和琴棋书画，以增加孩子的修养。以往的英语，钢琴，芭蕾，素描等等培训机构逐渐被冷落。</p>\n<p>2022年，伊斯兰世界发动针对以色列的又一次战争，澳大利亚和欧洲的穆斯林同时举行游行示威支持圣战，并引起骚乱。美国联合北约军队参战。中国宣布启动反分裂国家法，武力统一台湾。五星红旗升起在台北上空。中国自此全部解放。中国人民解放军正式更名为中国人民军。并派20万精锐部队登陆台湾维持秩序。</p>\n<p>2023年，中东战争基本平息，阿拉伯世界再一次失败，但是对于西方文明的敌对情绪更加膨胀。美国表示承认中国对于台湾的占领和统治。中国政府在台湾推行一国两制，台湾体制维持不变，但是取消台湾军权，收编为中国人民军，由中央统一管理，取消总统选举，由中央委任，保持县市长选举。同年，中国大型空间站建成。北斗卫星导航系统初步完成，从此，伽利略，GPS在中国成为纯民用，军用全部采用北斗系统。</p>\n<p>2024年，中国第一个航母编队建成。活动区域，南海。有效捍卫了我国领海主权。中国初步借鉴台湾经验，在广东福建进行试点，实行县市长选举。同年，美国登陆火星。</p>\n<p>2025年，柳叶眉，丹凤眼，樱桃口，小鼻子，黑色直发逐渐成为中国女性的流行审美，美容整容行业纷纷推出相应服务，以往以高鼻梁，薄嘴唇，面部棱角分明，小脑袋为美的审美观逐渐被淘汰。同年，中美俄欧日联合在月球建立国际月球基地。从此，月球上有人类生存。</p>\n<p>2026年，俄罗斯远东的中国移民首次超过俄罗斯族，成为半中国化地区，中国对此地区有着潜移默化的影响力。俄罗斯人口继续衰退，经济影响力甚微，使得俄罗斯对远东心有余而力不足。</p>\n<p>2027年，朝鲜经过多年改革开放，各方面体制与中国无异，加之中国对朝鲜的扶持，朝鲜人均GDP达到韩国的60％。朝鲜半岛开始统一谈判。</p>\n<p>2028年，由于蒙古国在经济文化上越来越中国化，同时大量中国移民涌入蒙古，蒙古对中国的依赖越来越严重，最终蒙古以邦联形式加入中国。同年，中国大陆进行简化字修改方案试运行，将简化的不科学，不成功的简化字取消，所有简体字应保持与繁体字一一对应，并且结构合理，表意明确。同时，在港澳台地区推行新简体字。</p>\n<p>2029年，马来西亚华人独立建国，国号新新加坡。印尼华人开始独立斗争，但遭到残酷镇压。</p>\n<p>2030年，中国政府表示支持印尼华人的民主要求，认为当地华人有人民自决的权利，印尼政府对华人的残酷政策严重损害了当地华人的人权。中国本着人权大于主权的原则，派出2只航母编队和10万陆军进发印尼。</p>\n<p>2031年，经过几个月的战斗，印尼华人成功建国，国号，新新新加坡。国防暂时由中华人民共和国负责。西方媒体披露中国军队在印尼的战争中有种族灭绝的情况发生，导致大量印尼马来人被屠杀。中国表示这纯粹子虚乌有，印尼马来人的大量死亡完全系此人种生存力不强造成，属于自然现象，与中国军队无关。</p>\n<p>2032年，中国在国内推行基层民主选举，各地县市长由人民民主选举。省长仍由中央委任。朝鲜韩国统一谈判达成协议，组成联合政府，同时美军撤离韩国。新国家国号大朝鲜民国。</p>\n<p>2033年，大中华地区，包括中国大陆，香港，澳门，台湾，新加坡，新新加坡，新新新加坡，蒙古加盟共和国的经济总量首次与美国持平。当年全球GDP排行为1大中华，美国，3日本，4大朝鲜民国，5，德国，6法国，7印度，8英国。</p>\n<p>2034年，中国成功登陆火星。美军撤离日本，日美安保条约失效。中国主导建立亚洲共同体，成为世界最大的经济体。</p>\n<p>2035年，大朝鲜民国正式全面启用汉字书写，要求利用10年时间恢复汉字与朝鲜文书写系统并用。同年，日本限制假名和英语词汇的过量使用。规定有汉源词的词语一律使用汉字书写。同时日本人姓名中，不得出现假名。</p>\n<p>2036年，越南正式启用简体中文作为书写系统，朝鲜，日本也开始引进中国的简体字，保证本国汉字与中国汉字的一致。同年，全世界学习汉语的人数超过1亿。</p>\n<p>2037年，中国出台新移民法，严格限制外来移民和偷渡者。</p>\n<p>2038年，亚洲共同体把人民币作为通用货币。日元汇率与人民币挂钩。以西方世界主导的经济秩序正式崩溃。</p>\n<p>2040年，东方世界的财富超过西方世界，全球GDP排行为1大中华地区2欧盟3北美（美国加拿大）4日本，5大朝鲜民国，6印度。中国人均GDP，达到150000人民币，成为中等发达国家。</p>\n<p>中国新一个强盛期正式开始。</p>\n<p>好了，我YY完了，如果大家觉得我的时间表太快的话，可以时代把时间成比例放大。我认为，如果中国不崩溃，那么中国的趋势大概就是我YY的这样。不过谁也不知道未来究竟是什么样的。也许一切比你所能想到的更加激动人心，更加波澜壮阔。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}